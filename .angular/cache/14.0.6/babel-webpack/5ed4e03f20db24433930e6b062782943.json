{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nfunction TimepickerComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_7_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.changeMinutes(ctx_r18.minuteStep));\n    });\n    i0.ɵɵelement(2, \"span\", 2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r1.canIncrementMinutes || !ctx_r1.isEditable);\n  }\n}\n\nfunction TimepickerComponent_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_9_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.changeSeconds(ctx_r20.secondsStep));\n    });\n    i0.ɵɵelement(2, \"span\", 2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r3.canIncrementSeconds || !ctx_r3.isEditable);\n  }\n}\n\nfunction TimepickerComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\n\nfunction TimepickerComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0:\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 4)(1, \"input\", 5);\n    i0.ɵɵlistener(\"wheel\", function TimepickerComponent_td_16_Template_input_wheel_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      ctx_r22.prevDef($event);\n      return i0.ɵɵresetView(ctx_r22.changeMinutes(ctx_r22.minuteStep * ctx_r22.wheelSign($event), \"wheel\"));\n    })(\"keydown.ArrowUp\", function TimepickerComponent_td_16_Template_input_keydown_ArrowUp_1_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.changeMinutes(ctx_r24.minuteStep, \"key\"));\n    })(\"keydown.ArrowDown\", function TimepickerComponent_td_16_Template_input_keydown_ArrowDown_1_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.changeMinutes(-ctx_r25.minuteStep, \"key\"));\n    })(\"change\", function TimepickerComponent_td_16_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.updateMinutes($event.target));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"has-error\", ctx_r7.invalidMinutes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r7.invalidMinutes);\n    i0.ɵɵproperty(\"placeholder\", ctx_r7.minutesPlaceholder)(\"readonly\", ctx_r7.readonlyInput)(\"disabled\", ctx_r7.disabled)(\"value\", ctx_r7.minutes);\n    i0.ɵɵattribute(\"aria-label\", ctx_r7.labelMinutes);\n  }\n}\n\nfunction TimepickerComponent_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0:\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 4)(1, \"input\", 5);\n    i0.ɵɵlistener(\"wheel\", function TimepickerComponent_td_18_Template_input_wheel_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      ctx_r27.prevDef($event);\n      return i0.ɵɵresetView(ctx_r27.changeSeconds(ctx_r27.secondsStep * ctx_r27.wheelSign($event), \"wheel\"));\n    })(\"keydown.ArrowUp\", function TimepickerComponent_td_18_Template_input_keydown_ArrowUp_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.changeSeconds(ctx_r29.secondsStep, \"key\"));\n    })(\"keydown.ArrowDown\", function TimepickerComponent_td_18_Template_input_keydown_ArrowDown_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.changeSeconds(-ctx_r30.secondsStep, \"key\"));\n    })(\"change\", function TimepickerComponent_td_18_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.updateSeconds($event.target));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"has-error\", ctx_r9.invalidSeconds);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r9.invalidSeconds);\n    i0.ɵɵproperty(\"placeholder\", ctx_r9.secondsPlaceholder)(\"readonly\", ctx_r9.readonlyInput)(\"disabled\", ctx_r9.disabled)(\"value\", ctx_r9.seconds);\n    i0.ɵɵattribute(\"aria-label\", ctx_r9.labelSeconds);\n  }\n}\n\nfunction TimepickerComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_20_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.toggleMeridian());\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n    i0.ɵɵproperty(\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r11.meridian, \" \");\n  }\n}\n\nfunction TimepickerComponent_td_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_26_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.changeMinutes(-ctx_r34.minuteStep));\n    });\n    i0.ɵɵelement(2, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r13.canDecrementMinutes || !ctx_r13.isEditable);\n  }\n}\n\nfunction TimepickerComponent_td_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_28_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.changeSeconds(-ctx_r36.secondsStep));\n    });\n    i0.ɵɵelement(2, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r15.canDecrementSeconds || !ctx_r15.isEditable);\n  }\n}\n\nfunction TimepickerComponent_td_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\n\nclass TimepickerActions {\n  writeValue(value) {\n    return {\n      type: TimepickerActions.WRITE_VALUE,\n      payload: value\n    };\n  }\n\n  changeHours(event) {\n    return {\n      type: TimepickerActions.CHANGE_HOURS,\n      payload: event\n    };\n  }\n\n  changeMinutes(event) {\n    return {\n      type: TimepickerActions.CHANGE_MINUTES,\n      payload: event\n    };\n  }\n\n  changeSeconds(event) {\n    return {\n      type: TimepickerActions.CHANGE_SECONDS,\n      payload: event\n    };\n  }\n\n  setTime(value) {\n    return {\n      type: TimepickerActions.SET_TIME_UNIT,\n      payload: value\n    };\n  }\n\n  updateControls(value) {\n    return {\n      type: TimepickerActions.UPDATE_CONTROLS,\n      payload: value\n    };\n  }\n\n}\n\nTimepickerActions.WRITE_VALUE = '[timepicker] write value from ng model';\nTimepickerActions.CHANGE_HOURS = '[timepicker] change hours';\nTimepickerActions.CHANGE_MINUTES = '[timepicker] change minutes';\nTimepickerActions.CHANGE_SECONDS = '[timepicker] change seconds';\nTimepickerActions.SET_TIME_UNIT = '[timepicker] set time unit';\nTimepickerActions.UPDATE_CONTROLS = '[timepicker] update controls';\n\nTimepickerActions.ɵfac = function TimepickerActions_Factory(t) {\n  return new (t || TimepickerActions)();\n};\n\nTimepickerActions.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TimepickerActions,\n  factory: TimepickerActions.ɵfac,\n  providedIn: 'platform'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerActions, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'platform'\n    }]\n  }], null, null);\n})();\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\n\nfunction isValidDate(value) {\n  if (!value) {\n    return false;\n  }\n\n  if (value instanceof Date && isNaN(value.getHours())) {\n    return false;\n  }\n\n  if (typeof value === 'string') {\n    return isValidDate(new Date(value));\n  }\n\n  return true;\n}\n\nfunction isValidLimit(controls, newDate) {\n  if (controls.min && newDate < controls.min) {\n    return false;\n  }\n\n  if (controls.max && newDate > controls.max) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction toNumber(value) {\n  if (typeof value === 'undefined') {\n    return NaN;\n  }\n\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, dex);\n}\n\nfunction isNumber(value) {\n  return !isNaN(toNumber(value));\n}\n\nfunction parseHours(value, isPM = false) {\n  const hour = toNumber(value);\n\n  if (isNaN(hour) || hour < 0 || hour > (isPM ? hoursPerDayHalf : hoursPerDay)) {\n    return NaN;\n  }\n\n  return hour;\n}\n\nfunction parseMinutes(value) {\n  const minute = toNumber(value);\n\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n    return NaN;\n  }\n\n  return minute;\n}\n\nfunction parseSeconds(value) {\n  const seconds = toNumber(value);\n\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n    return NaN;\n  }\n\n  return seconds;\n}\n\nfunction parseTime(value) {\n  if (typeof value === 'string') {\n    return new Date(value);\n  }\n\n  return value;\n}\n\nfunction changeTime(value, diff) {\n  if (!value) {\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\n  }\n\n  if (!diff) {\n    return value;\n  }\n\n  let hour = value.getHours();\n  let minutes = value.getMinutes();\n  let seconds = value.getSeconds();\n\n  if (diff.hour) {\n    hour = hour + toNumber(diff.hour);\n  }\n\n  if (diff.minute) {\n    minutes = minutes + toNumber(diff.minute);\n  }\n\n  if (diff.seconds) {\n    seconds = seconds + toNumber(diff.seconds);\n  }\n\n  return createDate(value, hour, minutes, seconds);\n}\n\nfunction setTime(value, opts) {\n  let hour = parseHours(opts.hour);\n  const minute = parseMinutes(opts.minute);\n  const seconds = parseSeconds(opts.seconds) || 0;\n\n  if (opts.isPM && hour !== 12) {\n    hour += hoursPerDayHalf;\n  }\n\n  if (!value) {\n    if (!isNaN(hour) && !isNaN(minute)) {\n      return createDate(new Date(), hour, minute, seconds);\n    }\n\n    return value;\n  }\n\n  if (isNaN(hour) || isNaN(minute)) {\n    return value;\n  }\n\n  return createDate(value, hour, minute, seconds);\n}\n\nfunction createDate(value, hours, minutes, seconds) {\n  const newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), hours, minutes, seconds, value.getMilliseconds()); // #3139 ensure date part remains unchanged\n\n  newValue.setFullYear(value.getFullYear());\n  newValue.setMonth(value.getMonth());\n  newValue.setDate(value.getDate());\n  return newValue;\n}\n\nfunction padNumber(value) {\n  const _value = value.toString();\n\n  if (_value.length > 1) {\n    return _value;\n  }\n\n  return `0${_value}`;\n}\n\nfunction isHourInputValid(hours, isPM) {\n  return !isNaN(parseHours(hours, isPM));\n}\n\nfunction isMinuteInputValid(minutes) {\n  return !isNaN(parseMinutes(minutes));\n}\n\nfunction isSecondInputValid(seconds) {\n  return !isNaN(parseSeconds(seconds));\n}\n\nfunction isInputLimitValid(diff, max, min) {\n  const newDate = setTime(new Date(), diff);\n\n  if (!newDate) {\n    return false;\n  }\n\n  if (max && newDate > max) {\n    return false;\n  }\n\n  if (min && newDate < min) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isOneOfDatesEmpty(hours, minutes, seconds) {\n  return hours.length === 0 || minutes.length === 0 || seconds.length === 0;\n}\n\nfunction isInputValid(hours, minutes = '0', seconds = '0', isPM) {\n  return isHourInputValid(hours, isPM) && isMinuteInputValid(minutes) && isSecondInputValid(seconds);\n}\n\nfunction canChangeValue(state, event) {\n  if (state.readonlyInput || state.disabled) {\n    return false;\n  }\n\n  if (event) {\n    if (event.source === 'wheel' && !state.mousewheel) {\n      return false;\n    }\n\n    if (event.source === 'key' && !state.arrowkeys) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction canChangeHours(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementHours) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementHours) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction canChangeMinutes(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementMinutes) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementMinutes) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction canChangeSeconds(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementSeconds) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementSeconds) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction getControlsValue(state) {\n  const {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  } = state;\n  return {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  };\n}\n\nfunction timepickerControls(value, state) {\n  const hoursPerDay = 24;\n  const hoursPerDayHalf = 12;\n  const {\n    min,\n    max,\n    hourStep,\n    minuteStep,\n    secondsStep,\n    showSeconds\n  } = state;\n  const res = {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n    canToggleMeridian: true\n  };\n\n  if (!value) {\n    return res;\n  } // compare dates\n\n\n  if (max) {\n    const _newHour = changeTime(value, {\n      hour: hourStep\n    });\n\n    res.canIncrementHours = max > _newHour && value.getHours() + hourStep < hoursPerDay;\n\n    if (!res.canIncrementHours) {\n      const _newMinutes = changeTime(value, {\n        minute: minuteStep\n      });\n\n      res.canIncrementMinutes = showSeconds ? max > _newMinutes : max >= _newMinutes;\n    }\n\n    if (!res.canIncrementMinutes) {\n      const _newSeconds = changeTime(value, {\n        seconds: secondsStep\n      });\n\n      res.canIncrementSeconds = max >= _newSeconds;\n    }\n\n    if (value.getHours() < hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, {\n        hour: hoursPerDayHalf\n      }) < max;\n    }\n  }\n\n  if (min) {\n    const _newHour = changeTime(value, {\n      hour: -hourStep\n    });\n\n    res.canDecrementHours = min < _newHour;\n\n    if (!res.canDecrementHours) {\n      const _newMinutes = changeTime(value, {\n        minute: -minuteStep\n      });\n\n      res.canDecrementMinutes = showSeconds ? min < _newMinutes : min <= _newMinutes;\n    }\n\n    if (!res.canDecrementMinutes) {\n      const _newSeconds = changeTime(value, {\n        seconds: -secondsStep\n      });\n\n      res.canDecrementSeconds = min <= _newSeconds;\n    }\n\n    if (value.getHours() >= hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, {\n        hour: -hoursPerDayHalf\n      }) > min;\n    }\n  }\n\n  return res;\n}\n/** Provides default configuration values for timepicker */\n\n\nclass TimepickerConfig {\n  constructor() {\n    /** hours change step */\n    this.hourStep = 1;\n    /** minutes change step */\n\n    this.minuteStep = 5;\n    /** seconds changes step */\n\n    this.secondsStep = 10;\n    /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n\n    this.showMeridian = true;\n    /** meridian labels based on locale */\n\n    this.meridians = ['AM', 'PM'];\n    /** if true hours and minutes fields will be readonly */\n\n    this.readonlyInput = false;\n    /** if true hours and minutes fields will be disabled */\n\n    this.disabled = false;\n    /** if true emptyTime is not marked as invalid */\n\n    this.allowEmptyTime = false;\n    /** if true scroll inside hours and minutes inputs will change time */\n\n    this.mousewheel = true;\n    /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n\n    this.arrowkeys = true;\n    /** if true spinner arrows above and below the inputs will be shown */\n\n    this.showSpinners = true;\n    /** show seconds in timepicker */\n\n    this.showSeconds = false;\n    /** show minutes in timepicker */\n\n    this.showMinutes = true;\n    /** placeholder for hours field in timepicker */\n\n    this.hoursPlaceholder = 'HH';\n    /** placeholder for minutes field in timepicker */\n\n    this.minutesPlaceholder = 'MM';\n    /** placeholder for seconds field in timepicker */\n\n    this.secondsPlaceholder = 'SS';\n    /** hours aria label */\n\n    this.ariaLabelHours = 'hours';\n    /** minutes aria label */\n\n    this.ariaLabelMinutes = 'minutes';\n    /** seconds aria label */\n\n    this.ariaLabelSeconds = 'seconds';\n  }\n\n}\n\nTimepickerConfig.ɵfac = function TimepickerConfig_Factory(t) {\n  return new (t || TimepickerConfig)();\n};\n\nTimepickerConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TimepickerConfig,\n  factory: TimepickerConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nconst initialState = {\n  value: void 0,\n  config: new TimepickerConfig(),\n  controls: {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n    canToggleMeridian: true\n  }\n};\n\nfunction timepickerReducer(state = initialState, action) {\n  switch (action.type) {\n    case TimepickerActions.WRITE_VALUE:\n      {\n        return Object.assign({}, state, {\n          value: action.payload\n        });\n      }\n\n    case TimepickerActions.CHANGE_HOURS:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeHours(action.payload, state.controls)) {\n          return state;\n        }\n\n        const _newTime = changeTime(state.value, {\n          hour: action.payload.step\n        });\n\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n\n    case TimepickerActions.CHANGE_MINUTES:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeMinutes(action.payload, state.controls)) {\n          return state;\n        }\n\n        const _newTime = changeTime(state.value, {\n          minute: action.payload.step\n        });\n\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n\n    case TimepickerActions.CHANGE_SECONDS:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeSeconds(action.payload, state.controls)) {\n          return state;\n        }\n\n        const _newTime = changeTime(state.value, {\n          seconds: action.payload.step\n        });\n\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n\n    case TimepickerActions.SET_TIME_UNIT:\n      {\n        if (!canChangeValue(state.config)) {\n          return state;\n        }\n\n        const _newTime = setTime(state.value, action.payload);\n\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n\n    case TimepickerActions.UPDATE_CONTROLS:\n      {\n        const _newControlsState = timepickerControls(state.value, action.payload);\n\n        const _newState = {\n          value: state.value,\n          config: action.payload,\n          controls: _newControlsState\n        };\n\n        if (state.config.showMeridian !== _newState.config.showMeridian) {\n          if (state.value) {\n            _newState.value = new Date(state.value);\n          }\n        }\n\n        return Object.assign({}, state, _newState);\n      }\n\n    default:\n      return state;\n  }\n}\n\nclass TimepickerStore extends MiniStore {\n  constructor() {\n    const _dispatcher = new BehaviorSubject({\n      type: '[mini-ngrx] dispatcher init'\n    });\n\n    const state = new MiniState(initialState, _dispatcher, timepickerReducer);\n    super(_dispatcher, timepickerReducer, state);\n  }\n\n}\n\nTimepickerStore.ɵfac = function TimepickerStore_Factory(t) {\n  return new (t || TimepickerStore)();\n};\n\nTimepickerStore.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TimepickerStore,\n  factory: TimepickerStore.ɵfac,\n  providedIn: 'platform'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerStore, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'platform'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nconst TIMEPICKER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TimepickerComponent),\n  multi: true\n};\n\nclass TimepickerComponent {\n  constructor(_config, _cd, _store, _timepickerActions) {\n    this._cd = _cd;\n    this._store = _store;\n    this._timepickerActions = _timepickerActions;\n    /** hours change step */\n\n    this.hourStep = 1;\n    /** minutes change step */\n\n    this.minuteStep = 5;\n    /** seconds change step */\n\n    this.secondsStep = 10;\n    /** if true hours and minutes fields will be readonly */\n\n    this.readonlyInput = false;\n    /** if true hours and minutes fields will be disabled */\n\n    this.disabled = false;\n    /** if true scroll inside hours and minutes inputs will change time */\n\n    this.mousewheel = true;\n    /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n\n    this.arrowkeys = true;\n    /** if true spinner arrows above and below the inputs will be shown */\n\n    this.showSpinners = true;\n    /** if true meridian button will be shown */\n\n    this.showMeridian = true;\n    /** show minutes in timepicker */\n\n    this.showMinutes = true;\n    /** show seconds in timepicker */\n\n    this.showSeconds = false;\n    /** meridian labels based on locale */\n\n    this.meridians = ['AM', 'PM'];\n    /** placeholder for hours field in timepicker */\n\n    this.hoursPlaceholder = 'HH';\n    /** placeholder for minutes field in timepicker */\n\n    this.minutesPlaceholder = 'MM';\n    /** placeholder for seconds field in timepicker */\n\n    this.secondsPlaceholder = 'SS';\n    /** emits true if value is a valid date */\n\n    this.isValid = new EventEmitter();\n    /** emits value of meridian*/\n\n    this.meridianChange = new EventEmitter(); // ui variables\n\n    this.hours = '';\n    this.minutes = '';\n    this.seconds = '';\n    this.meridian = ''; // min\\max validation for input fields\n\n    this.invalidHours = false;\n    this.invalidMinutes = false;\n    this.invalidSeconds = false; // aria-label variables\n\n    this.labelHours = 'hours';\n    this.labelMinutes = 'minutes';\n    this.labelSeconds = 'seconds'; // time picker controls state\n\n    this.canIncrementHours = true;\n    this.canIncrementMinutes = true;\n    this.canIncrementSeconds = true;\n    this.canDecrementHours = true;\n    this.canDecrementMinutes = true;\n    this.canDecrementSeconds = true;\n    this.canToggleMeridian = true; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    this.onChange = Function.prototype; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    this.onTouched = Function.prototype;\n    this.config = _config;\n    Object.assign(this, this.config);\n    this.timepickerSub = _store.select(state => state.value).subscribe(value => {\n      // update UI values if date changed\n      this._renderTime(value);\n\n      this.onChange(value);\n\n      this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n    });\n\n    _store.select(state => state.controls).subscribe(controlsState => {\n      const isTimepickerInputValid = isInputValid(this.hours, this.minutes, this.seconds, this.isPM());\n      const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n      this.isValid.emit(isValid);\n      Object.assign(this, controlsState);\n\n      _cd.markForCheck();\n    });\n  }\n  /** @deprecated - please use `isEditable` instead */\n\n\n  get isSpinnersVisible() {\n    return this.showSpinners && !this.readonlyInput;\n  }\n\n  get isEditable() {\n    return !(this.readonlyInput || this.disabled);\n  }\n\n  resetValidation() {\n    this.invalidHours = false;\n    this.invalidMinutes = false;\n    this.invalidSeconds = false;\n  }\n\n  isPM() {\n    return this.showMeridian && this.meridian === this.meridians[1];\n  }\n\n  prevDef($event) {\n    $event.preventDefault();\n  }\n\n  wheelSign($event) {\n    return Math.sign($event.deltaY || 0) * -1;\n  }\n\n  ngOnChanges() {\n    this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n  }\n\n  changeHours(step, source = '') {\n    this.resetValidation();\n\n    this._store.dispatch(this._timepickerActions.changeHours({\n      step,\n      source\n    }));\n  }\n\n  changeMinutes(step, source = '') {\n    this.resetValidation();\n\n    this._store.dispatch(this._timepickerActions.changeMinutes({\n      step,\n      source\n    }));\n  }\n\n  changeSeconds(step, source = '') {\n    this.resetValidation();\n\n    this._store.dispatch(this._timepickerActions.changeSeconds({\n      step,\n      source\n    }));\n  }\n\n  updateHours(target) {\n    this.resetValidation();\n    this.hours = target.value;\n    const isTimepickerInputValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n\n    if (!isValid) {\n      this.invalidHours = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n\n    this._updateTime();\n  }\n\n  updateMinutes(target) {\n    this.resetValidation();\n    this.minutes = target.value;\n    const isTimepickerInputValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n\n    if (!isValid) {\n      this.invalidMinutes = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n\n    this._updateTime();\n  }\n\n  updateSeconds(target) {\n    this.resetValidation();\n    this.seconds = target.value;\n    const isTimepickerInputValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n\n    if (!isValid) {\n      this.invalidSeconds = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n\n    this._updateTime();\n  }\n\n  isValidLimit() {\n    return isInputLimitValid({\n      hour: this.hours,\n      minute: this.minutes,\n      seconds: this.seconds,\n      isPM: this.isPM()\n    }, this.max, this.min);\n  }\n\n  isOneOfDatesIsEmpty() {\n    return isOneOfDatesEmpty(this.hours, this.minutes, this.seconds);\n  }\n\n  _updateTime() {\n    const _seconds = this.showSeconds ? this.seconds : void 0;\n\n    const _minutes = this.showMinutes ? this.minutes : void 0;\n\n    const isTimepickerInputValid = isInputValid(this.hours, _minutes, _seconds, this.isPM());\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n\n    if (!isValid) {\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n\n    this._store.dispatch(this._timepickerActions.setTime({\n      hour: this.hours,\n      minute: this.minutes,\n      seconds: this.seconds,\n      isPM: this.isPM()\n    }));\n  }\n\n  toggleMeridian() {\n    if (!this.showMeridian || !this.isEditable) {\n      return;\n    }\n\n    const _hoursPerDayHalf = 12;\n\n    this._store.dispatch(this._timepickerActions.changeHours({\n      step: _hoursPerDayHalf,\n      source: ''\n    }));\n  }\n  /**\n   * Write a new value to the element.\n   */\n\n\n  writeValue(obj) {\n    if (isValidDate(obj)) {\n      this.resetValidation();\n\n      this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n    } else if (obj == null) {\n      this._store.dispatch(this._timepickerActions.writeValue());\n    }\n  }\n  /**\n   * Set the function to be called when the control receives a change event.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  /**\n   * Set the function to be called when the control receives a touch event.\n   */\n\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * This function is called when the control status changes to or from \"disabled\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n\n    this._cd.markForCheck();\n  }\n\n  ngOnDestroy() {\n    this.timepickerSub?.unsubscribe();\n  }\n\n  _renderTime(value) {\n    if (!value || !isValidDate(value)) {\n      this.hours = '';\n      this.minutes = '';\n      this.seconds = '';\n      this.meridian = this.meridians[0];\n      this.meridianChange.emit(this.meridian);\n      return;\n    }\n\n    const _value = parseTime(value);\n\n    if (!_value) {\n      return;\n    }\n\n    const _hoursPerDayHalf = 12;\n\n    let _hours = _value.getHours();\n\n    if (this.showMeridian) {\n      this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n      this.meridianChange.emit(this.meridian);\n      _hours = _hours % _hoursPerDayHalf; // should be 12 PM, not 00 PM\n\n      if (_hours === 0) {\n        _hours = _hoursPerDayHalf;\n      }\n    }\n\n    this.hours = padNumber(_hours);\n    this.minutes = padNumber(_value.getMinutes());\n    this.seconds = padNumber(_value.getUTCSeconds());\n  }\n\n}\n\nTimepickerComponent.ɵfac = function TimepickerComponent_Factory(t) {\n  return new (t || TimepickerComponent)(i0.ɵɵdirectiveInject(TimepickerConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(TimepickerStore), i0.ɵɵdirectiveInject(TimepickerActions));\n};\n\nTimepickerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TimepickerComponent,\n  selectors: [[\"timepicker\"]],\n  inputs: {\n    hourStep: \"hourStep\",\n    minuteStep: \"minuteStep\",\n    secondsStep: \"secondsStep\",\n    readonlyInput: \"readonlyInput\",\n    disabled: \"disabled\",\n    mousewheel: \"mousewheel\",\n    arrowkeys: \"arrowkeys\",\n    showSpinners: \"showSpinners\",\n    showMeridian: \"showMeridian\",\n    showMinutes: \"showMinutes\",\n    showSeconds: \"showSeconds\",\n    meridians: \"meridians\",\n    min: \"min\",\n    max: \"max\",\n    hoursPlaceholder: \"hoursPlaceholder\",\n    minutesPlaceholder: \"minutesPlaceholder\",\n    secondsPlaceholder: \"secondsPlaceholder\"\n  },\n  outputs: {\n    isValid: \"isValid\",\n    meridianChange: \"meridianChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore]), i0.ɵɵNgOnChangesFeature],\n  decls: 31,\n  vars: 33,\n  consts: [[1, \"text-center\", 3, \"hidden\"], [1, \"btn\", \"btn-link\", 3, \"click\"], [1, \"bs-chevron\", \"bs-chevron-up\"], [4, \"ngIf\"], [1, \"form-group\", \"mb-3\"], [\"type\", \"text\", \"maxlength\", \"2\", 1, \"form-control\", \"text-center\", \"bs-timepicker-field\", 3, \"placeholder\", \"readonly\", \"disabled\", \"value\", \"wheel\", \"keydown.ArrowUp\", \"keydown.ArrowDown\", \"change\"], [\"class\", \"form-group mb-3\", 3, \"has-error\", 4, \"ngIf\"], [1, \"bs-chevron\", \"bs-chevron-down\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", \"text-center\", 3, \"disabled\", \"click\"]],\n  template: function TimepickerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"tbody\")(2, \"tr\", 0)(3, \"td\")(4, \"a\", 1);\n      i0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_4_listener() {\n        return ctx.changeHours(ctx.hourStep);\n      });\n      i0.ɵɵelement(5, \"span\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(6, TimepickerComponent_td_6_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(7, TimepickerComponent_td_7_Template, 3, 2, \"td\", 3);\n      i0.ɵɵtemplate(8, TimepickerComponent_td_8_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(9, TimepickerComponent_td_9_Template, 3, 2, \"td\", 3);\n      i0.ɵɵtemplate(10, TimepickerComponent_td_10_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(11, TimepickerComponent_td_11_Template, 1, 0, \"td\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"tr\")(13, \"td\", 4)(14, \"input\", 5);\n      i0.ɵɵlistener(\"wheel\", function TimepickerComponent_Template_input_wheel_14_listener($event) {\n        ctx.prevDef($event);\n        return ctx.changeHours(ctx.hourStep * ctx.wheelSign($event), \"wheel\");\n      })(\"keydown.ArrowUp\", function TimepickerComponent_Template_input_keydown_ArrowUp_14_listener() {\n        return ctx.changeHours(ctx.hourStep, \"key\");\n      })(\"keydown.ArrowDown\", function TimepickerComponent_Template_input_keydown_ArrowDown_14_listener() {\n        return ctx.changeHours(-ctx.hourStep, \"key\");\n      })(\"change\", function TimepickerComponent_Template_input_change_14_listener($event) {\n        return ctx.updateHours($event.target);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, TimepickerComponent_td_15_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(16, TimepickerComponent_td_16_Template, 2, 9, \"td\", 6);\n      i0.ɵɵtemplate(17, TimepickerComponent_td_17_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(18, TimepickerComponent_td_18_Template, 2, 9, \"td\", 6);\n      i0.ɵɵtemplate(19, TimepickerComponent_td_19_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(20, TimepickerComponent_td_20_Template, 3, 4, \"td\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"tr\", 0)(22, \"td\")(23, \"a\", 1);\n      i0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_23_listener() {\n        return ctx.changeHours(-ctx.hourStep);\n      });\n      i0.ɵɵelement(24, \"span\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(25, TimepickerComponent_td_25_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(26, TimepickerComponent_td_26_Template, 3, 2, \"td\", 3);\n      i0.ɵɵtemplate(27, TimepickerComponent_td_27_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(28, TimepickerComponent_td_28_Template, 3, 2, \"td\", 3);\n      i0.ɵɵtemplate(29, TimepickerComponent_td_29_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(30, TimepickerComponent_td_30_Template, 1, 0, \"td\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !ctx.showSpinners);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"disabled\", !ctx.canIncrementHours || !ctx.isEditable);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"has-error\", ctx.invalidHours);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.invalidHours);\n      i0.ɵɵproperty(\"placeholder\", ctx.hoursPlaceholder)(\"readonly\", ctx.readonlyInput)(\"disabled\", ctx.disabled)(\"value\", ctx.hours);\n      i0.ɵɵattribute(\"aria-label\", ctx.labelHours);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hidden\", !ctx.showSpinners);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"disabled\", !ctx.canDecrementHours || !ctx.isEditable);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n    }\n  },\n  dependencies: [i4.NgIf],\n  styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'timepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\n      styles: [`\n    .bs-chevron {\n      border-style: solid;\n      display: block;\n      width: 9px;\n      height: 9px;\n      position: relative;\n      border-width: 3px 0px 0 3px;\n    }\n\n    .bs-chevron-up {\n      -webkit-transform: rotate(45deg);\n      transform: rotate(45deg);\n      top: 2px;\n    }\n\n    .bs-chevron-down {\n      -webkit-transform: rotate(-135deg);\n      transform: rotate(-135deg);\n      top: -2px;\n    }\n\n    .bs-timepicker-field {\n      width: 65px;\n      padding: .375rem .55rem;\n    }\n  `],\n      encapsulation: ViewEncapsulation.None,\n      template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: TimepickerConfig\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: TimepickerStore\n    }, {\n      type: TimepickerActions\n    }];\n  }, {\n    hourStep: [{\n      type: Input\n    }],\n    minuteStep: [{\n      type: Input\n    }],\n    secondsStep: [{\n      type: Input\n    }],\n    readonlyInput: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    mousewheel: [{\n      type: Input\n    }],\n    arrowkeys: [{\n      type: Input\n    }],\n    showSpinners: [{\n      type: Input\n    }],\n    showMeridian: [{\n      type: Input\n    }],\n    showMinutes: [{\n      type: Input\n    }],\n    showSeconds: [{\n      type: Input\n    }],\n    meridians: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    hoursPlaceholder: [{\n      type: Input\n    }],\n    minutesPlaceholder: [{\n      type: Input\n    }],\n    secondsPlaceholder: [{\n      type: Input\n    }],\n    isValid: [{\n      type: Output\n    }],\n    meridianChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass TimepickerModule {\n  static forRoot() {\n    return {\n      ngModule: TimepickerModule,\n      providers: [TimepickerActions, TimepickerStore]\n    };\n  }\n\n}\n\nTimepickerModule.ɵfac = function TimepickerModule_Factory(t) {\n  return new (t || TimepickerModule)();\n};\n\nTimepickerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TimepickerModule\n});\nTimepickerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [TimepickerStore],\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [TimepickerComponent],\n      exports: [TimepickerComponent],\n      providers: [TimepickerStore]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TimepickerActions, TimepickerComponent, TimepickerConfig, TimepickerModule, TimepickerStore };","map":{"version":3,"names":["i0","Injectable","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","NgModule","NG_VALUE_ACCESSOR","BehaviorSubject","MiniStore","MiniState","i4","CommonModule","TimepickerActions","writeValue","value","type","WRITE_VALUE","payload","changeHours","event","CHANGE_HOURS","changeMinutes","CHANGE_MINUTES","changeSeconds","CHANGE_SECONDS","setTime","SET_TIME_UNIT","updateControls","UPDATE_CONTROLS","ɵfac","ɵprov","args","providedIn","dex","hoursPerDay","hoursPerDayHalf","minutesPerHour","secondsPerMinute","isValidDate","Date","isNaN","getHours","isValidLimit","controls","newDate","min","max","toNumber","NaN","parseInt","isNumber","parseHours","isPM","hour","parseMinutes","minute","parseSeconds","seconds","parseTime","changeTime","diff","createDate","minutes","getMinutes","getSeconds","opts","hours","newValue","getFullYear","getMonth","getDate","getMilliseconds","setFullYear","setMonth","setDate","padNumber","_value","toString","length","isHourInputValid","isMinuteInputValid","isSecondInputValid","isInputLimitValid","isOneOfDatesEmpty","isInputValid","canChangeValue","state","readonlyInput","disabled","source","mousewheel","arrowkeys","canChangeHours","step","canIncrementHours","canDecrementHours","canChangeMinutes","canIncrementMinutes","canDecrementMinutes","canChangeSeconds","canIncrementSeconds","canDecrementSeconds","getControlsValue","hourStep","minuteStep","secondsStep","showSpinners","showMeridian","showSeconds","meridians","timepickerControls","res","canToggleMeridian","_newHour","_newMinutes","_newSeconds","TimepickerConfig","constructor","allowEmptyTime","showMinutes","hoursPlaceholder","minutesPlaceholder","secondsPlaceholder","ariaLabelHours","ariaLabelMinutes","ariaLabelSeconds","initialState","config","timepickerReducer","action","Object","assign","_newTime","_newControlsState","_newState","TimepickerStore","_dispatcher","TIMEPICKER_CONTROL_VALUE_ACCESSOR","provide","useExisting","TimepickerComponent","multi","_config","_cd","_store","_timepickerActions","isValid","meridianChange","meridian","invalidHours","invalidMinutes","invalidSeconds","labelHours","labelMinutes","labelSeconds","onChange","Function","prototype","onTouched","timepickerSub","select","subscribe","_renderTime","dispatch","controlsState","isTimepickerInputValid","isOneOfDatesIsEmpty","emit","markForCheck","isSpinnersVisible","isEditable","resetValidation","prevDef","$event","preventDefault","wheelSign","Math","sign","deltaY","ngOnChanges","updateHours","target","_updateTime","updateMinutes","updateSeconds","_seconds","_minutes","toggleMeridian","_hoursPerDayHalf","obj","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","ngOnDestroy","unsubscribe","_hours","getUTCSeconds","ChangeDetectorRef","ɵcmp","NgIf","selector","changeDetection","OnPush","providers","styles","encapsulation","None","template","TimepickerModule","forRoot","ngModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/aiman/Documents/Projects/fairwindscu-customer-app/node_modules/ngx-bootstrap/timepicker/fesm2020/ngx-bootstrap-timepicker.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass TimepickerActions {\n    writeValue(value) {\n        return {\n            type: TimepickerActions.WRITE_VALUE,\n            payload: value\n        };\n    }\n    changeHours(event) {\n        return {\n            type: TimepickerActions.CHANGE_HOURS,\n            payload: event\n        };\n    }\n    changeMinutes(event) {\n        return {\n            type: TimepickerActions.CHANGE_MINUTES,\n            payload: event\n        };\n    }\n    changeSeconds(event) {\n        return {\n            type: TimepickerActions.CHANGE_SECONDS,\n            payload: event\n        };\n    }\n    setTime(value) {\n        return {\n            type: TimepickerActions.SET_TIME_UNIT,\n            payload: value\n        };\n    }\n    updateControls(value) {\n        return {\n            type: TimepickerActions.UPDATE_CONTROLS,\n            payload: value\n        };\n    }\n}\nTimepickerActions.WRITE_VALUE = '[timepicker] write value from ng model';\nTimepickerActions.CHANGE_HOURS = '[timepicker] change hours';\nTimepickerActions.CHANGE_MINUTES = '[timepicker] change minutes';\nTimepickerActions.CHANGE_SECONDS = '[timepicker] change seconds';\nTimepickerActions.SET_TIME_UNIT = '[timepicker] set time unit';\nTimepickerActions.UPDATE_CONTROLS = '[timepicker] update controls';\nTimepickerActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TimepickerActions, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTimepickerActions.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TimepickerActions, providedIn: 'platform' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TimepickerActions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'platform' }]\n        }] });\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\nfunction isValidDate(value) {\n    if (!value) {\n        return false;\n    }\n    if (value instanceof Date && isNaN(value.getHours())) {\n        return false;\n    }\n    if (typeof value === 'string') {\n        return isValidDate(new Date(value));\n    }\n    return true;\n}\nfunction isValidLimit(controls, newDate) {\n    if (controls.min && newDate < controls.min) {\n        return false;\n    }\n    if (controls.max && newDate > controls.max) {\n        return false;\n    }\n    return true;\n}\nfunction toNumber(value) {\n    if (typeof value === 'undefined') {\n        return NaN;\n    }\n    if (typeof value === 'number') {\n        return value;\n    }\n    return parseInt(value, dex);\n}\nfunction isNumber(value) {\n    return !isNaN(toNumber(value));\n}\nfunction parseHours(value, isPM = false) {\n    const hour = toNumber(value);\n    if (isNaN(hour) ||\n        hour < 0 ||\n        hour > (isPM ? hoursPerDayHalf : hoursPerDay)) {\n        return NaN;\n    }\n    return hour;\n}\nfunction parseMinutes(value) {\n    const minute = toNumber(value);\n    if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n        return NaN;\n    }\n    return minute;\n}\nfunction parseSeconds(value) {\n    const seconds = toNumber(value);\n    if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n        return NaN;\n    }\n    return seconds;\n}\nfunction parseTime(value) {\n    if (typeof value === 'string') {\n        return new Date(value);\n    }\n    return value;\n}\nfunction changeTime(value, diff) {\n    if (!value) {\n        return changeTime(createDate(new Date(), 0, 0, 0), diff);\n    }\n    if (!diff) {\n        return value;\n    }\n    let hour = value.getHours();\n    let minutes = value.getMinutes();\n    let seconds = value.getSeconds();\n    if (diff.hour) {\n        hour = hour + toNumber(diff.hour);\n    }\n    if (diff.minute) {\n        minutes = minutes + toNumber(diff.minute);\n    }\n    if (diff.seconds) {\n        seconds = seconds + toNumber(diff.seconds);\n    }\n    return createDate(value, hour, minutes, seconds);\n}\nfunction setTime(value, opts) {\n    let hour = parseHours(opts.hour);\n    const minute = parseMinutes(opts.minute);\n    const seconds = parseSeconds(opts.seconds) || 0;\n    if (opts.isPM && hour !== 12) {\n        hour += hoursPerDayHalf;\n    }\n    if (!value) {\n        if (!isNaN(hour) && !isNaN(minute)) {\n            return createDate(new Date(), hour, minute, seconds);\n        }\n        return value;\n    }\n    if (isNaN(hour) || isNaN(minute)) {\n        return value;\n    }\n    return createDate(value, hour, minute, seconds);\n}\nfunction createDate(value, hours, minutes, seconds) {\n    const newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), hours, minutes, seconds, value.getMilliseconds());\n    // #3139 ensure date part remains unchanged\n    newValue.setFullYear(value.getFullYear());\n    newValue.setMonth(value.getMonth());\n    newValue.setDate(value.getDate());\n    return newValue;\n}\nfunction padNumber(value) {\n    const _value = value.toString();\n    if (_value.length > 1) {\n        return _value;\n    }\n    return `0${_value}`;\n}\nfunction isHourInputValid(hours, isPM) {\n    return !isNaN(parseHours(hours, isPM));\n}\nfunction isMinuteInputValid(minutes) {\n    return !isNaN(parseMinutes(minutes));\n}\nfunction isSecondInputValid(seconds) {\n    return !isNaN(parseSeconds(seconds));\n}\nfunction isInputLimitValid(diff, max, min) {\n    const newDate = setTime(new Date(), diff);\n    if (!newDate) {\n        return false;\n    }\n    if (max && newDate > max) {\n        return false;\n    }\n    if (min && newDate < min) {\n        return false;\n    }\n    return true;\n}\nfunction isOneOfDatesEmpty(hours, minutes, seconds) {\n    return hours.length === 0 || minutes.length === 0 || seconds.length === 0;\n}\nfunction isInputValid(hours, minutes = '0', seconds = '0', isPM) {\n    return isHourInputValid(hours, isPM)\n        && isMinuteInputValid(minutes)\n        && isSecondInputValid(seconds);\n}\n\nfunction canChangeValue(state, event) {\n    if (state.readonlyInput || state.disabled) {\n        return false;\n    }\n    if (event) {\n        if (event.source === 'wheel' && !state.mousewheel) {\n            return false;\n        }\n        if (event.source === 'key' && !state.arrowkeys) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction canChangeHours(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementHours) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementHours) {\n        return false;\n    }\n    return true;\n}\nfunction canChangeMinutes(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementMinutes) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementMinutes) {\n        return false;\n    }\n    return true;\n}\nfunction canChangeSeconds(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementSeconds) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementSeconds) {\n        return false;\n    }\n    return true;\n}\nfunction getControlsValue(state) {\n    const { hourStep, minuteStep, secondsStep, readonlyInput, disabled, mousewheel, arrowkeys, showSpinners, showMeridian, showSeconds, meridians, min, max } = state;\n    return {\n        hourStep,\n        minuteStep,\n        secondsStep,\n        readonlyInput,\n        disabled,\n        mousewheel,\n        arrowkeys,\n        showSpinners,\n        showMeridian,\n        showSeconds,\n        meridians,\n        min,\n        max\n    };\n}\nfunction timepickerControls(value, state) {\n    const hoursPerDay = 24;\n    const hoursPerDayHalf = 12;\n    const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n    const res = {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    };\n    if (!value) {\n        return res;\n    }\n    // compare dates\n    if (max) {\n        const _newHour = changeTime(value, { hour: hourStep });\n        res.canIncrementHours = max > _newHour && (value.getHours() + hourStep) < hoursPerDay;\n        if (!res.canIncrementHours) {\n            const _newMinutes = changeTime(value, { minute: minuteStep });\n            res.canIncrementMinutes = showSeconds\n                ? max > _newMinutes\n                : max >= _newMinutes;\n        }\n        if (!res.canIncrementMinutes) {\n            const _newSeconds = changeTime(value, { seconds: secondsStep });\n            res.canIncrementSeconds = max >= _newSeconds;\n        }\n        if (value.getHours() < hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: hoursPerDayHalf }) < max;\n        }\n    }\n    if (min) {\n        const _newHour = changeTime(value, { hour: -hourStep });\n        res.canDecrementHours = min < _newHour;\n        if (!res.canDecrementHours) {\n            const _newMinutes = changeTime(value, { minute: -minuteStep });\n            res.canDecrementMinutes = showSeconds\n                ? min < _newMinutes\n                : min <= _newMinutes;\n        }\n        if (!res.canDecrementMinutes) {\n            const _newSeconds = changeTime(value, { seconds: -secondsStep });\n            res.canDecrementSeconds = min <= _newSeconds;\n        }\n        if (value.getHours() >= hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: -hoursPerDayHalf }) > min;\n        }\n    }\n    return res;\n}\n\n/** Provides default configuration values for timepicker */\nclass TimepickerConfig {\n    constructor() {\n        /** hours change step */\n        this.hourStep = 1;\n        /** minutes change step */\n        this.minuteStep = 5;\n        /** seconds changes step */\n        this.secondsStep = 10;\n        /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n        this.showMeridian = true;\n        /** meridian labels based on locale */\n        this.meridians = ['AM', 'PM'];\n        /** if true hours and minutes fields will be readonly */\n        this.readonlyInput = false;\n        /** if true hours and minutes fields will be disabled */\n        this.disabled = false;\n        /** if true emptyTime is not marked as invalid */\n        this.allowEmptyTime = false;\n        /** if true scroll inside hours and minutes inputs will change time */\n        this.mousewheel = true;\n        /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n        this.arrowkeys = true;\n        /** if true spinner arrows above and below the inputs will be shown */\n        this.showSpinners = true;\n        /** show seconds in timepicker */\n        this.showSeconds = false;\n        /** show minutes in timepicker */\n        this.showMinutes = true;\n        /** placeholder for hours field in timepicker */\n        this.hoursPlaceholder = 'HH';\n        /** placeholder for minutes field in timepicker */\n        this.minutesPlaceholder = 'MM';\n        /** placeholder for seconds field in timepicker */\n        this.secondsPlaceholder = 'SS';\n        /** hours aria label */\n        this.ariaLabelHours = 'hours';\n        /** minutes aria label */\n        this.ariaLabelMinutes = 'minutes';\n        /** seconds aria label */\n        this.ariaLabelSeconds = 'seconds';\n    }\n}\nTimepickerConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TimepickerConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTimepickerConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TimepickerConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TimepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nconst initialState = {\n    value: void 0,\n    config: new TimepickerConfig(),\n    controls: {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    }\n};\nfunction timepickerReducer(state = initialState, action) {\n    switch (action.type) {\n        case TimepickerActions.WRITE_VALUE: {\n            return Object.assign({}, state, { value: action.payload });\n        }\n        case TimepickerActions.CHANGE_HOURS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeHours(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, { hour: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.CHANGE_MINUTES: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeMinutes(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, { minute: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.CHANGE_SECONDS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeSeconds(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, {\n                seconds: action.payload.step\n            });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.SET_TIME_UNIT: {\n            if (!canChangeValue(state.config)) {\n                return state;\n            }\n            const _newTime = setTime(state.value, action.payload);\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.UPDATE_CONTROLS: {\n            const _newControlsState = timepickerControls(state.value, action.payload);\n            const _newState = {\n                value: state.value,\n                config: action.payload,\n                controls: _newControlsState\n            };\n            if (state.config.showMeridian !== _newState.config.showMeridian) {\n                if (state.value) {\n                    _newState.value = new Date(state.value);\n                }\n            }\n            return Object.assign({}, state, _newState);\n        }\n        default:\n            return state;\n    }\n}\n\nclass TimepickerStore extends MiniStore {\n    constructor() {\n        const _dispatcher = new BehaviorSubject({\n            type: '[mini-ngrx] dispatcher init'\n        });\n        const state = new MiniState(initialState, _dispatcher, timepickerReducer);\n        super(_dispatcher, timepickerReducer, state);\n    }\n}\nTimepickerStore.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TimepickerStore, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTimepickerStore.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TimepickerStore, providedIn: 'platform' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TimepickerStore, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'platform' }]\n        }], ctorParameters: function () { return []; } });\n\nconst TIMEPICKER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TimepickerComponent),\n    multi: true\n};\nclass TimepickerComponent {\n    constructor(_config, _cd, _store, _timepickerActions) {\n        this._cd = _cd;\n        this._store = _store;\n        this._timepickerActions = _timepickerActions;\n        /** hours change step */\n        this.hourStep = 1;\n        /** minutes change step */\n        this.minuteStep = 5;\n        /** seconds change step */\n        this.secondsStep = 10;\n        /** if true hours and minutes fields will be readonly */\n        this.readonlyInput = false;\n        /** if true hours and minutes fields will be disabled */\n        this.disabled = false;\n        /** if true scroll inside hours and minutes inputs will change time */\n        this.mousewheel = true;\n        /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n        this.arrowkeys = true;\n        /** if true spinner arrows above and below the inputs will be shown */\n        this.showSpinners = true;\n        /** if true meridian button will be shown */\n        this.showMeridian = true;\n        /** show minutes in timepicker */\n        this.showMinutes = true;\n        /** show seconds in timepicker */\n        this.showSeconds = false;\n        /** meridian labels based on locale */\n        this.meridians = ['AM', 'PM'];\n        /** placeholder for hours field in timepicker */\n        this.hoursPlaceholder = 'HH';\n        /** placeholder for minutes field in timepicker */\n        this.minutesPlaceholder = 'MM';\n        /** placeholder for seconds field in timepicker */\n        this.secondsPlaceholder = 'SS';\n        /** emits true if value is a valid date */\n        this.isValid = new EventEmitter();\n        /** emits value of meridian*/\n        this.meridianChange = new EventEmitter();\n        // ui variables\n        this.hours = '';\n        this.minutes = '';\n        this.seconds = '';\n        this.meridian = '';\n        // min\\max validation for input fields\n        this.invalidHours = false;\n        this.invalidMinutes = false;\n        this.invalidSeconds = false;\n        // aria-label variables\n        this.labelHours = 'hours';\n        this.labelMinutes = 'minutes';\n        this.labelSeconds = 'seconds';\n        // time picker controls state\n        this.canIncrementHours = true;\n        this.canIncrementMinutes = true;\n        this.canIncrementSeconds = true;\n        this.canDecrementHours = true;\n        this.canDecrementMinutes = true;\n        this.canDecrementSeconds = true;\n        this.canToggleMeridian = true;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.onChange = Function.prototype;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.onTouched = Function.prototype;\n        this.config = _config;\n        Object.assign(this, this.config);\n        this.timepickerSub = _store.select(state => state.value)\n            .subscribe((value) => {\n            // update UI values if date changed\n            this._renderTime(value);\n            this.onChange(value);\n            this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n        });\n        _store.select(state => state.controls)\n            .subscribe((controlsState) => {\n            const isTimepickerInputValid = isInputValid(this.hours, this.minutes, this.seconds, this.isPM());\n            const isValid = this.config.allowEmptyTime ?\n                this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n                : isTimepickerInputValid;\n            this.isValid.emit(isValid);\n            Object.assign(this, controlsState);\n            _cd.markForCheck();\n        });\n    }\n    /** @deprecated - please use `isEditable` instead */\n    get isSpinnersVisible() {\n        return this.showSpinners && !this.readonlyInput;\n    }\n    get isEditable() {\n        return !(this.readonlyInput || this.disabled);\n    }\n    resetValidation() {\n        this.invalidHours = false;\n        this.invalidMinutes = false;\n        this.invalidSeconds = false;\n    }\n    isPM() {\n        return this.showMeridian && this.meridian === this.meridians[1];\n    }\n    prevDef($event) {\n        $event.preventDefault();\n    }\n    wheelSign($event) {\n        return Math.sign($event.deltaY || 0) * -1;\n    }\n    ngOnChanges() {\n        this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n    }\n    changeHours(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n    }\n    changeMinutes(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeMinutes({ step, source }));\n    }\n    changeSeconds(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeSeconds({ step, source }));\n    }\n    updateHours(target) {\n        this.resetValidation();\n        this.hours = target.value;\n        const isTimepickerInputValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidHours = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    updateMinutes(target) {\n        this.resetValidation();\n        this.minutes = target.value;\n        const isTimepickerInputValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidMinutes = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    updateSeconds(target) {\n        this.resetValidation();\n        this.seconds = target.value;\n        const isTimepickerInputValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidSeconds = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    isValidLimit() {\n        return isInputLimitValid({\n            hour: this.hours,\n            minute: this.minutes,\n            seconds: this.seconds,\n            isPM: this.isPM()\n        }, this.max, this.min);\n    }\n    isOneOfDatesIsEmpty() {\n        return isOneOfDatesEmpty(this.hours, this.minutes, this.seconds);\n    }\n    _updateTime() {\n        const _seconds = this.showSeconds ? this.seconds : void 0;\n        const _minutes = this.showMinutes ? this.minutes : void 0;\n        const isTimepickerInputValid = isInputValid(this.hours, _minutes, _seconds, this.isPM());\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._store.dispatch(this._timepickerActions.setTime({\n            hour: this.hours,\n            minute: this.minutes,\n            seconds: this.seconds,\n            isPM: this.isPM()\n        }));\n    }\n    toggleMeridian() {\n        if (!this.showMeridian || !this.isEditable) {\n            return;\n        }\n        const _hoursPerDayHalf = 12;\n        this._store.dispatch(this._timepickerActions.changeHours({\n            step: _hoursPerDayHalf,\n            source: ''\n        }));\n    }\n    /**\n     * Write a new value to the element.\n     */\n    writeValue(obj) {\n        if (isValidDate(obj)) {\n            this.resetValidation();\n            this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n        }\n        else if (obj == null) {\n            this._store.dispatch(this._timepickerActions.writeValue());\n        }\n    }\n    /**\n     * Set the function to be called when the control receives a change event.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Set the function to be called when the control receives a touch event.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * This function is called when the control status changes to or from \"disabled\".\n     * Depending on the value, it will enable or disable the appropriate DOM element.\n     *\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._cd.markForCheck();\n    }\n    ngOnDestroy() {\n        this.timepickerSub?.unsubscribe();\n    }\n    _renderTime(value) {\n        if (!value || !isValidDate(value)) {\n            this.hours = '';\n            this.minutes = '';\n            this.seconds = '';\n            this.meridian = this.meridians[0];\n            this.meridianChange.emit(this.meridian);\n            return;\n        }\n        const _value = parseTime(value);\n        if (!_value) {\n            return;\n        }\n        const _hoursPerDayHalf = 12;\n        let _hours = _value.getHours();\n        if (this.showMeridian) {\n            this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n            this.meridianChange.emit(this.meridian);\n            _hours = _hours % _hoursPerDayHalf;\n            // should be 12 PM, not 00 PM\n            if (_hours === 0) {\n                _hours = _hoursPerDayHalf;\n            }\n        }\n        this.hours = padNumber(_hours);\n        this.minutes = padNumber(_value.getMinutes());\n        this.seconds = padNumber(_value.getUTCSeconds());\n    }\n}\nTimepickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TimepickerComponent, deps: [{ token: TimepickerConfig }, { token: i0.ChangeDetectorRef }, { token: TimepickerStore }, { token: TimepickerActions }], target: i0.ɵɵFactoryTarget.Component });\nTimepickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: TimepickerComponent, selector: \"timepicker\", inputs: { hourStep: \"hourStep\", minuteStep: \"minuteStep\", secondsStep: \"secondsStep\", readonlyInput: \"readonlyInput\", disabled: \"disabled\", mousewheel: \"mousewheel\", arrowkeys: \"arrowkeys\", showSpinners: \"showSpinners\", showMeridian: \"showMeridian\", showMinutes: \"showMinutes\", showSeconds: \"showSeconds\", meridians: \"meridians\", min: \"min\", max: \"max\", hoursPlaceholder: \"hoursPlaceholder\", minutesPlaceholder: \"minutesPlaceholder\", secondsPlaceholder: \"secondsPlaceholder\" }, outputs: { isValid: \"isValid\", meridianChange: \"meridianChange\" }, providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore], usesOnChanges: true, ngImport: i0, template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\", styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TimepickerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'timepicker', changeDetection: ChangeDetectionStrategy.OnPush, providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore], styles: [`\n    .bs-chevron {\n      border-style: solid;\n      display: block;\n      width: 9px;\n      height: 9px;\n      position: relative;\n      border-width: 3px 0px 0 3px;\n    }\n\n    .bs-chevron-up {\n      -webkit-transform: rotate(45deg);\n      transform: rotate(45deg);\n      top: 2px;\n    }\n\n    .bs-chevron-down {\n      -webkit-transform: rotate(-135deg);\n      transform: rotate(-135deg);\n      top: -2px;\n    }\n\n    .bs-timepicker-field {\n      width: 65px;\n      padding: .375rem .55rem;\n    }\n  `], encapsulation: ViewEncapsulation.None, template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: function () { return [{ type: TimepickerConfig }, { type: i0.ChangeDetectorRef }, { type: TimepickerStore }, { type: TimepickerActions }]; }, propDecorators: { hourStep: [{\n                type: Input\n            }], minuteStep: [{\n                type: Input\n            }], secondsStep: [{\n                type: Input\n            }], readonlyInput: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], mousewheel: [{\n                type: Input\n            }], arrowkeys: [{\n                type: Input\n            }], showSpinners: [{\n                type: Input\n            }], showMeridian: [{\n                type: Input\n            }], showMinutes: [{\n                type: Input\n            }], showSeconds: [{\n                type: Input\n            }], meridians: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], hoursPlaceholder: [{\n                type: Input\n            }], minutesPlaceholder: [{\n                type: Input\n            }], secondsPlaceholder: [{\n                type: Input\n            }], isValid: [{\n                type: Output\n            }], meridianChange: [{\n                type: Output\n            }] } });\n\nclass TimepickerModule {\n    static forRoot() {\n        return {\n            ngModule: TimepickerModule,\n            providers: [TimepickerActions, TimepickerStore]\n        };\n    }\n}\nTimepickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TimepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTimepickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TimepickerModule, declarations: [TimepickerComponent], imports: [CommonModule], exports: [TimepickerComponent] });\nTimepickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TimepickerModule, providers: [TimepickerStore], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: TimepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [TimepickerComponent],\n                    exports: [TimepickerComponent],\n                    providers: [TimepickerStore]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimepickerActions, TimepickerComponent, TimepickerConfig, TimepickerModule, TimepickerStore };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}