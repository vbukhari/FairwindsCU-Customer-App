{"ast":null,"code":"function mod(n, x) {\n  return (n % x + x) % x;\n}\n\nfunction absFloor(num) {\n  return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\n}\n\nfunction isString(str) {\n  return typeof str === 'string';\n}\n\nfunction isDate(value) {\n  return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\n}\n\nfunction isBoolean(value) {\n  return value === true || value === false;\n}\n\nfunction isDateValid(date) {\n  return date && date.getTime && !isNaN(date.getTime());\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction isFunction(fn) {\n  return fn instanceof Function || Object.prototype.toString.call(fn) === '[object Function]';\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\n\nfunction isArray(input) {\n  return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction hasOwnProp(a\n/*object*/\n, b) {\n  return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction isObject(input\n/*object*/\n) {\n  // IE8 will treat undefined and null as object if it wasn't for\n  // input != null\n  return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n  if (Object.getOwnPropertyNames) {\n    return Object.getOwnPropertyNames(obj).length === 0;\n  }\n\n  let k;\n\n  for (k in obj) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (obj.hasOwnProperty(k)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isUndefined(input) {\n  return input === void 0;\n}\n\nfunction toInt(argumentForCoercion) {\n  const coercedNumber = +argumentForCoercion;\n  let value = 0;\n\n  if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n    value = absFloor(coercedNumber);\n  }\n\n  return value;\n}\n\nconst aliases = {};\nconst _mapUnits = {\n  date: 'day',\n  hour: 'hours',\n  minute: 'minutes',\n  second: 'seconds',\n  millisecond: 'milliseconds'\n};\n\nfunction addUnitAlias(unit, shorthand) {\n  const lowerCase = unit.toLowerCase();\n  let _unit = unit;\n\n  if (lowerCase in _mapUnits) {\n    _unit = _mapUnits[lowerCase];\n  }\n\n  aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = _unit;\n}\n\nfunction normalizeUnits(units) {\n  return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n  const normalizedInput = {};\n  let normalizedProp;\n  let prop;\n\n  for (prop in inputObject) {\n    if (hasOwnProp(inputObject, prop)) {\n      normalizedProp = normalizeUnits(prop);\n\n      if (normalizedProp) {\n        normalizedInput[normalizedProp] = inputObject[prop];\n      }\n    }\n  }\n\n  return normalizedInput;\n} // place in new Date([array])\n\n\nconst YEAR = 0;\nconst MONTH = 1;\nconst DATE = 2;\nconst HOUR = 3;\nconst MINUTE = 4;\nconst SECOND = 5;\nconst MILLISECOND = 6;\nconst WEEK = 7;\nconst WEEKDAY = 8;\n\nfunction zeroFill(num, targetLength, forceSign) {\n  const absNumber = `${Math.abs(num)}`;\n  const zerosToFill = targetLength - absNumber.length;\n  const sign = num >= 0;\n\n  const _sign = sign ? forceSign ? '+' : '' : '-'; // todo: this is crazy slow\n\n\n  const _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\n\n  return _sign + _zeros + absNumber;\n}\n\nconst formatFunctions = {};\nconst formatTokenFunctions = {};\nconst formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g; // token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\n\nfunction addFormatToken(token, padded, ordinal, callback) {\n  if (token) {\n    formatTokenFunctions[token] = callback;\n  }\n\n  if (padded) {\n    formatTokenFunctions[padded[0]] = function () {\n      return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\n    };\n  }\n\n  if (ordinal) {\n    formatTokenFunctions[ordinal] = function (date, opts) {\n      return opts.locale.ordinal(callback.apply(null, arguments), token);\n    };\n  }\n}\n\nfunction makeFormatFunction(format) {\n  const array = format.match(formattingTokens);\n  const length = array.length;\n  const formatArr = new Array(length);\n\n  for (let i = 0; i < length; i++) {\n    formatArr[i] = formatTokenFunctions[array[i]] ? formatTokenFunctions[array[i]] : removeFormattingTokens(array[i]);\n  }\n\n  return function (date, locale, isUTC, offset = 0) {\n    let output = '';\n\n    for (let j = 0; j < length; j++) {\n      output += isFunction(formatArr[j]) ? formatArr[j].call(null, date, {\n        format,\n        locale,\n        isUTC,\n        offset\n      }) : formatArr[j];\n    }\n\n    return output;\n  };\n}\n\nfunction removeFormattingTokens(input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|\\]$/g, '');\n  }\n\n  return input.replace(/\\\\/g, '');\n} // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction createUTCDate(y, m, d) {\n  // eslint-disable-next-line prefer-rest-params\n  const date = new Date(Date.UTC.apply(null, arguments)); // the Date.UTC function remaps years 0-99 to 1900-1999\n\n  if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n    date.setUTCFullYear(y);\n  }\n\n  return date;\n}\n\nfunction createDate(y, m = 0, d = 1, h = 0, M = 0, s = 0, ms = 0) {\n  const date = new Date(y, m, d, h, M, s, ms); // the date constructor remaps years 0-99 to 1900-1999\n\n  if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n    date.setFullYear(y);\n  }\n\n  return date;\n}\n\nfunction getHours(date, isUTC = false) {\n  return isUTC ? date.getUTCHours() : date.getHours();\n}\n\nfunction getMinutes(date, isUTC = false) {\n  return isUTC ? date.getUTCMinutes() : date.getMinutes();\n}\n\nfunction getSeconds(date, isUTC = false) {\n  return isUTC ? date.getUTCSeconds() : date.getSeconds();\n}\n\nfunction getMilliseconds(date, isUTC = false) {\n  return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\n}\n\nfunction getTime(date) {\n  return date.getTime();\n}\n\nfunction getDay(date, isUTC = false) {\n  return isUTC ? date.getUTCDay() : date.getDay();\n}\n\nfunction getDate(date, isUTC = false) {\n  return isUTC ? date.getUTCDate() : date.getDate();\n}\n\nfunction getMonth(date, isUTC = false) {\n  return isUTC ? date.getUTCMonth() : date.getMonth();\n}\n\nfunction getFullYear(date, isUTC = false) {\n  return isUTC ? date.getUTCFullYear() : date.getFullYear();\n}\n\nfunction getUnixTime(date) {\n  return Math.floor(date.valueOf() / 1000);\n}\n\nfunction unix(date) {\n  return Math.floor(date.valueOf() / 1000);\n}\n\nfunction getFirstDayOfMonth(date) {\n  return createDate(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes(), date.getSeconds());\n}\n\nfunction daysInMonth$1(date) {\n  return _daysInMonth(date.getFullYear(), date.getMonth());\n}\n\nfunction _daysInMonth(year, month) {\n  return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\nfunction isFirstDayOfWeek(date, firstDayOfWeek) {\n  return date.getDay() === Number(firstDayOfWeek);\n}\n\nfunction isSameMonth(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\n}\n\nfunction isSameYear(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return getFullYear(date1) === getFullYear(date2);\n}\n\nfunction isSameDay$1(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return isSameYear(date1, date2) && isSameMonth(date1, date2) && getDate(date1) === getDate(date2);\n}\n\nconst match1 = /\\d/; //       0 - 9\n\nconst match2 = /\\d\\d/; //      00 - 99\n\nconst match3 = /\\d{3}/; //     000 - 999\n\nconst match4 = /\\d{4}/; //    0000 - 9999\n\nconst match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\nconst match1to2 = /\\d\\d?/; //       0 - 99\n\nconst match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\nconst match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\nconst match1to3 = /\\d{1,3}/; //       0 - 999\n\nconst match1to4 = /\\d{1,4}/; //       0 - 9999\n\nconst match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\nconst matchUnsigned = /\\d+/; //       0 - inf\n\nconst matchSigned = /[+-]?\\d+/; //    -inf - inf\n\nconst matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\nconst matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nconst matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\n\nconst matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\nconst regexes = {};\n\nfunction addRegexToken(token, regex, strictRegex) {\n  if (isFunction(regex)) {\n    regexes[token] = regex;\n    return;\n  }\n\n  regexes[token] = function (isStrict, locale) {\n    return isStrict && strictRegex ? strictRegex : regex;\n  };\n}\n\nfunction getParseRegexForToken(token, locale) {\n  const _strict = false;\n\n  if (!hasOwnProp(regexes, token)) {\n    return new RegExp(unescapeFormat(token));\n  }\n\n  return regexes[token](_strict, locale);\n} // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\nfunction unescapeFormat(str) {\n  return regexEscape(str.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4));\n}\n\nfunction regexEscape(str) {\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nconst tokens = {};\n\nfunction addParseToken(token, callback) {\n  const _token = isString(token) ? [token] : token;\n\n  let func = callback;\n\n  if (isNumber(callback)) {\n    func = function (input, array, config) {\n      array[callback] = toInt(input);\n      return config;\n    };\n  }\n\n  if (isArray(_token) && isFunction(func)) {\n    let i;\n\n    for (i = 0; i < _token.length; i++) {\n      tokens[_token[i]] = func;\n    }\n  }\n}\n\nfunction addWeekParseToken(token, callback) {\n  addParseToken(token, function (input, array, config, _token) {\n    config._w = config._w || {};\n    return callback(input, config._w, config, _token);\n  });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n  if (input != null && hasOwnProp(tokens, token)) {\n    tokens[token](input, config._a, config, token);\n  }\n\n  return config;\n}\n\nconst priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n  priorities[unit] = priority;\n}\n/*\nexport function getPrioritizedUnits(unitsObj) {\n  const units = [];\n  let unit;\n  for (unit in unitsObj) {\n    if (unitsObj.hasOwnProperty(unit)) {\n      units.push({ unit, priority: priorities[unit] });\n    }\n  }\n  units.sort(function (a, b) {\n    return a.priority - b.priority;\n  });\n\n  return units;\n}\n*/\n\n\nfunction initDayOfMonth() {\n  // FORMATTING\n  addFormatToken('D', ['DD', 2, false], 'Do', function (date, opts) {\n    return getDate(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIOROITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array, config) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n    return config;\n  });\n}\n\nfunction defaultParsingFlags() {\n  // We need to deep clone this object.\n  return {\n    empty: false,\n    unusedTokens: [],\n    unusedInput: [],\n    overflow: -2,\n    charsLeftOver: 0,\n    nullInput: false,\n    invalidMonth: null,\n    invalidFormat: false,\n    userInvalidated: false,\n    iso: false,\n    parsedDateParts: [],\n    meridiem: null,\n    rfc2822: false,\n    weekdayMismatch: false\n  };\n}\n\nfunction getParsingFlags(config) {\n  if (config._pf == null) {\n    config._pf = defaultParsingFlags();\n  }\n\n  return config._pf;\n} // FORMATTING\n\n\nfunction getYear(date, opts) {\n  if (opts.locale.getFullYear) {\n    return opts.locale.getFullYear(date, opts.isUTC).toString();\n  }\n\n  return getFullYear(date, opts.isUTC).toString();\n}\n\nfunction initYear() {\n  addFormatToken('Y', null, null, function (date, opts) {\n    const y = getFullYear(date, opts.isUTC);\n    return y <= 9999 ? y.toString(10) : `+${y}`;\n  });\n  addFormatToken(null, ['YY', 2, false], null, function (date, opts) {\n    return (getFullYear(date, opts.isUTC) % 100).toString(10);\n  });\n  addFormatToken(null, ['YYYY', 4, false], null, getYear);\n  addFormatToken(null, ['YYYYY', 5, false], null, getYear);\n  addFormatToken(null, ['YYYYYY', 6, true], null, getYear); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array, config) {\n    array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\n    return config;\n  });\n  addParseToken('YY', function (input, array, config) {\n    array[YEAR] = parseTwoDigitYear(input);\n    return config;\n  });\n  addParseToken('Y', function (input, array, config) {\n    array[YEAR] = parseInt(input, 10);\n    return config;\n  });\n}\n\nfunction parseTwoDigitYear(input) {\n  return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n}\n\nfunction daysInYear(year) {\n  return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n} // todo: this is duplicate, source in date-getters.ts\n\n\nfunction daysInMonth(year, month) {\n  if (isNaN(year) || isNaN(month)) {\n    return NaN;\n  }\n\n  const modMonth = mod(month, 12);\n\n  const _year = year + (month - modMonth) / 12;\n\n  return modMonth === 1 ? isLeapYear(_year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n}\n\nfunction initMonth() {\n  // FORMATTING\n  addFormatToken('M', ['MM', 2, false], 'Mo', function (date, opts) {\n    return (getMonth(date, opts.isUTC) + 1).toString(10);\n  });\n  addFormatToken('MMM', null, null, function (date, opts) {\n    return opts.locale.monthsShort(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('MMMM', null, null, function (date, opts) {\n    return opts.locale.months(date, opts.format, opts.isUTC);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array, config) {\n    array[MONTH] = toInt(input) - 1;\n    return config;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    const month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = !!input;\n    }\n\n    return config;\n  });\n}\n\nconst defaultTimeUnit = {\n  year: 0,\n  month: 0,\n  day: 0,\n  hour: 0,\n  minute: 0,\n  seconds: 0\n};\n\nfunction shiftDate(date, unit) {\n  const _unit = Object.assign({}, defaultTimeUnit, unit);\n\n  const year = date.getFullYear() + (_unit.year || 0);\n  const month = date.getMonth() + (_unit.month || 0);\n  let day = date.getDate() + (_unit.day || 0);\n\n  if (_unit.month && !_unit.day) {\n    day = Math.min(day, daysInMonth(year, month));\n  }\n\n  return createDate(year, month, day, date.getHours() + (_unit.hour || 0), date.getMinutes() + (_unit.minute || 0), date.getSeconds() + (_unit.seconds || 0));\n}\n\nfunction setFullDate(date, unit) {\n  return createDate(getNum(date.getFullYear(), unit.year), getNum(date.getMonth(), unit.month), 1, // day, to avoid issue with wrong months selection at the end of current month (#5371)\n  getNum(date.getHours(), unit.hour), getNum(date.getMinutes(), unit.minute), getNum(date.getSeconds(), unit.seconds), getNum(date.getMilliseconds(), unit.milliseconds));\n}\n\nfunction getNum(def, num) {\n  return isNumber(num) ? num : def;\n}\n\nfunction setFullYear(date, value, isUTC) {\n  const _month = getMonth(date, isUTC);\n\n  const _date = getDate(date, isUTC);\n\n  const _year = getFullYear(date, isUTC);\n\n  if (isLeapYear(_year) && _month === 1 && _date === 29) {\n    const _daysInMonth = daysInMonth(value, _month);\n\n    isUTC ? date.setUTCFullYear(value, _month, _daysInMonth) : date.setFullYear(value, _month, _daysInMonth);\n  }\n\n  isUTC ? date.setUTCFullYear(value) : date.setFullYear(value);\n  return date;\n}\n\nfunction setMonth(date, value, isUTC) {\n  const dayOfMonth = Math.min(getDate(date), daysInMonth(getFullYear(date), value));\n  isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\n  return date;\n}\n\nfunction setDay(date, value, isUTC) {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n  return date;\n}\n\nfunction setHours(date, value, isUTC) {\n  isUTC ? date.setUTCHours(value) : date.setHours(value);\n  return date;\n}\n\nfunction setMinutes(date, value, isUTC) {\n  isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\n  return date;\n}\n\nfunction setSeconds(date, value, isUTC) {\n  isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\n  return date;\n}\n\nfunction setMilliseconds(date, value, isUTC) {\n  isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\n  return date;\n}\n\nfunction setDate(date, value, isUTC) {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n  return date;\n}\n\nfunction setTime(date, value) {\n  date.setTime(value);\n  return date;\n} // fastest way to clone date\n// https://jsperf.com/clone-date-object2\n\n\nfunction cloneDate(date) {\n  return new Date(date.getTime());\n}\n\nfunction startOf(date, unit, isUTC) {\n  const _date = cloneDate(date); // the following switch intentionally omits break keywords\n  // to utilize falling through the cases.\n\n\n  switch (unit) {\n    case 'year':\n      setMonth(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'quarter':\n    case 'month':\n      setDate(_date, 1, isUTC);\n\n    /* falls through */\n\n    case 'week':\n    case 'isoWeek':\n    case 'day':\n    case 'date':\n      setHours(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'hours':\n      setMinutes(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'minutes':\n      setSeconds(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'seconds':\n      setMilliseconds(_date, 0, isUTC);\n  } // weeks are a special case\n\n\n  if (unit === 'week') {\n    setLocaleDayOfWeek(_date, 0, {\n      isUTC\n    });\n  }\n\n  if (unit === 'isoWeek') {\n    setISODayOfWeek(_date, 1);\n  } // quarters are also special\n\n\n  if (unit === 'quarter') {\n    setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\n  }\n\n  return _date;\n}\n\nfunction endOf(date, unit, isUTC) {\n  let _unit = unit; // 'date' is an alias for 'day', so it should be considered as such.\n\n  if (_unit === 'date') {\n    _unit = 'day';\n  }\n\n  const start = startOf(date, _unit, isUTC);\n\n  const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\n\n  const res = subtract(_step, 1, 'milliseconds', isUTC);\n  return res;\n}\n\nfunction initDayOfYear() {\n  // FORMATTING\n  addFormatToken('DDD', ['DDDD', 3, false], 'DDDo', function (date) {\n    return getDayOfYear(date).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4);\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n    return config;\n  });\n}\n\nfunction getDayOfYear(date, isUTC) {\n  const date1 = +startOf(date, 'day', isUTC);\n  const date2 = +startOf(date, 'year', isUTC);\n  const someDate = date1 - date2;\n  const oneDay = 1000 * 60 * 60 * 24;\n  return Math.round(someDate / oneDay) + 1;\n}\n\nfunction setDayOfYear(date, input) {\n  const dayOfYear = getDayOfYear(date);\n  return add(date, input - dayOfYear, 'day');\n}\n/**\n *\n * @param {number} year\n * @param {number} dow - start-of-first-week\n * @param {number} doy - start-of-year\n * @returns {number}\n */\n\n\nfunction firstWeekOffset(year, dow, doy) {\n  // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n  const fwd = dow - doy + 7; // first-week day local weekday -- which local weekday is fwd\n\n  const fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\n  return -fwdlw + fwd - 1;\n} // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n  const localWeekday = (7 + weekday - dow) % 7;\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n  let resYear;\n  let resDayOfYear;\n\n  if (dayOfYear <= 0) {\n    resYear = year - 1;\n    resDayOfYear = daysInYear(resYear) + dayOfYear;\n  } else if (dayOfYear > daysInYear(year)) {\n    resYear = year + 1;\n    resDayOfYear = dayOfYear - daysInYear(year);\n  } else {\n    resYear = year;\n    resDayOfYear = dayOfYear;\n  }\n\n  return {\n    year: resYear,\n    dayOfYear: resDayOfYear\n  };\n}\n\nfunction weekOfYear(date, dow, doy, isUTC) {\n  const weekOffset = firstWeekOffset(getFullYear(date, isUTC), dow, doy);\n  const week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\n  let resWeek;\n  let resYear;\n\n  if (week < 1) {\n    resYear = getFullYear(date, isUTC) - 1;\n    resWeek = week + weeksInYear(resYear, dow, doy);\n  } else if (week > weeksInYear(getFullYear(date, isUTC), dow, doy)) {\n    resWeek = week - weeksInYear(getFullYear(date, isUTC), dow, doy);\n    resYear = getFullYear(date, isUTC) + 1;\n  } else {\n    resYear = getFullYear(date, isUTC);\n    resWeek = week;\n  }\n\n  return {\n    week: resWeek,\n    year: resYear\n  };\n}\n\nfunction weeksInYear(year, dow, doy) {\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nconst defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nconst defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nconst defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nconst defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nconst defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nconst defaultLongDateFormat = {\n  LTS: 'h:mm:ss A',\n  LT: 'h:mm A',\n  L: 'MM/DD/YYYY',\n  LL: 'MMMM D, YYYY',\n  LLL: 'MMMM D, YYYY h:mm A',\n  LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\nconst defaultOrdinal = '%d';\nconst defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\nconst defaultMonthsShortRegex = matchWord;\nconst defaultMonthsRegex = matchWord;\n\nclass Locale {\n  constructor(config) {\n    if (config) {\n      this.set(config);\n    }\n  }\n\n  set(config) {\n    let confKey;\n\n    for (confKey in config) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (!config.hasOwnProperty(confKey)) {\n        continue;\n      }\n\n      const prop = config[confKey];\n      const key = isFunction(prop) ? confKey : `_${confKey}`;\n      this[key] = prop;\n    }\n\n    this._config = config;\n  }\n\n  calendar(key, date, now) {\n    const output = this._calendar[key] || this._calendar[\"sameElse\"];\n    return isFunction(output) ? output.call(null, date, now) : output;\n  }\n\n  longDateFormat(key) {\n    const format = this._longDateFormat[key];\n\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  get invalidDate() {\n    return this._invalidDate;\n  }\n\n  set invalidDate(val) {\n    this._invalidDate = val;\n  }\n\n  ordinal(num, token) {\n    return this._ordinal.replace('%d', num.toString(10));\n  }\n\n  preparse(str, format) {\n    return str;\n  }\n\n  getFullYear(date, isUTC = false) {\n    return getFullYear(date, isUTC);\n  }\n\n  postformat(str) {\n    return str;\n  }\n\n  relativeTime(num, withoutSuffix, str, isFuture) {\n    const output = this._relativeTime[str];\n    return isFunction(output) ? output(num, withoutSuffix, str, isFuture) : output.replace(/%d/i, num.toString(10));\n  }\n\n  pastFuture(diff, output) {\n    const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  months(date, format, isUTC = false) {\n    if (!date) {\n      return isArray(this._months) ? this._months : this._months.standalone;\n    }\n\n    if (isArray(this._months)) {\n      return this._months[getMonth(date, isUTC)];\n    }\n\n    const key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone';\n    return this._months[key][getMonth(date, isUTC)];\n  }\n\n  monthsShort(date, format, isUTC = false) {\n    if (!date) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone;\n    }\n\n    if (isArray(this._monthsShort)) {\n      return this._monthsShort[getMonth(date, isUTC)];\n    }\n\n    const key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\n    return this._monthsShort[key][getMonth(date, isUTC)];\n  }\n\n  monthsParse(monthName, format, strict) {\n    let date;\n    let regex;\n\n    if (this._monthsParseExact) {\n      return this.handleMonthStrictParse(monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    let i;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(Date.UTC(2000, i));\n\n      if (strict && !this._longMonthsParse[i]) {\n        const _months = this.months(date, '', true).replace('.', '');\n\n        const _shortMonths = this.monthsShort(date, '', true).replace('.', '');\n\n        this._longMonthsParse[i] = new RegExp(`^${_months}$`, 'i');\n        this._shortMonthsParse[i] = new RegExp(`^${_shortMonths}$`, 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = `^${this.months(date, '', true)}|^${this.monthsShort(date, '', true)}`;\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // testing the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      }\n\n      if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      }\n\n      if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  }\n\n  monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      }\n\n      return this._monthsRegex;\n    }\n\n    if (!hasOwnProp(this, '_monthsRegex')) {\n      this._monthsRegex = defaultMonthsRegex;\n    }\n\n    return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n  }\n\n  monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      }\n\n      return this._monthsShortRegex;\n    }\n\n    if (!hasOwnProp(this, '_monthsShortRegex')) {\n      this._monthsShortRegex = defaultMonthsShortRegex;\n    }\n\n    return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n  }\n  /** Week */\n\n\n  week(date, isUTC) {\n    return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\n  }\n\n  firstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  firstDayOfYear() {\n    return this._week.doy;\n  }\n\n  weekdays(date, format, isUTC) {\n    if (!date) {\n      return isArray(this._weekdays) ? this._weekdays : this._weekdays.standalone;\n    }\n\n    if (isArray(this._weekdays)) {\n      return this._weekdays[getDay(date, isUTC)];\n    }\n\n    const _key = this._weekdays.isFormat.test(format) ? 'format' : 'standalone';\n\n    return this._weekdays[_key][getDay(date, isUTC)];\n  }\n\n  weekdaysMin(date, format, isUTC) {\n    return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\n  }\n\n  weekdaysShort(date, format, isUTC) {\n    return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\n  } // proto.weekdaysParse  =        localeWeekdaysParse;\n\n\n  weekdaysParse(weekdayName, format, strict) {\n    let i;\n    let regex;\n\n    if (this._weekdaysParseExact) {\n      return this.handleWeekStrictParse(weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // fix: here is the issue\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(date, '', true).replace('.', '\\.?')}$`, 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = `^${this.weekdays(date, '', true)}|^${this.weekdaysShort(date, '', true)}|^${this.weekdaysMin(date, '', true)}`;\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n\n      if (!isArray(this._fullWeekdaysParse) || !isArray(this._shortWeekdaysParse) || !isArray(this._minWeekdaysParse) || !isArray(this._weekdaysParse)) {\n        return;\n      } // testing the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // proto.weekdaysRegex       =        weekdaysRegex;\n\n\n  weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = matchWord;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  } // proto.weekdaysShortRegex  =        weekdaysShortRegex;\n  // proto.weekdaysMinRegex    =        weekdaysMinRegex;\n\n\n  weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = matchWord;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = matchWord;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  isPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return input.toLowerCase().charAt(0) === 'p';\n  }\n\n  meridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    }\n\n    return isLower ? 'am' : 'AM';\n  }\n\n  formatLongDate(key) {\n    this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\n    const format = this._longDateFormat[key];\n\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, val => {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  handleMonthStrictParse(monthName, format, strict) {\n    const llc = monthName.toLocaleLowerCase();\n    let i;\n    let ii;\n    let mom;\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = new Date(2000, i);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = this._shortMonthsParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n\n      ii = this._longMonthsParse.indexOf(llc);\n      return ii !== -1 ? ii : null;\n    }\n\n    if (format === 'MMM') {\n      ii = this._shortMonthsParse.indexOf(llc);\n\n      if (ii !== -1) {\n        return ii;\n      }\n\n      ii = this._longMonthsParse.indexOf(llc);\n      return ii !== -1 ? ii : null;\n    }\n\n    ii = this._longMonthsParse.indexOf(llc);\n\n    if (ii !== -1) {\n      return ii;\n    }\n\n    ii = this._shortMonthsParse.indexOf(llc);\n    return ii !== -1 ? ii : null;\n  }\n\n  handleWeekStrictParse(weekdayName, format, strict) {\n    let ii;\n    const llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n      let i;\n\n      for (i = 0; i < 7; ++i) {\n        const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n        this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\n      }\n    }\n\n    if (!isArray(this._weekdaysParse) || !isArray(this._shortWeekdaysParse) || !isArray(this._minWeekdaysParse)) {\n      return;\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._shortWeekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._minWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._weekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._minWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._weekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  computeMonthsParse() {\n    const shortPieces = [];\n    const longPieces = [];\n    const mixedPieces = [];\n    let date;\n    let i;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(2000, i);\n      shortPieces.push(this.monthsShort(date, ''));\n      longPieces.push(this.months(date, ''));\n      mixedPieces.push(this.months(date, ''));\n      mixedPieces.push(this.monthsShort(date, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n  }\n\n  computeWeekdaysParse() {\n    const minPieces = [];\n    const shortPieces = [];\n    const longPieces = [];\n    const mixedPieces = [];\n    let i;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // let mom = createUTC([2000, 1]).day(i);\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n      const minp = this.weekdaysMin(date);\n      const shortp = this.weekdaysShort(date);\n      const longp = this.weekdays(date);\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n    this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\n  }\n\n}\n\nfunction cmpLenRev(a, b) {\n  return b.length - a.length;\n}\n\nconst defaultCalendar = {\n  sameDay: '[Today at] LT',\n  nextDay: '[Tomorrow at] LT',\n  nextWeek: 'dddd [at] LT',\n  lastDay: '[Yesterday at] LT',\n  lastWeek: '[Last] dddd [at] LT',\n  sameElse: 'L'\n};\nconst defaultInvalidDate = 'Invalid date';\nconst defaultLocaleWeek = {\n  dow: 0,\n  doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n};\nconst defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nconst defaultRelativeTime = {\n  future: 'in %s',\n  past: '%s ago',\n  s: 'a few seconds',\n  ss: '%d seconds',\n  m: 'a minute',\n  mm: '%d minutes',\n  h: 'an hour',\n  hh: '%d hours',\n  d: 'a day',\n  dd: '%d days',\n  M: 'a month',\n  MM: '%d months',\n  y: 'a year',\n  yy: '%d years'\n};\nconst baseConfig = {\n  calendar: defaultCalendar,\n  longDateFormat: defaultLongDateFormat,\n  invalidDate: defaultInvalidDate,\n  ordinal: defaultOrdinal,\n  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n  relativeTime: defaultRelativeTime,\n  months: defaultLocaleMonths,\n  monthsShort: defaultLocaleMonthsShort,\n  week: defaultLocaleWeek,\n  weekdays: defaultLocaleWeekdays,\n  weekdaysMin: defaultLocaleWeekdaysMin,\n  weekdaysShort: defaultLocaleWeekdaysShort,\n  meridiemParse: defaultLocaleMeridiemParse\n}; // compare two arrays, return the number of differences\n\nfunction compareArrays(array1, array2, dontConvert) {\n  const len = Math.min(array1.length, array2.length);\n  const lengthDiff = Math.abs(array1.length - array2.length);\n  let diffs = 0;\n  let i;\n\n  for (i = 0; i < len; i++) {\n    if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n      diffs++;\n    }\n  }\n\n  return diffs + lengthDiff;\n} // FORMATTING\n\n\nfunction initWeek() {\n  addFormatToken('w', ['ww', 2, false], 'wo', function (date, opts) {\n    return getWeek(date, opts.locale).toString(10);\n  });\n  addFormatToken('W', ['WW', 2, false], 'Wo', function (date) {\n    return getISOWeek(date).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n    return config;\n  }); // export function getSetWeek (input) {\n  //   var week = this.localeData().week(this);\n  //   return input == null ? week : this.add((input - week) * 7, 'd');\n  // }\n}\n\nfunction setWeek(date, input, locale = getLocale()) {\n  const week = getWeek(date, locale);\n  return add(date, (input - week) * 7, 'day');\n}\n\nfunction getWeek(date, locale = getLocale(), isUTC) {\n  return locale.week(date, isUTC);\n} // export function getSetISOWeek (input) {\n//   var week = weekOfYear(this, 1, 4).week;\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\n\n\nfunction setISOWeek(date, input) {\n  const week = getISOWeek(date);\n  return add(date, (input - week) * 7, 'day');\n}\n\nfunction getISOWeek(date, isUTC) {\n  return weekOfYear(date, 1, 4, isUTC).week;\n} // FORMATTING\n\n\nfunction initWeekYear() {\n  addFormatToken(null, ['gg', 2, false], null, function (date, opts) {\n    // return this.weekYear() % 100;\n    return (getWeekYear(date, opts.locale) % 100).toString();\n  });\n  addFormatToken(null, ['GG', 2, false], null, function (date) {\n    // return this.isoWeekYear() % 100;\n    return (getISOWeekYear(date) % 100).toString();\n  });\n  addWeekYearFormatToken('gggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\n  addWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n    return config;\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = parseTwoDigitYear(input);\n    return config;\n  });\n}\n\nfunction addWeekYearFormatToken(token, getter) {\n  addFormatToken(null, [token, token.length, false], null, getter);\n}\n\nfunction _getWeekYearFormatCb(date, opts) {\n  return getWeekYear(date, opts.locale).toString();\n}\n\nfunction _getISOWeekYearFormatCb(date) {\n  return getISOWeekYear(date).toString();\n} // MOMENTS\n\n\nfunction getSetWeekYear(date, input, locale = getLocale(), isUTC) {\n  return getSetWeekYearHelper(date, input, // this.week(),\n  getWeek(date, locale, isUTC), // this.weekday(),\n  getLocaleDayOfWeek(date, locale, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC);\n}\n\nfunction getWeekYear(date, locale = getLocale(), isUTC) {\n  return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\n}\n\nfunction getSetISOWeekYear(date, input, isUTC) {\n  return getSetWeekYearHelper(date, input, getISOWeek(date, isUTC), getISODayOfWeek(date, isUTC), 1, 4);\n}\n\nfunction getISOWeekYear(date, isUTC) {\n  return weekOfYear(date, 1, 4, isUTC).year;\n}\n\nfunction getISOWeeksInYear(date, isUTC) {\n  return weeksInYear(getFullYear(date, isUTC), 1, 4);\n}\n\nfunction getWeeksInYear(date, isUTC, locale = getLocale()) {\n  return weeksInYear(getFullYear(date, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear());\n}\n\nfunction getSetWeekYearHelper(date, input, week, weekday, dow, doy, isUTC) {\n  if (!input) {\n    return getWeekYear(date, void 0, isUTC);\n  }\n\n  const weeksTarget = weeksInYear(input, dow, doy);\n\n  const _week = week > weeksTarget ? weeksTarget : week;\n\n  return setWeekAll(date, input, _week, weekday, dow, doy);\n}\n\nfunction setWeekAll(date, weekYear, week, weekday, dow, doy) {\n  const dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n\n  const _date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n  setFullYear(date, getFullYear(_date, true), true);\n  setMonth(date, getMonth(_date, true), true);\n  setDate(date, getDate(_date, true), true);\n  return date;\n} // todo: add support for timezones\n\n\nfunction initTimezone() {\n  // FORMATTING\n  addFormatToken('z', null, null, function (date, opts) {\n    return opts.isUTC ? 'UTC' : '';\n  });\n  addFormatToken('zz', null, null, function (date, opts) {\n    return opts.isUTC ? 'Coordinated Universal Time' : '';\n  });\n} // MOMENTS\n\n\nfunction getZoneAbbr(isUTC) {\n  return isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName(isUTC) {\n  return isUTC ? 'Coordinated Universal Time' : '';\n}\n\nfunction initTimestamp() {\n  // FORMATTING\n  addFormatToken('X', null, null, function (date) {\n    return unix(date).toString(10);\n  });\n  addFormatToken('x', null, null, function (date) {\n    return date.valueOf().toString(10);\n  }); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input) * 1000);\n    return config;\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n    return config;\n  });\n}\n\nfunction initSecond() {\n  // FORMATTING\n  addFormatToken('s', ['ss', 2, false], null, function (date, opts) {\n    return getSeconds(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND);\n}\n\nfunction initQuarter() {\n  // FORMATTING\n  addFormatToken('Q', null, 'Qo', function (date, opts) {\n    return getQuarter(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array, config) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n    return config;\n  });\n} // MOMENTS\n\n\nfunction getQuarter(date, isUTC = false) {\n  return Math.ceil((getMonth(date, isUTC) + 1) / 3);\n}\n\nfunction setQuarter(date, quarter, isUTC) {\n  return setMonth(date, (quarter - 1) * 3 + getMonth(date, isUTC) % 3, isUTC);\n} // export function getSetQuarter(input) {\n//   return input == null\n//     ? Math.ceil((this.month() + 1) / 3)\n//     : this.month((input - 1) * 3 + this.month() % 3);\n// }\n// FORMATTING\n\n\nfunction addOffsetFormatToken(token, separator) {\n  addFormatToken(token, null, null, function (date, config) {\n    let offset = getUTCOffset(date, {\n      _isUTC: config.isUTC,\n      _offset: config.offset\n    });\n    let sign = '+';\n\n    if (offset < 0) {\n      offset = -offset;\n      sign = '-';\n    }\n\n    return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n  });\n}\n\nfunction initOffset() {\n  addOffsetFormatToken('Z', ':');\n  addOffsetFormatToken('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n    return config;\n  });\n} // HELPERS\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\n\n\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, str) {\n  const matches = (str || '').match(matcher);\n\n  if (matches === null) {\n    return null;\n  }\n\n  const chunk = matches[matches.length - 1];\n  const parts = chunk.match(chunkOffset) || ['-', '0', '0'];\n  const minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\n\n  const _min = parts[0] === '+' ? minutes : -minutes;\n\n  return minutes === 0 ? 0 : _min;\n} // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\nfunction cloneWithOffset(input, date, config = {}) {\n  if (!config._isUTC) {\n    return input;\n  }\n\n  const res = cloneDate(date); // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\n\n  const offsetDiff = (config._offset || 0) * 60000;\n  const diff = input.valueOf() - res.valueOf() + offsetDiff; // Use low-level api, because this fn is low-level api.\n\n  res.setTime(res.valueOf() + diff); // todo: add timezone handling\n  // hooks.updateOffset(res, false);\n\n  return res;\n}\n\nfunction getDateOffset(date) {\n  // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n  // https://github.com/moment/moment/pull/1871\n  return -Math.round(date.getTimezoneOffset() / 15) * 15;\n} // HOOKS\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\n// todo: it's from moment timezones\n// hooks.updateOffset = function () {\n// };\n// MOMENTS\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\n\n\nfunction getUTCOffset(date, config = {}) {\n  const _offset = config._offset || 0;\n\n  return config._isUTC ? _offset : getDateOffset(date);\n}\n\nfunction setUTCOffset(date, input, keepLocalTime, keepMinutes, config = {}) {\n  const offset = config._offset || 0;\n  let localAdjust;\n  let _input = input;\n  let _date = date;\n\n  if (isString(_input)) {\n    _input = offsetFromString(matchShortOffset, _input);\n\n    if (_input === null) {\n      return _date;\n    }\n  } else if (isNumber(_input) && Math.abs(_input) < 16 && !keepMinutes) {\n    _input = _input * 60;\n  }\n\n  if (!config._isUTC && keepLocalTime) {\n    localAdjust = getDateOffset(_date);\n  }\n\n  config._offset = _input;\n  config._isUTC = true;\n\n  if (localAdjust != null) {\n    _date = add(_date, localAdjust, 'minutes');\n  }\n\n  if (offset !== _input) {\n    if (!keepLocalTime || config._changeInProgress) {\n      _date = add(_date, _input - offset, 'minutes', config._isUTC); // addSubtract(this, createDuration(_input - offset, 'm'), 1, false);\n    } else if (!config._changeInProgress) {\n      config._changeInProgress = true; // todo: add timezone handling\n      // hooks.updateOffset(this, true);\n\n      config._changeInProgress = null;\n    }\n  }\n\n  return _date;\n}\n/*\nexport function getSetZone(input, keepLocalTime) {\n  if (input != null) {\n    if (typeof input !== 'string') {\n      input = -input;\n    }\n\n    this.utcOffset(input, keepLocalTime);\n\n    return this;\n  } else {\n    return -this.utcOffset();\n  }\n}\n*/\n\n\nfunction setOffsetToUTC(date, keepLocalTime) {\n  return setUTCOffset(date, 0, keepLocalTime);\n}\n\nfunction isDaylightSavingTime(date) {\n  return getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 0)) || getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 5));\n}\n/*export function setOffsetToLocal(date: Date, isUTC?: boolean, keepLocalTime?: boolean) {\n  if (this._isUTC) {\n    this.utcOffset(0, keepLocalTime);\n    this._isUTC = false;\n\n    if (keepLocalTime) {\n      this.subtract(getDateOffset(this), 'm');\n    }\n  }\n  return this;\n}*/\n\n\nfunction setOffsetToParsedOffset(date, input, config = {}) {\n  if (config._tzm != null) {\n    return setUTCOffset(date, config._tzm, false, true, config);\n  }\n\n  if (isString(input)) {\n    const tZone = offsetFromString(matchOffset, input);\n\n    if (tZone != null) {\n      return setUTCOffset(date, tZone, false, false, config);\n    }\n\n    return setUTCOffset(date, 0, true, false, config);\n  }\n\n  return date;\n}\n\nfunction hasAlignedHourOffset(date, input) {\n  const _input = input ? getUTCOffset(input, {\n    _isUTC: false\n  }) : 0;\n\n  return (getUTCOffset(date) - _input) % 60 === 0;\n} // DEPRECATED\n\n/*export function isDaylightSavingTimeShifted() {\n  if (!isUndefined(this._isDSTShifted)) {\n    return this._isDSTShifted;\n  }\n\n  const c = {};\n\n  copyConfig(c, this);\n  c = prepareConfig(c);\n\n  if (c._a) {\n    const other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n    this._isDSTShifted = this.isValid() &&\n      compareArrays(c._a, other.toArray()) > 0;\n  } else {\n    this._isDSTShifted = false;\n  }\n\n  return this._isDSTShifted;\n}*/\n// in Khronos\n\n/*export function isLocal() {\n  return this.isValid() ? !this._isUTC : false;\n}\n\nexport function isUtcOffset() {\n  return this.isValid() ? this._isUTC : false;\n}\n\nexport function isUtc() {\n  return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}*/\n\n\nfunction initMinute() {\n  // FORMATTING\n  addFormatToken('m', ['mm', 2, false], null, function (date, opts) {\n    return getMinutes(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE);\n} // FORMATTING\n\n\nfunction initMillisecond() {\n  addFormatToken('S', null, null, function (date, opts) {\n    return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\n  });\n  addFormatToken(null, ['SS', 2, false], null, function (date, opts) {\n    return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\n  });\n  addFormatToken(null, ['SSS', 3, false], null, function (date, opts) {\n    return getMilliseconds(date, opts.isUTC).toString(10);\n  });\n  addFormatToken(null, ['SSSS', 4, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\n  });\n  addFormatToken(null, ['SSSSS', 5, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\n  });\n  addFormatToken(null, ['SSSSSS', 6, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSS', 7, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSSS', 8, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSSSS', 9, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  let token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array, config) {\n    array[MILLISECOND] = toInt(parseFloat(`0.${input}`) * 1000);\n    return config;\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n}\n\nfunction initHour() {\n  // FORMATTING\n  function hFormat(date, isUTC) {\n    return getHours(date, isUTC) % 12 || 12;\n  }\n\n  function kFormat(date, isUTC) {\n    return getHours(date, isUTC) || 24;\n  }\n\n  addFormatToken('H', ['HH', 2, false], null, function (date, opts) {\n    return getHours(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('h', ['hh', 2, false], null, function (date, opts) {\n    return hFormat(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('k', ['kk', 2, false], null, function (date, opts) {\n    return kFormat(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('hmm', null, null, function (date, opts) {\n    const _h = hFormat(date, opts.isUTC);\n\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n    return `${_h}${_mm}`;\n  });\n  addFormatToken('hmmss', null, null, function (date, opts) {\n    const _h = hFormat(date, opts.isUTC);\n\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n    const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n    return `${_h}${_mm}${_ss}`;\n  });\n  addFormatToken('Hmm', null, null, function (date, opts) {\n    const _H = getHours(date, opts.isUTC);\n\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n    return `${_H}${_mm}`;\n  });\n  addFormatToken('Hmmss', null, null, function (date, opts) {\n    const _H = getHours(date, opts.isUTC);\n\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n    const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n    return `${_H}${_mm}${_ss}`;\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, null, null, function (date, opts) {\n      return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    const kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n    return config;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n    return config;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    const pos1 = input.length - 4;\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    return config;\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    const pos1 = input.length - 4;\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    return config;\n  });\n} // internal storage for locale config files\n\n\nconst locales = {};\nconst localeFamilies = {};\nlet globalLocale;\n\nfunction normalizeLocale(key) {\n  return key ? key.toLowerCase().replace('_', '-') : key;\n} // pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least,\n// but move to the next array item if it's a more specific variant than the current root\n\n\nfunction chooseLocale(names) {\n  let next;\n  let locale;\n  let i = 0;\n\n  while (i < names.length) {\n    const split = normalizeLocale(names[i]).split('-');\n    let j = split.length;\n    next = normalizeLocale(names[i + 1]);\n    next = next ? next.split('-') : null;\n\n    while (j > 0) {\n      locale = loadLocale(split.slice(0, j).join('-'));\n\n      if (locale) {\n        return locale;\n      }\n\n      if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n        // the next array item is better than a shallower substring of this one\n        break;\n      }\n\n      j--;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n  const res = Object.assign({}, parentConfig);\n\n  for (const childProp in childConfig) {\n    if (!hasOwnProp(childConfig, childProp)) {\n      continue;\n    }\n\n    if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\n      res[childProp] = {};\n      Object.assign(res[childProp], parentConfig[childProp]);\n      Object.assign(res[childProp], childConfig[childProp]);\n    } else if (childConfig[childProp] != null) {\n      res[childProp] = childConfig[childProp];\n    } else {\n      delete res[childProp];\n    }\n  }\n\n  for (const parentProp in parentConfig) {\n    if (hasOwnProp(parentConfig, parentProp) && !hasOwnProp(childConfig, parentProp) && isObject(parentConfig[parentProp])) {\n      // make sure changes to properties don't modify parent config\n      res[parentProp] = Object.assign({}, res[parentProp]);\n    }\n  }\n\n  return res;\n}\n\nfunction loadLocale(name) {\n  // no way!\n\n  /* var oldLocale = null;\n   // TODO: Find a better way to register and load all the locales in Node\n   if (!locales[name] && (typeof module !== 'undefined') &&\n     module && module.exports) {\n     try {\n       oldLocale = globalLocale._abbr;\n       var aliasedRequire = require;\n       aliasedRequire('./locale/' + name);\n       getSetGlobalLocale(oldLocale);\n     } catch (e) {}\n   }*/\n  if (!locales[name]) {\n    console.error(`Khronos locale error: please load locale \"${name}\" before using it`); // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\n  }\n\n  return locales[name];\n} // This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\n\n\nfunction getSetGlobalLocale(key, values) {\n  let data;\n\n  if (key) {\n    if (isUndefined(values)) {\n      data = getLocale(key);\n    } else if (isString(key)) {\n      data = defineLocale(key, values);\n    }\n\n    if (data) {\n      globalLocale = data;\n    }\n  }\n\n  return globalLocale && globalLocale._abbr;\n}\n\nfunction defineLocale(name, config) {\n  if (config === null) {\n    // useful for testing\n    delete locales[name];\n    globalLocale = getLocale('en');\n    return null;\n  }\n\n  if (!config) {\n    return;\n  }\n\n  let parentConfig = baseConfig;\n  config.abbr = name;\n\n  if (config.parentLocale != null) {\n    if (locales[config.parentLocale] != null) {\n      parentConfig = locales[config.parentLocale]._config;\n    } else {\n      if (!localeFamilies[config.parentLocale]) {\n        localeFamilies[config.parentLocale] = [];\n      }\n\n      localeFamilies[config.parentLocale].push({\n        name,\n        config\n      });\n      return null;\n    }\n  }\n\n  locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n  if (localeFamilies[name]) {\n    localeFamilies[name].forEach(function (x) {\n      defineLocale(x.name, x.config);\n    });\n  } // backwards compat for now: also set the locale\n  // make sure we set the locale AFTER all child locales have been\n  // created, so we won't end up with the child locale set.\n\n\n  getSetGlobalLocale(name);\n  return locales[name];\n}\n\nfunction updateLocale(name, config) {\n  let _config = config;\n\n  if (_config != null) {\n    let parentConfig = baseConfig; // MERGE\n\n    const tmpLocale = loadLocale(name);\n\n    if (tmpLocale != null) {\n      parentConfig = tmpLocale._config;\n    }\n\n    _config = mergeConfigs(parentConfig, _config);\n    const locale = new Locale(_config);\n    locale.parentLocale = locales[name];\n    locales[name] = locale; // backwards compat for now: also set the locale\n\n    getSetGlobalLocale(name);\n  } else {\n    // pass null for config to unupdate, useful for tests\n    if (locales[name] != null) {\n      if (locales[name].parentLocale != null) {\n        locales[name] = locales[name].parentLocale;\n      } else if (locales[name] != null) {\n        delete locales[name];\n      }\n    }\n  }\n\n  return locales[name];\n} // returns locale data\n\n\nfunction getLocale(key) {\n  setDefaultLocale();\n\n  if (!key) {\n    return globalLocale;\n  } // let locale;\n\n\n  const _key = isArray(key) ? key : [key];\n\n  return chooseLocale(_key);\n}\n\nfunction listLocales() {\n  return Object.keys(locales);\n}\n\nfunction setDefaultLocale() {\n  if (locales[`en`]) {\n    return undefined;\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\n    ordinal(num) {\n      const b = num % 10;\n      const output = toInt(num % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return num + output;\n    }\n\n  });\n  initWeek();\n  initWeekYear();\n  initYear();\n  initTimezone();\n  initTimestamp();\n  initSecond();\n  initQuarter();\n  initOffset();\n  initMonth();\n  initMinute();\n  initMillisecond();\n  initHour();\n  initDayOfYear();\n  initDayOfWeek();\n  initDayOfMonth();\n}\n\nconst ordering = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\nconst orderingHash = ordering.reduce((mem, order) => {\n  mem[order] = true;\n  return mem;\n}, {});\n\nfunction isDurationValid(duration) {\n  const durationKeys = Object.keys(duration);\n\n  if (durationKeys.some(key => {\n    return key in orderingHash && duration[key] === null || isNaN(duration[key]);\n  })) {\n    return false;\n  } // for (let key in duration) {\n  //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\n  //     return false;\n  //   }\n  // }\n\n\n  let unitHasDecimal = false;\n\n  for (let i = 0; i < ordering.length; ++i) {\n    if (duration[ordering[i]]) {\n      // only allow non-integers for smallest unit\n      if (unitHasDecimal) {\n        return false;\n      }\n\n      if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\n        unitHasDecimal = true;\n      }\n    }\n  }\n\n  return true;\n} // export function isValid() {\n//   return this._isValid;\n// }\n//\n// export function createInvalid(): Duration {\n//   return createDuration(NaN);\n// }\n\n\nfunction absCeil(number) {\n  return number < 0 ? Math.floor(number) : Math.ceil(number);\n}\n\nfunction bubble(dur) {\n  let milliseconds = dur._milliseconds;\n  let days = dur._days;\n  let months = dur._months;\n  const data = dur._data; // if we have a mix of positive and negative values, bubble down first\n  // check: https://github.com/moment/moment/issues/2166\n\n  if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n    milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n    days = 0;\n    months = 0;\n  } // The following code bubbles up values, see the tests for\n  // examples of what that means.\n\n\n  data.milliseconds = milliseconds % 1000;\n  const seconds = absFloor(milliseconds / 1000);\n  data.seconds = seconds % 60;\n  const minutes = absFloor(seconds / 60);\n  data.minutes = minutes % 60;\n  const hours = absFloor(minutes / 60);\n  data.hours = hours % 24;\n  days += absFloor(hours / 24); // convert days to months\n\n  const monthsFromDays = absFloor(daysToMonths(days));\n  months += monthsFromDays;\n  days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n  const years = absFloor(months / 12);\n  months %= 12;\n  data.day = days;\n  data.month = months;\n  data.year = years;\n  return dur;\n}\n\nfunction daysToMonths(day) {\n  // 400 years have 146097 days (taking into account leap year rules)\n  // 400 years have 12 months === 4800\n  return day * 4800 / 146097;\n}\n\nfunction monthsToDays(month) {\n  // the reverse of daysToMonths\n  return month * 146097 / 4800;\n}\n\nlet round = Math.round;\nconst thresholds = {\n  ss: 44,\n  s: 45,\n  m: 45,\n  h: 22,\n  d: 26,\n  M: 11 // months to year\n\n}; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\nfunction substituteTimeAgo(str, num, withoutSuffix, isFuture, locale) {\n  return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\n}\n\nfunction relativeTime(posNegDuration, withoutSuffix, locale) {\n  const duration = createDuration(posNegDuration).abs();\n  const seconds = round(duration.as('s'));\n  const minutes = round(duration.as('m'));\n  const hours = round(duration.as('h'));\n  const days = round(duration.as('d'));\n  const months = round(duration.as('M'));\n  const years = round(duration.as('y'));\n  const a = seconds <= thresholds[\"ss\"] && ['s', seconds] || seconds < thresholds[\"s\"] && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds[\"m\"] && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds[\"h\"] && ['hh', hours] || days <= 1 && ['d'] || days < thresholds[\"d\"] && ['dd', days] || months <= 1 && ['M'] || months < thresholds[\"M\"] && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n  const b = [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale]; // a[2] = withoutSuffix;\n  // a[3] = +posNegDuration > 0;\n  // a[4] = locale;\n\n  return substituteTimeAgo.apply(null, b);\n} // This function allows you to set the rounding function for relative time strings\n\n\nfunction getSetRelativeTimeRounding(roundingFunction) {\n  if (roundingFunction === undefined) {\n    return round;\n  }\n\n  if (typeof roundingFunction === 'function') {\n    round = roundingFunction;\n    return true;\n  }\n\n  return false;\n} // This function allows you to set a threshold for relative time strings\n\n\nfunction getSetRelativeTimeThreshold(threshold, limit) {\n  if (thresholds[threshold] === undefined) {\n    return false;\n  }\n\n  if (limit === undefined) {\n    return thresholds[threshold];\n  }\n\n  thresholds[threshold] = limit;\n\n  if (threshold === 's') {\n    thresholds[\"ss\"] = limit - 1;\n  }\n\n  return true;\n} // export function humanize(withSuffix) {\n//   if (!this.isValid()) {\n//     return this.localeData().invalidDate();\n//   }\n//\n//   const locale = this.localeData();\n//   let output = relativeTime(this, !withSuffix, locale);\n//\n//   if (withSuffix) {\n//     output = locale.pastFuture(+this, output);\n//   }\n//\n//   return locale.postformat(output);\n// }\n\n\nclass Duration {\n  constructor(duration, config = {}) {\n    this._data = {};\n    this._locale = getLocale();\n    this._locale = config && config._locale || getLocale(); // const normalizedInput = normalizeObjectUnits(duration);\n\n    const normalizedInput = duration;\n    const years = normalizedInput.year || 0;\n    const quarters = normalizedInput.quarter || 0;\n    const months = normalizedInput.month || 0;\n    const weeks = normalizedInput.week || 0;\n    const days = normalizedInput.day || 0;\n    const hours = normalizedInput.hours || 0;\n    const minutes = normalizedInput.minutes || 0;\n    const seconds = normalizedInput.seconds || 0;\n    const milliseconds = normalizedInput.milliseconds || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1000 + minutes * 60 * 1000 + // 1000 * 60\n    hours * 1000 * 60 * 60; // using 1000 * 60 * 60\n    // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12; // this._data = {};\n    // this._locale = getLocale();\n    // this._bubble();\n\n    return bubble(this);\n  }\n\n  isValid() {\n    return this._isValid;\n  }\n\n  humanize(withSuffix) {\n    // throw new Error(`TODO: implement`);\n    if (!this.isValid()) {\n      return this.localeData().invalidDate;\n    }\n\n    const locale = this.localeData();\n    let output = relativeTime(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  localeData() {\n    return this._locale;\n  }\n\n  locale(localeKey) {\n    if (!localeKey) {\n      return this._locale._abbr;\n    }\n\n    this._locale = getLocale(localeKey) || this._locale;\n    return this;\n  }\n\n  abs() {\n    const mathAbs = Math.abs;\n    const data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.month = mathAbs(data.month);\n    data.year = mathAbs(data.year);\n    return this;\n  }\n\n  as(_units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    let days;\n    let months;\n    const milliseconds = this._milliseconds;\n    const units = normalizeUnits(_units);\n\n    if (units === 'month' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n      return units === 'month' ? months : months / 12;\n    } // handle milliseconds separately because of floating point math errors (issue #1867)\n\n\n    days = this._days + Math.round(monthsToDays(this._months));\n\n    switch (units) {\n      case 'week':\n        return days / 7 + milliseconds / 6048e5;\n\n      case 'day':\n        return days + milliseconds / 864e5;\n\n      case 'hours':\n        return days * 24 + milliseconds / 36e5;\n\n      case 'minutes':\n        return days * 1440 + milliseconds / 6e4;\n\n      case 'seconds':\n        return days * 86400 + milliseconds / 1000;\n      // Math.floor prevents floating point math errors here\n\n      case 'milliseconds':\n        return Math.floor(days * 864e5) + milliseconds;\n\n      default:\n        throw new Error(`Unknown unit ${units}`);\n    }\n  }\n\n  valueOf() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n}\n\nfunction isDuration(obj) {\n  return obj instanceof Duration;\n}\n\nfunction isValid(config) {\n  if (config._isValid == null) {\n    const flags = getParsingFlags(config);\n    const parsedParts = Array.prototype.some.call(flags.parsedDateParts, function (i) {\n      return i != null;\n    });\n    let isNowValid = !isNaN(config._d && config._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n    if (config._strict) {\n      isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n    }\n\n    if (Object.isFrozen == null || !Object.isFrozen(config)) {\n      config._isValid = isNowValid;\n    } else {\n      return isNowValid;\n    }\n  }\n\n  return config._isValid;\n}\n\nfunction createInvalid(config, flags) {\n  config._d = new Date(NaN);\n  Object.assign(getParsingFlags(config), flags || {\n    userInvalidated: true\n  });\n  return config;\n}\n\nfunction markInvalid(config) {\n  config._isValid = false;\n  return config;\n} // iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\nconst extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nconst basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nconst tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\nconst isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/, true], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/, true], ['YYYYMMDD', /\\d{8}/, true], // YYYYMM is NOT allowed by the standard\n['GGGG[W]WWE', /\\d{4}W\\d{3}/, true], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/, true]]; // iso time formats and regexes\n\nconst isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\nconst aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\nconst obsOffsets = {\n  UT: 0,\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60\n}; // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/; // date from iso format\n\nfunction configFromISO(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n\n  const input = config._i;\n  const match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\n  let allowTime;\n  let dateFormat;\n  let timeFormat;\n  let tzFormat;\n\n  if (!match) {\n    config._isValid = false;\n    return config;\n  } // getParsingFlags(config).iso = true;\n\n\n  let i;\n  let l;\n\n  for (i = 0, l = isoDates.length; i < l; i++) {\n    if (isoDates[i][1].exec(match[1])) {\n      dateFormat = isoDates[i][0];\n      allowTime = isoDates[i][2] !== false;\n      break;\n    }\n  }\n\n  if (dateFormat == null) {\n    config._isValid = false;\n    return config;\n  }\n\n  if (match[3]) {\n    for (i = 0, l = isoTimes.length; i < l; i++) {\n      if (isoTimes[i][1].exec(match[3])) {\n        // match[2] should be 'T' or space\n        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n        break;\n      }\n    }\n\n    if (timeFormat == null) {\n      config._isValid = false;\n      return config;\n    }\n  }\n\n  if (!allowTime && timeFormat != null) {\n    config._isValid = false;\n    return config;\n  }\n\n  if (match[4]) {\n    if (tzRegex.exec(match[4])) {\n      tzFormat = 'Z';\n    } else {\n      config._isValid = false;\n      return config;\n    }\n  }\n\n  config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n  return configFromStringAndFormat(config);\n}\n\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n  const result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n  if (secondStr) {\n    result.push(parseInt(secondStr, 10));\n  }\n\n  return result;\n}\n\nfunction untruncateYear(yearStr) {\n  const year = parseInt(yearStr, 10);\n  return year <= 49 ? year + 2000 : year;\n}\n\nfunction preprocessRFC2822(str) {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return str.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').trim();\n}\n\nfunction checkWeekday(weekdayStr, parsedInput, config) {\n  if (weekdayStr) {\n    // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n    const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\n    const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n    if (weekdayProvided !== weekdayActual) {\n      getParsingFlags(config).weekdayMismatch = true;\n      config._isValid = false;\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction calculateOffset(obsOffset, militaryOffset, numOffset) {\n  if (obsOffset) {\n    return obsOffsets[obsOffset];\n  } else if (militaryOffset) {\n    // the only allowed military tz is Z\n    return 0;\n  } else {\n    const hm = parseInt(numOffset, 10);\n    const m = hm % 100;\n    const h = (hm - m) / 100;\n    return h * 60 + m;\n  }\n} // date and time from ref 2822 format\n\n\nfunction configFromRFC2822(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n\n  const match = rfc2822.exec(preprocessRFC2822(config._i));\n\n  if (!match) {\n    return markInvalid(config);\n  }\n\n  const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n  if (!checkWeekday(match[1], parsedArray, config)) {\n    return config;\n  }\n\n  config._a = parsedArray;\n  config._tzm = calculateOffset(match[8], match[9], match[10]);\n  config._d = createUTCDate.apply(null, config._a);\n\n  config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n  getParsingFlags(config).rfc2822 = true;\n  return config;\n} // date from iso format or fallback\n\n\nfunction configFromString(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n\n  const matched = aspNetJsonRegex.exec(config._i);\n\n  if (matched !== null) {\n    config._d = new Date(+matched[1]);\n    return config;\n  } // todo: update logic processing\n  // isISO -> configFromISO\n  // isRFC -> configFromRFC\n\n\n  configFromISO(config);\n\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n\n  configFromRFC2822(config);\n\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  } // Final attempt, use Input Fallback\n  // hooks.createFromInputFallback(config);\n\n\n  return createInvalid(config);\n} // hooks.createFromInputFallback = deprecate(\n//     'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n//     'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n//     'discouraged and will be removed in an upcoming major release. Please refer to ' +\n//     'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n//     function (config) {\n//         config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n//     }\n// );\n// moment.js\n\n\nfunction formatDate(date, format, locale, isUTC, offset = 0) {\n  const _locale = getLocale(locale || 'en');\n\n  if (!_locale) {\n    throw new Error(`Locale \"${locale}\" is not defined, please add it with \"defineLocale(...)\"`);\n  }\n\n  const _format = format || (isUTC ? 'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\n\n  const output = formatMoment(date, _format, _locale, isUTC, offset);\n\n  if (!output) {\n    return output;\n  }\n\n  return _locale.postformat(output);\n} // format date using native date object\n\n\nfunction formatMoment(date, _format, locale, isUTC, offset = 0) {\n  if (!isDateValid(date)) {\n    return locale.invalidDate;\n  }\n\n  const format = expandFormat(_format, locale);\n  formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n  return formatFunctions[format](date, locale, isUTC, offset);\n}\n\nfunction expandFormat(_format, locale) {\n  let format = _format;\n  let i = 5;\n  const localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n  const replaceLongDateFormatTokens = input => {\n    return locale.formatLongDate(input) || input;\n  };\n\n  localFormattingTokens.lastIndex = 0;\n\n  while (i >= 0 && localFormattingTokens.test(format)) {\n    format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n    localFormattingTokens.lastIndex = 0;\n    i -= 1;\n  }\n\n  return format;\n} // Pick the first defined of two or three arguments.\n\n\nfunction defaults(a, b, c) {\n  if (a != null) {\n    return a;\n  }\n\n  if (b != null) {\n    return b;\n  }\n\n  return c;\n}\n\nfunction currentDateArray(config) {\n  const nowValue = new Date();\n\n  if (config._useUTC) {\n    return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n  }\n\n  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n} // convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\n\n\nfunction configFromArray(config) {\n  const input = [];\n  let i;\n  let date;\n  let yearToUse;\n\n  if (config._d) {\n    return config;\n  }\n\n  const currentDate = currentDateArray(config); // compute day of the year from weeks and weekdays\n\n  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n    dayOfYearFromWeekInfo(config);\n  } // if the day of the year is set, figure out what it is\n\n\n  if (config._dayOfYear != null) {\n    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n      getParsingFlags(config)._overflowDayOfYear = true;\n    }\n\n    date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\n    config._a[MONTH] = date.getUTCMonth();\n    config._a[DATE] = date.getUTCDate();\n  } // Default to current date.\n  // * if no year, month, day of month are given, default to today\n  // * if day of month is given, default month and year\n  // * if month is given, default only year\n  // * if year is given, don't default anything\n\n\n  for (i = 0; i < 3 && config._a[i] == null; ++i) {\n    config._a[i] = input[i] = currentDate[i];\n  } // Zero out whatever was not defaulted, including time\n\n\n  for (; i < 7; i++) {\n    config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n  } // Check for 24:00:00.000\n\n\n  if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n    config._nextDay = true;\n    config._a[HOUR] = 0;\n  } // eslint-disable-next-line prefer-spread\n\n\n  config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n  const expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n  // with parseZone.\n\n  if (config._tzm != null) {\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n  }\n\n  if (config._nextDay) {\n    config._a[HOUR] = 24;\n  } // check for mismatching day of week\n\n\n  if (config._w && typeof config._w[\"d\"] !== 'undefined' && config._w[\"d\"] !== expectedWeekday) {\n    getParsingFlags(config).weekdayMismatch = true;\n  }\n\n  return config;\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n  let weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n  const w = config._w;\n\n  if (w[\"GG\"] != null || w[\"W\"] != null || w[\"E\"] != null) {\n    dow = 1;\n    doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n    // how we interpret now (local, utc, fixed offset). So create\n    // a now version of current config (take local/utc/offset flags, and\n    // create now).\n\n    weekYear = defaults(w[\"GG\"], config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\n    week = defaults(w[\"W\"], 1);\n    weekday = defaults(w[\"E\"], 1);\n\n    if (weekday < 1 || weekday > 7) {\n      weekdayOverflow = true;\n    }\n  } else {\n    dow = config._locale._week.dow;\n    doy = config._locale._week.doy;\n    const curWeek = weekOfYear(new Date(), dow, doy);\n    weekYear = defaults(w[\"gg\"], config._a[YEAR], curWeek.year); // Default to current week.\n\n    week = defaults(w[\"w\"], curWeek.week);\n\n    if (w[\"d\"] != null) {\n      // weekday -- low day numbers are considered next week\n      weekday = w[\"d\"];\n\n      if (weekday < 0 || weekday > 6) {\n        weekdayOverflow = true;\n      }\n    } else if (w[\"e\"] != null) {\n      // local weekday -- counting starts from beginning of week\n      weekday = w[\"e\"] + dow;\n\n      if (w[\"e\"] < 0 || w[\"e\"] > 6) {\n        weekdayOverflow = true;\n      }\n    } else {\n      // default to beginning of week\n      weekday = dow;\n    }\n  }\n\n  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n    getParsingFlags(config)._overflowWeeks = true;\n  } else if (weekdayOverflow != null) {\n    getParsingFlags(config)._overflowWeekday = true;\n  } else {\n    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n    config._a[YEAR] = temp.year;\n    config._dayOfYear = temp.dayOfYear;\n  }\n\n  return config;\n}\n\nfunction checkOverflow(config) {\n  let overflow;\n  const a = config._a;\n\n  if (a && getParsingFlags(config).overflow === -2) {\n    // todo: fix this sh*t\n    overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n    if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n      overflow = DATE;\n    }\n\n    if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\n      overflow = WEEK;\n    }\n\n    if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\n      overflow = WEEKDAY;\n    }\n\n    getParsingFlags(config).overflow = overflow;\n  }\n\n  return config;\n} // constant that refers to the ISO standard\n// hooks.ISO_8601 = function () {};\n\n\nconst ISO_8601 = 'ISO_8601'; // constant that refers to the RFC 2822 form\n// hooks.RFC_2822 = function () {};\n\nconst RFC_2822 = 'RFC_2822'; // date from string and format string\n\nfunction configFromStringAndFormat(config) {\n  // TODO: Move this to another part of the creation flow to prevent circular deps\n  if (config._f === ISO_8601) {\n    return configFromISO(config);\n  }\n\n  if (config._f === RFC_2822) {\n    return configFromRFC2822(config);\n  }\n\n  config._a = [];\n  getParsingFlags(config).empty = true;\n\n  if (isArray(config._f) || !config._i && config._i !== 0) {\n    return config;\n  } // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n\n  let input = config._i.toString();\n\n  let totalParsedInputLength = 0;\n  const inputLength = input.length;\n  const tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n  let i;\n  let token;\n  let parsedInput;\n  let skipped;\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\n\n    if (parsedInput) {\n      skipped = input.substr(0, input.indexOf(parsedInput));\n\n      if (skipped.length > 0) {\n        getParsingFlags(config).unusedInput.push(skipped);\n      }\n\n      input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\n      totalParsedInputLength += parsedInput.length;\n    } // don't parse if it's not a known token\n\n\n    if (formatTokenFunctions[token]) {\n      if (parsedInput) {\n        getParsingFlags(config).empty = false;\n      } else {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n\n      addTimeToArrayFromToken(token, parsedInput, config);\n    } else if (config._strict && !parsedInput) {\n      getParsingFlags(config).unusedTokens.push(token);\n    }\n  } // add remaining unparsed input length to the string\n\n\n  getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\n\n  if (input.length > 0) {\n    getParsingFlags(config).unusedInput.push(input);\n  } // clear _12h flag if hour is <= 12\n\n\n  if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n    getParsingFlags(config).bigHour = void 0;\n  }\n\n  getParsingFlags(config).parsedDateParts = config._a.slice(0);\n  getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n  config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n  configFromArray(config);\n  return checkOverflow(config);\n}\n\nfunction meridiemFixWrap(locale, _hour, meridiem) {\n  let hour = _hour;\n\n  if (meridiem == null) {\n    // nothing to do\n    return hour;\n  }\n\n  if (locale.meridiemHour != null) {\n    return locale.meridiemHour(hour, meridiem);\n  }\n\n  if (locale.isPM == null) {\n    // this is not supposed to happen\n    return hour;\n  } // Fallback\n\n\n  const isPm = locale.isPM(meridiem);\n\n  if (isPm && hour < 12) {\n    hour += 12;\n  }\n\n  if (!isPm && hour === 12) {\n    hour = 0;\n  }\n\n  return hour;\n} // date from string and array of format strings\n\n\nfunction configFromStringAndArray(config) {\n  let tempConfig;\n  let bestMoment;\n  let scoreToBeat;\n  let currentScore;\n\n  if (!config._f || config._f.length === 0) {\n    getParsingFlags(config).invalidFormat = true;\n    return createInvalid(config);\n  }\n\n  let i;\n\n  for (i = 0; i < config._f.length; i++) {\n    currentScore = 0;\n    tempConfig = Object.assign({}, config);\n\n    if (config._useUTC != null) {\n      tempConfig._useUTC = config._useUTC;\n    }\n\n    tempConfig._f = config._f[i];\n    configFromStringAndFormat(tempConfig);\n\n    if (!isValid(tempConfig)) {\n      continue;\n    } // if there is any input that was not parsed add a penalty for that format\n\n\n    currentScore += getParsingFlags(tempConfig).charsLeftOver; // or tokens\n\n    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n    getParsingFlags(tempConfig).score = currentScore;\n\n    if (scoreToBeat == null || currentScore < scoreToBeat) {\n      scoreToBeat = currentScore;\n      bestMoment = tempConfig;\n    }\n  }\n\n  return Object.assign(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n  if (config._d) {\n    return config;\n  }\n\n  const input = config._i;\n\n  if (isObject(input)) {\n    const i = normalizeObjectUnits(input);\n    config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds] // todo: obsolete -> remove it\n    .map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n  }\n\n  return configFromArray(config);\n}\n\nfunction createFromConfig(config) {\n  const res = checkOverflow(prepareConfig(config)); // todo: remove, in moment.js it's never called cuz of moment constructor\n\n  res._d = new Date(res._d != null ? res._d.getTime() : NaN);\n\n  if (!isValid(Object.assign({}, res, {\n    _isValid: null\n  }))) {\n    res._d = new Date(NaN);\n  } // todo: update offset\n\n  /*if (res._nextDay) {\n    // Adding is smart enough around DST\n    res._d = add(res._d, 1, 'day');\n    res._nextDay = undefined;\n  }*/\n\n\n  return res;\n}\n\nfunction prepareConfig(config) {\n  let input = config._i;\n  const format = config._f;\n  config._locale = config._locale || getLocale(config._l);\n\n  if (input === null || format === undefined && input === '') {\n    return createInvalid(config, {\n      nullInput: true\n    });\n  }\n\n  if (isString(input)) {\n    config._i = input = config._locale.preparse(input, format);\n  }\n\n  if (isDate(input)) {\n    config._d = cloneDate(input);\n    return config;\n  } // todo: add check for recursion\n\n\n  if (isArray(format)) {\n    configFromStringAndArray(config);\n  } else if (format) {\n    configFromStringAndFormat(config);\n  } else {\n    configFromInput(config);\n  }\n\n  if (!isValid(config)) {\n    config._d = null;\n  }\n\n  return config;\n}\n\nfunction configFromInput(config) {\n  const input = config._i;\n\n  if (isUndefined(input)) {\n    config._d = new Date();\n  } else if (isDate(input)) {\n    config._d = cloneDate(input);\n  } else if (isString(input)) {\n    configFromString(config);\n  } else if (isArray(input) && input.length) {\n    const _arr = input.slice(0);\n\n    config._a = _arr.map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n    configFromArray(config);\n  } else if (isObject(input)) {\n    configFromObject(config);\n  } else if (isNumber(input)) {\n    // from milliseconds\n    config._d = new Date(input);\n  } else {\n    //   hooks.createFromInputFallback(config);\n    return createInvalid(config);\n  }\n\n  return config;\n}\n\nfunction createLocalOrUTC(input, format, localeKey, strict, isUTC) {\n  const config = {};\n  let _input = input; // params switch -> skip; testing it well\n  // if (localeKey === true || localeKey === false) {\n  //     strict = localeKey;\n  //     localeKey = undefined;\n  // }\n  // todo: fail fast and return not valid date\n\n  if (isObject(_input) && isObjectEmpty(_input) || isArray(_input) && _input.length === 0) {\n    _input = undefined;\n  } // object construction must be done this way.\n  // https://github.com/moment/moment/issues/1423\n  // config._isAMomentObject = true;\n\n\n  config._useUTC = config._isUTC = isUTC;\n  config._l = localeKey;\n  config._i = _input;\n  config._f = format;\n  config._strict = strict;\n  return createFromConfig(config);\n}\n\nfunction parseDate(input, format, localeKey, strict, isUTC) {\n  if (isDate(input)) {\n    return input;\n  }\n\n  const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\n  return config._d;\n}\n\nfunction utcAsLocal(date) {\n  if (!(date instanceof Date)) {\n    return null;\n  }\n\n  return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n}\n\nfunction absRound(num) {\n  return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\n}\n\nfunction isAfter(date1, date2, units = 'milliseconds') {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() > date2.valueOf();\n  }\n\n  return date2.valueOf() < startOf(date1, units).valueOf();\n}\n\nfunction isBefore(date1, date2, units = 'milliseconds') {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() < date2.valueOf();\n  }\n\n  return endOf(date1, units).valueOf() < date2.valueOf();\n}\n\nfunction isDisabledDay(date, daysDisabled) {\n  if (typeof daysDisabled === 'undefined' || !daysDisabled || !daysDisabled.length) {\n    return false;\n  }\n\n  return daysDisabled.some(day => day === date.getDay());\n}\n\nfunction isBetween(date, from, to, units, inclusivity = '()') {\n  const leftBound = inclusivity[0] === '(' ? isAfter(date, from, units) : !isBefore(date, from, units);\n  const rightBound = inclusivity[1] === ')' ? isBefore(date, to, units) : !isAfter(date, to, units);\n  return leftBound && rightBound;\n}\n\nfunction isSame(date1, date2, units = 'milliseconds') {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() === date2.valueOf();\n  }\n\n  const inputMs = date2.valueOf();\n  return startOf(date1, units).valueOf() <= inputMs && inputMs <= endOf(date1, units).valueOf();\n}\n\nfunction isSameDay(date1, date2) {\n  return date1.getDay() == date2.getDay();\n}\n\nfunction isSameOrAfter(date1, date2, units) {\n  return isSame(date1, date2, units) || isAfter(date1, date2, units);\n}\n\nfunction isSameOrBefore(date1, date2, units) {\n  return isSame(date1, date2, units) || isBefore(date1, date2, units);\n} // ASP.NET json date format regex\n\n\nconst aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\n\nconst isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\nfunction createDuration(input, key, config = {}) {\n  const duration = convertDuration(input, key); // matching against regexp is expensive, do it on demand\n\n  return new Duration(duration, config);\n}\n\nfunction convertDuration(input, key) {\n  // checks for null or undefined\n  if (input == null) {\n    return {};\n  }\n\n  if (isDuration(input)) {\n    return {\n      milliseconds: input._milliseconds,\n      day: input._days,\n      month: input._months\n    };\n  }\n\n  if (isNumber(input)) {\n    // duration = {};\n    return key ? {\n      [key]: input\n    } : {\n      milliseconds: input\n    };\n  }\n\n  if (isString(input)) {\n    let match = aspNetRegex.exec(input);\n\n    if (match) {\n      const sign = match[1] === '-' ? -1 : 1;\n      return {\n        year: 0,\n        day: toInt(match[DATE]) * sign,\n        hours: toInt(match[HOUR]) * sign,\n        minutes: toInt(match[MINUTE]) * sign,\n        seconds: toInt(match[SECOND]) * sign,\n        // the millisecond decimal point is included in the match\n        milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\n      };\n    }\n\n    match = isoRegex.exec(input);\n\n    if (match) {\n      const sign = match[1] === '-' ? -1 : match[1] === '+' ? 1 : 1;\n      return {\n        year: parseIso(match[2], sign),\n        month: parseIso(match[3], sign),\n        week: parseIso(match[4], sign),\n        day: parseIso(match[5], sign),\n        hours: parseIso(match[6], sign),\n        minutes: parseIso(match[7], sign),\n        seconds: parseIso(match[8], sign)\n      };\n    }\n  }\n\n  if (isObject(input) && ('from' in input || 'to' in input)) {\n    const diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\n    return {\n      milliseconds: diffRes.milliseconds,\n      month: diffRes.months\n    };\n  }\n\n  return input;\n} // createDuration.fn = Duration.prototype;\n// createDuration.invalid = invalid;\n\n\nfunction parseIso(inp, sign) {\n  // We'd normally use ~~inp for this, but unfortunately it also\n  // converts floats to ints.\n  // inp may be undefined, so careful calling replace on it.\n  const res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n  return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n  const res = {\n    milliseconds: 0,\n    months: 0\n  };\n  res.months = getMonth(other) - getMonth(base) + (getFullYear(other) - getFullYear(base)) * 12;\n\n  const _basePlus = add(cloneDate(base), res.months, 'month');\n\n  if (isAfter(_basePlus, other)) {\n    --res.months;\n  }\n\n  res.milliseconds = +other - +add(cloneDate(base), res.months, 'month');\n  return res;\n}\n\nfunction momentsDifference(base, other) {\n  if (!(isDateValid(base) && isDateValid(other))) {\n    return {\n      milliseconds: 0,\n      months: 0\n    };\n  }\n\n  let res;\n\n  const _other = cloneWithOffset(other, base, {\n    _offset: base.getTimezoneOffset()\n  });\n\n  if (isBefore(base, _other)) {\n    res = positiveMomentsDifference(base, _other);\n  } else {\n    res = positiveMomentsDifference(_other, base);\n    res.milliseconds = -res.milliseconds;\n    res.months = -res.months;\n  }\n\n  return res;\n}\n\nfunction add(date, val, period, isUTC) {\n  const dur = createDuration(val, period);\n  return addSubtract(date, dur, 1, isUTC);\n}\n\nfunction subtract(date, val, period, isUTC) {\n  const dur = createDuration(val, period);\n  return addSubtract(date, dur, -1, isUTC);\n}\n\nfunction addSubtract(date, duration, isAdding, isUTC) {\n  const milliseconds = duration._milliseconds;\n  const days = absRound(duration._days);\n  const months = absRound(duration._months); // todo: add timezones support\n  // const _updateOffset = updateOffset == null ? true : updateOffset;\n\n  if (months) {\n    setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\n  }\n\n  if (days) {\n    setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\n  }\n\n  if (milliseconds) {\n    setTime(date, getTime(date) + milliseconds * isAdding);\n  }\n\n  return cloneDate(date); // todo: add timezones support\n  // if (_updateOffset) {\n  //   hooks.updateOffset(date, days || months);\n  // }\n}\n\nfunction initDayOfWeek() {\n  // FORMATTING\n  addFormatToken('d', null, 'do', function (date, opts) {\n    return getDay(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('dd', null, null, function (date, opts) {\n    return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('ddd', null, null, function (date, opts) {\n    return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('dddd', null, null, function (date, opts) {\n    return opts.locale.weekdays(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('e', null, null, function (date, opts) {\n    return getLocaleDayOfWeek(date, opts.locale, opts.isUTC).toString(10); // return getDay(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('E', null, null, function (date, opts) {\n    return getISODayOfWeek(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    const weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week[\"d\"] = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = !!input;\n    }\n\n    return config;\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n    return config;\n  });\n} // HELPERS\n\n\nfunction parseWeekday(input, locale) {\n  if (!isString(input)) {\n    return input;\n  }\n\n  const _num = parseInt(input, 10);\n\n  if (!isNaN(_num)) {\n    return _num;\n  }\n\n  const _weekDay = locale.weekdaysParse(input);\n\n  if (isNumber(_weekDay)) {\n    return _weekDay;\n  }\n\n  return null;\n}\n\nfunction parseIsoWeekday(input, locale = getLocale()) {\n  if (isString(input)) {\n    return locale.weekdaysParse(input) % 7 || 7;\n  }\n\n  return isNumber(input) && isNaN(input) ? null : input;\n} // MOMENTS\n\n\nfunction getSetDayOfWeek(date, input, opts) {\n  if (!input) {\n    return getDayOfWeek(date, opts.isUTC);\n  }\n\n  return setDayOfWeek(date, input, opts.locale, opts.isUTC);\n}\n\nfunction setDayOfWeek(date, input, locale = getLocale(), isUTC) {\n  const day = getDay(date, isUTC);\n\n  const _input = parseWeekday(input, locale);\n\n  return add(date, _input - day, 'day');\n}\n\nfunction getDayOfWeek(date, isUTC) {\n  return getDay(date, isUTC);\n}\n/********************************************/\n// todo: utc\n// getSetLocaleDayOfWeek\n\n\nfunction getLocaleDayOfWeek(date, locale = getLocale(), isUTC) {\n  return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\n}\n\nfunction setLocaleDayOfWeek(date, input, opts = {}) {\n  const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\n  return add(date, input - weekday, 'day');\n} // getSetISODayOfWeek\n\n\nfunction getISODayOfWeek(date, isUTC) {\n  return getDay(date, isUTC) || 7;\n}\n\nfunction setISODayOfWeek(date, input, opts = {}) {\n  // behaves the same as moment#day except\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n  // as a setter, sunday should belong to the previous week.\n  const weekday = parseIsoWeekday(input, opts.locale);\n  return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\n} //! moment.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\n\n\nconst symbolMap$1 = {\n  1: '١',\n  2: '٢',\n  3: '٣',\n  4: '٤',\n  5: '٥',\n  6: '٦',\n  7: '٧',\n  8: '٨',\n  9: '٩',\n  0: '٠'\n};\nconst numberMap$1 = {\n  '١': '1',\n  '٢': '2',\n  '٣': '3',\n  '٤': '4',\n  '٥': '5',\n  '٦': '6',\n  '٧': '7',\n  '٨': '8',\n  '٩': '9',\n  '٠': '0'\n};\n\nconst pluralForm = function (num) {\n  return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\n};\n\nconst plurals = {\n  s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n  m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n  h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n  d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n  M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n  y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n};\n\nconst pluralize = function (u) {\n  return function (num, withoutSuffix) {\n    const f = pluralForm(num);\n    let str = plurals[u][pluralForm(num)];\n\n    if (f === 2) {\n      str = str[withoutSuffix ? 0 : 1];\n    }\n\n    return str.replace(/%d/i, num.toString());\n  };\n};\n\nconst months$2 = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];\nconst arLocale = {\n  abbr: 'ar',\n  months: months$2,\n  monthsShort: months$2,\n  weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n  weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n  weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'D/\\u200FM/\\u200FYYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  meridiemParse: /ص|م/,\n\n  isPM(input) {\n    return 'م' === input;\n  },\n\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ص';\n    } else {\n      return 'م';\n    }\n  },\n\n  calendar: {\n    sameDay: '[اليوم عند الساعة] LT',\n    nextDay: '[غدًا عند الساعة] LT',\n    nextWeek: 'dddd [عند الساعة] LT',\n    lastDay: '[أمس عند الساعة] LT',\n    lastWeek: 'dddd [عند الساعة] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'بعد %s',\n    past: 'منذ %s',\n    s: pluralize('s'),\n    ss: pluralize('s'),\n    m: pluralize('m'),\n    mm: pluralize('m'),\n    h: pluralize('h'),\n    hh: pluralize('h'),\n    d: pluralize('d'),\n    dd: pluralize('d'),\n    M: pluralize('M'),\n    MM: pluralize('M'),\n    y: pluralize('y'),\n    yy: pluralize('y')\n  },\n\n  preparse(str) {\n    return str.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n      return numberMap$1[match];\n    }).replace(/،/g, ',');\n  },\n\n  postformat(str) {\n    return str.replace(/\\d/g, function (match) {\n      return symbolMap$1[match];\n    }).replace(/,/g, '،');\n  },\n\n  week: {\n    dow: 6,\n    doy: 12 // The week that contains Jan 1st is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Bulgarian [bg]\n//! author : Iskren Ivov Chernev : https://github.com/ichernev\n//! author : Kunal Marwaha : https://github.com/marwahaha\n//! author : Matt Grande : https://github.com/mattgrande\n//! author : Isaac Cambron : https://github.com/icambron\n//! author : Venelin Manchev : https://github.com/vmanchev\n\nconst bgLocale = {\n  abbr: 'bg',\n  months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n  monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n  weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n  weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'D.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[Днес в] LT',\n    nextDay: '[Утре в] LT',\n    nextWeek: 'dddd [в] LT',\n    lastDay: '[Вчера в] LT',\n    lastWeek: function (d) {\n      switch (d) {\n        case 0:\n        case 3:\n        case 6:\n          return '[В изминалата] dddd [в] LT';\n\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[В изминалия] dddd [в] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'след %s',\n    past: 'преди %s',\n    s: 'няколко секунди',\n    ss: '%d секунди',\n    m: 'минута',\n    mm: '%d минути',\n    h: 'час',\n    hh: '%d часа',\n    d: 'ден',\n    dd: '%d дни',\n    M: 'месец',\n    MM: '%d месеца',\n    y: 'година',\n    yy: '%d години'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n  ordinal: function (_num) {\n    const number = Number(_num);\n    let lastDigit = number % 10,\n        last2Digits = number % 100;\n\n    if (number === 0) {\n      return number + '-ев';\n    } else if (last2Digits === 0) {\n      return number + '-ен';\n    } else if (last2Digits > 10 && last2Digits < 20) {\n      return number + '-ти';\n    } else if (lastDigit === 1) {\n      return number + '-ви';\n    } else if (lastDigit === 2) {\n      return number + '-ри';\n    } else if (lastDigit === 7 || lastDigit === 8) {\n      return number + '-ми';\n    } else {\n      return number + '-ти';\n    }\n  },\n  week: {\n    dow: 1,\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Catalan [ca]\n//! author : Xavier Arbat : https://github.com/XavisaurusRex\n\nlet monthsShortDot$5 = 'gen._feb._mar._abr._mai._jun._jul._ago._set._oct._nov._des.'.split('_'),\n    monthsShort$7 = 'ene_feb_mar_abr_mai_jun_jul_ago_set_oct_nov_des'.split('_');\nlet monthsParse$6 = [/^gen/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^oct/i, /^nov/i, /^des/i];\nlet monthsRegex$5 = /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i;\nconst caLocale = {\n  abbr: 'ca',\n  months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$5;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort$7[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot$5[getMonth(date, isUTC)];\n  },\n\n  monthsRegex: monthsRegex$5,\n  monthsShortRegex: monthsRegex$5,\n  monthsStrictRegex: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\n  monthsShortStrictRegex: /^(gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i,\n  monthsParse: monthsParse$6,\n  longMonthsParse: monthsParse$6,\n  shortMonthsParse: monthsParse$6,\n  weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n  weekdaysShort: 'diu._dil._dim._dix._dij._div._dis.'.split('_'),\n  weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[avui a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    nextDay(date) {\n      return '[dema a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    nextWeek(date) {\n      return 'dddd [a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    lastDay(date) {\n      return '[ahir a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    lastWeek(date) {\n      return '[el] dddd [' + ('passada la ' + (getHours(date) !== 1) ? 'passades les' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fa %s',\n    s: 'uns segons',\n    ss: '%d segons',\n    m: 'un minut',\n    mm: '%d minuts',\n    h: 'una hora',\n    hh: '%d hores',\n    d: 'un dia',\n    dd: '%d dies',\n    M: 'un mes',\n    MM: '%d mesos',\n    y: 'un any',\n    yy: '%d anys'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|on|er|rt|é)/,\n\n  ordinal(_num) {\n    const num = Number(_num);\n    const output = num > 4 ? 'é' : num === 1 || num === 3 ? 'r' : num === 2 ? 'n' : num === 4 ? 't' : 'é';\n    return num + output;\n  },\n\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\n\nconst months$1 = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');\nconst monthsShort$6 = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n\nfunction plural$4(num) {\n  return num > 1 && num < 5 && ~~(num / 10) !== 1;\n}\n\nfunction translate$6(num, withoutSuffix, key, isFuture) {\n  const result = num + ' ';\n\n  switch (key) {\n    case 's':\n      // a few seconds / in a few seconds / a few seconds ago\n      return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';\n\n    case 'ss':\n      // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'sekundy' : 'sekund');\n      } else {\n        return result + 'sekundami';\n      }\n\n    // break;\n\n    case 'm':\n      // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';\n\n    case 'mm':\n      // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'minuty' : 'minut');\n      } else {\n        return result + 'minutami';\n      }\n\n    // break;\n\n    case 'h':\n      // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n\n    case 'hh':\n      // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'hodiny' : 'hodin');\n      } else {\n        return result + 'hodinami';\n      }\n\n    // break;\n\n    case 'd':\n      // a day / in a day / a day ago\n      return withoutSuffix || isFuture ? 'den' : 'dnem';\n\n    case 'dd':\n      // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'dny' : 'dní');\n      } else {\n        return result + 'dny';\n      }\n\n    // break;\n\n    case 'M':\n      // a month / in a month / a month ago\n      return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';\n\n    case 'MM':\n      // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'měsíce' : 'měsíců');\n      } else {\n        return result + 'měsíci';\n      }\n\n    // break;\n\n    case 'y':\n      // a year / in a year / a year ago\n      return withoutSuffix || isFuture ? 'rok' : 'rokem';\n\n    case 'yy':\n      // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'roky' : 'let');\n      } else {\n        return result + 'lety';\n      }\n\n    // break;\n  }\n}\n\nconst csLocale = {\n  abbr: 'cs',\n  months: months$1,\n  monthsShort: monthsShort$6,\n  monthsParse: function (months, monthsShort) {\n    let i,\n        _monthsParse = [];\n\n    for (i = 0; i < 12; i++) {\n      // use custom parser to solve problem with July (červenec)\n      _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n    }\n\n    return _monthsParse;\n  }(months$1, monthsShort$6),\n  shortMonthsParse: function (monthsShort) {\n    let i,\n        _shortMonthsParse = [];\n\n    for (i = 0; i < 12; i++) {\n      _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n    }\n\n    return _shortMonthsParse;\n  }(monthsShort$6),\n  longMonthsParse: function (months) {\n    let i,\n        _longMonthsParse = [];\n\n    for (i = 0; i < 12; i++) {\n      _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n    }\n\n    return _longMonthsParse;\n  }(months$1),\n  weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n  weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n  weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes v] LT',\n    nextDay: '[zítra v] LT',\n\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v neděli v] LT';\n\n        case 1:\n        case 2:\n          return '[v] dddd [v] LT';\n\n        case 3:\n          return '[ve středu v] LT';\n\n        case 4:\n          return '[ve čtvrtek v] LT';\n\n        case 5:\n          return '[v pátek v] LT';\n\n        case 6:\n          return '[v sobotu v] LT';\n      }\n    },\n\n    lastDay: '[včera v] LT',\n\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulou neděli v] LT';\n\n        case 1:\n        case 2:\n          return '[minulé] dddd [v] LT';\n\n        case 3:\n          return '[minulou středu v] LT';\n\n        case 4:\n        case 5:\n          return '[minulý] dddd [v] LT';\n\n        case 6:\n          return '[minulou sobotu v] LT';\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'před %s',\n    s: translate$6,\n    ss: translate$6,\n    m: translate$6,\n    mm: translate$6,\n    h: translate$6,\n    hh: translate$6,\n    d: translate$6,\n    dd: translate$6,\n    M: translate$6,\n    MM: translate$6,\n    y: translate$6,\n    yy: translate$6\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Danish (Denmark) [da]\n//! author : Per Hansen : https://github.com/perhp\n\nconst daLocale = {\n  abbr: 'da',\n  months: 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays: 'Søndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_Lørdag'.split('_'),\n  weekdaysShort: 'Søn_Man_Tir_Ons_Tor_Fre_Lør'.split('_'),\n  weekdaysMin: 'Sø_Ma_Ti_On_To_Fr_Lø'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'på dddd [kl.] LT',\n    lastDay: '[i går kl.] LT',\n    lastWeek: '[i] dddd[s kl.] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'få sekunder',\n    m: 'et minut',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dage',\n    M: 'en måned',\n    MM: '%d måneder',\n    y: 'et år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n\nfunction processRelativeTime$2(num, withoutSuffix, key, isFuture) {\n  const format = {\n    'm': ['eine Minute', 'einer Minute'],\n    'h': ['eine Stunde', 'einer Stunde'],\n    'd': ['ein Tag', 'einem Tag'],\n    'dd': [num + ' Tage', num + ' Tagen'],\n    'M': ['ein Monat', 'einem Monat'],\n    'MM': [num + ' Monate', num + ' Monaten'],\n    'y': ['ein Jahr', 'einem Jahr'],\n    'yy': [num + ' Jahre', num + ' Jahren']\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nconst deLocale = {\n  abbr: 'de',\n  months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n  weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd, D. MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[heute um] LT [Uhr]',\n    sameElse: 'L',\n    nextDay: '[morgen um] LT [Uhr]',\n    nextWeek: 'dddd [um] LT [Uhr]',\n    lastDay: '[gestern um] LT [Uhr]',\n    lastWeek: '[letzten] dddd [um] LT [Uhr]'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: 'vor %s',\n    s: 'ein paar Sekunden',\n    ss: '%d Sekunden',\n    m: processRelativeTime$2,\n    mm: '%d Minuten',\n    h: processRelativeTime$2,\n    hh: '%d Stunden',\n    d: processRelativeTime$2,\n    dd: processRelativeTime$2,\n    M: processRelativeTime$2,\n    MM: processRelativeTime$2,\n    y: processRelativeTime$2,\n    yy: processRelativeTime$2\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n\nconst enGbLocale = {\n  abbr: 'en-gb',\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n\n  ordinal(_num) {\n    const num = Number(_num);\n    const b = num % 10,\n          output = ~~(num % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n    return num + output;\n  },\n\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\n\nlet monthsShortDot$4 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n    monthsShort$5 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nlet monthsParse$5 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex$4 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\nconst esDoLocale = {\n  abbr: 'es-do',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$4;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort$5[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot$4[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex: monthsRegex$4,\n  monthsShortRegex: monthsRegex$4,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse: monthsParse$5,\n  longMonthsParse: monthsParse$5,\n  shortMonthsParse: monthsParse$5,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\n\nlet monthsShortDot$3 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n    monthsShort$4 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nlet monthsParse$4 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex$3 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\nconst esLocale = {\n  abbr: 'es',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$3;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort$4[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot$3[getMonth(date, isUTC)];\n  },\n\n  monthsRegex: monthsRegex$3,\n  monthsShortRegex: monthsRegex$3,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse: monthsParse$4,\n  longMonthsParse: monthsParse$4,\n  shortMonthsParse: monthsParse$4,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Spanish (Puerto Rico) [es-pr]\n\nlet monthsShortDot$2 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nlet monthsShort$3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nconst esPrLocale = {\n  abbr: 'es-pr',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$2;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort$3[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot$2[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsParseExact: true,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'MM/DD/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 0,\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Spanish (United States) [es-us]\n//! author : bustta : https://github.com/bustta\n\nlet monthsShortDot$1 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nlet monthsShort$2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nconst esUsLocale = {\n  abbr: 'es-us',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$1;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort$2[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot$1[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsParseExact: true,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM [de] D [de] YYYY',\n    LLL: 'MMMM [de] D [de] YYYY h:mm A',\n    LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 0,\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Estonian [et]\n//! author : Chris Gedrim : https://github.com/a90machado\n\nconst processRelativeTime$1 = function (num, withoutSuffix, key, isFuture) {\n  const format = {\n    s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n    ss: [num + 'sekundi', num + 'sekundit'],\n    m: ['ühe minuti', 'üks minut'],\n    mm: [num + ' minuti', num + ' minutit'],\n    h: ['ühe tunni', 'tund aega', 'üks tund'],\n    hh: [num + ' tunni', num + ' tundi'],\n    d: ['ühe päeva', 'üks päev'],\n    M: ['kuu aja', 'kuu aega', 'üks kuu'],\n    MM: [num + ' kuu', num + ' kuud'],\n    y: ['ühe aasta', 'aasta', 'üks aasta'],\n    yy: [num + ' aasta', num + ' aastat']\n  };\n\n  if (withoutSuffix) {\n    return format[key][2] ? format[key][2] : format[key][1];\n  }\n\n  return isFuture ? format[key][0] : format[key][1];\n};\n\nconst etLocale = {\n  abbr: 'et',\n  months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n  monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n  weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n  weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n  weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[Täna,] LT',\n    nextDay: '[Homme,] LT',\n    nextWeek: '[Järgmine] dddd LT',\n    lastDay: '[Eile,] LT',\n    lastWeek: '[Eelmine] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s pärast',\n    past: '%s tagasi',\n    s: processRelativeTime$1,\n    ss: processRelativeTime$1,\n    m: processRelativeTime$1,\n    mm: processRelativeTime$1,\n    h: processRelativeTime$1,\n    hh: processRelativeTime$1,\n    d: processRelativeTime$1,\n    dd: '%d päeva',\n    M: processRelativeTime$1,\n    MM: processRelativeTime$1,\n    y: processRelativeTime$1,\n    yy: processRelativeTime$1\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n// https://github.com/moment/moment/blob/develop/locale/fi.js\n\nvar numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),\n    numbersFuture = ['nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden', numbersPast[7], numbersPast[8], numbersPast[9]];\n\nfunction translate$5(num, withoutSuffix, key, isFuture) {\n  var result = '';\n\n  switch (key) {\n    case 's':\n      return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n\n    case 'ss':\n      return isFuture ? 'sekunnin' : 'sekuntia';\n\n    case 'm':\n      return isFuture ? 'minuutin' : 'minuutti';\n\n    case 'mm':\n      result = isFuture ? 'minuutin' : 'minuuttia';\n      break;\n\n    case 'h':\n      return isFuture ? 'tunnin' : 'tunti';\n\n    case 'hh':\n      result = isFuture ? 'tunnin' : 'tuntia';\n      break;\n\n    case 'd':\n      return isFuture ? 'päivän' : 'päivä';\n\n    case 'dd':\n      result = isFuture ? 'päivän' : 'päivää';\n      break;\n\n    case 'M':\n      return isFuture ? 'kuukauden' : 'kuukausi';\n\n    case 'MM':\n      result = isFuture ? 'kuukauden' : 'kuukautta';\n      break;\n\n    case 'y':\n      return isFuture ? 'vuoden' : 'vuosi';\n\n    case 'yy':\n      result = isFuture ? 'vuoden' : 'vuotta';\n      break;\n  }\n\n  result = verbalNumber(num, isFuture) + ' ' + result;\n  return result;\n}\n\nfunction verbalNumber(num, isFuture) {\n  return num < 10 ? isFuture ? numbersFuture[num] : numbersPast[num] : num;\n}\n\nconst fiLocale = {\n  abbr: 'fi',\n  months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n  monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n  weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n  weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD.MM.YYYY',\n    LL: 'Do MMMM[ta] YYYY',\n    LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n    LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n    l: 'D.M.YYYY',\n    ll: 'Do MMM YYYY',\n    lll: 'Do MMM YYYY, [klo] HH.mm',\n    llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\n  },\n  calendar: {\n    sameDay: '[tänään] [klo] LT',\n    nextDay: '[huomenna] [klo] LT',\n    nextWeek: 'dddd [klo] LT',\n    lastDay: '[eilen] [klo] LT',\n    lastWeek: '[viime] dddd[na] [klo] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s päästä',\n    past: '%s sitten',\n    s: translate$5,\n    ss: translate$5,\n    m: translate$5,\n    mm: translate$5,\n    h: translate$5,\n    hh: translate$5,\n    d: translate$5,\n    dd: translate$5,\n    M: translate$5,\n    MM: translate$5,\n    y: translate$5,\n    yy: translate$5\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\n\nconst frLocale = {\n  abbr: 'fr',\n  months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n  monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n  weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Aujourd’hui à] LT',\n    nextDay: '[Demain à] LT',\n    nextWeek: 'dddd [à] LT',\n    lastDay: '[Hier à] LT',\n    lastWeek: 'dddd [dernier à] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dans %s',\n    past: 'il y a %s',\n    s: 'quelques secondes',\n    ss: '%d secondes',\n    m: 'une minute',\n    mm: '%d minutes',\n    h: 'une heure',\n    hh: '%d heures',\n    d: 'un jour',\n    dd: '%d jours',\n    M: 'un mois',\n    MM: '%d mois',\n    y: 'un an',\n    yy: '%d ans'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n\n  ordinal(_num, period) {\n    const num = Number(_num);\n\n    switch (period) {\n      // TODO: Return 'e' when day of month > 1. Move this case inside\n      // block for masculine words below.\n      // See https://github.com/moment/moment/issues/3375\n      case 'D':\n        return num + (num === 1 ? 'er' : '');\n      // Words with masculine grammatical gender: mois, trimestre, jour\n\n      default:\n      case 'M':\n      case 'Q':\n      case 'DDD':\n      case 'd':\n        return num + (num === 1 ? 'er' : 'e');\n      // Words with feminine grammatical gender: semaine\n\n      case 'w':\n      case 'W':\n        return num + (num === 1 ? 're' : 'e');\n    }\n  },\n\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Galician [gl]\n//! author : Darío Beiró : https://github.com/quinobravo\n\nlet monthsShortDot = 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),\n    monthsShort$1 = 'xan_feb_mar_abr_mai_xuñ_xul_ago_set_out_nov_dec'.split('_');\nlet monthsParse$3 = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuñ/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\nlet monthsRegex$2 = /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\nconst glLocale = {\n  abbr: 'gl',\n  months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort$1[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n\n  monthsRegex: monthsRegex$2,\n  monthsShortRegex: monthsRegex$2,\n  monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i,\n  monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$3,\n  longMonthsParse: monthsParse$3,\n  shortMonthsParse: monthsParse$3,\n  weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[hoxe á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    nextDay(date) {\n      return '[mañan á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    nextWeek(date) {\n      return 'dddd [á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    lastDay(date) {\n      return '[onte á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    lastWeek(date) {\n      return '[o] dddd [pasado á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fai %s',\n    s: 'uns segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'unha hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\n\nconst heLocale = {\n  abbr: 'he',\n  months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n  monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n  weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n  weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n  weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [ב]MMMM YYYY',\n    LLL: 'D [ב]MMMM YYYY HH:mm',\n    LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n    l: 'D/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[היום ב־]LT',\n    nextDay: '[מחר ב־]LT',\n    nextWeek: 'dddd [בשעה] LT',\n    lastDay: '[אתמול ב־]LT',\n    lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'בעוד %s',\n    past: 'לפני %s',\n    s: 'מספר שניות',\n    ss: '%d שניות',\n    m: 'דקה',\n    mm: '%d דקות',\n    h: 'שעה',\n\n    hh(num) {\n      if (num === 2) {\n        return 'שעתיים';\n      }\n\n      return num + ' שעות';\n    },\n\n    d: 'יום',\n\n    dd(num) {\n      if (num === 2) {\n        return 'יומיים';\n      }\n\n      return num + ' ימים';\n    },\n\n    M: 'חודש',\n\n    MM(num) {\n      if (num === 2) {\n        return 'חודשיים';\n      }\n\n      return num + ' חודשים';\n    },\n\n    y: 'שנה',\n\n    yy(num) {\n      if (num === 2) {\n        return 'שנתיים';\n      } else if (num % 10 === 0 && num !== 10) {\n        return num + ' שנה';\n      }\n\n      return num + ' שנים';\n    }\n\n  },\n  meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n\n  isPM(input) {\n    return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n  },\n\n  meridiem(hour, minute, isLower) {\n    if (hour < 5) {\n      return 'לפנות בוקר';\n    } else if (hour < 10) {\n      return 'בבוקר';\n    } else if (hour < 12) {\n      return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n    } else if (hour < 18) {\n      return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n    } else {\n      return 'בערב';\n    }\n  }\n\n}; //! moment.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\n\nlet symbolMap = {\n  1: '१',\n  2: '२',\n  3: '३',\n  4: '४',\n  5: '५',\n  6: '६',\n  7: '७',\n  8: '८',\n  9: '९',\n  0: '०'\n},\n    numberMap = {\n  '१': '1',\n  '२': '2',\n  '३': '3',\n  '४': '4',\n  '५': '5',\n  '६': '6',\n  '७': '7',\n  '८': '8',\n  '९': '9',\n  '०': '0'\n};\nconst hiLocale = {\n  abbr: 'hi',\n  months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n  monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n  weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n  weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm बजे',\n    LTS: 'A h:mm:ss बजे',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm बजे',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'\n  },\n  calendar: {\n    sameDay: '[आज] LT',\n    nextDay: '[कल] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[कल] LT',\n    lastWeek: '[पिछले] dddd, LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s में',\n    past: '%s पहले',\n    s: 'कुछ ही क्षण',\n    ss: '%d सेकंड',\n    m: 'एक मिनट',\n    mm: '%d मिनट',\n    h: 'एक घंटा',\n    hh: '%d घंटे',\n    d: 'एक दिन',\n    dd: '%d दिन',\n    M: 'एक महीने',\n    MM: '%d महीने',\n    y: 'एक वर्ष',\n    yy: '%d वर्ष'\n  },\n\n  preparse(str) {\n    return str.replace(/[१२३४५६७८९०]/g, function (match) {\n      return numberMap[match];\n    });\n  },\n\n  postformat(str) {\n    return str.replace(/\\d/g, function (match) {\n      return symbolMap[match];\n    });\n  },\n\n  // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n  meridiemParse: /रात|सुबह|दोपहर|शाम/,\n\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n\n    if (meridiem === 'रात') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'सुबह') {\n      return hour;\n    } else if (meridiem === 'दोपहर') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'शाम') {\n      return hour + 12;\n    }\n  },\n\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'रात';\n    } else if (hour < 10) {\n      return 'सुबह';\n    } else if (hour < 17) {\n      return 'दोपहर';\n    } else if (hour < 20) {\n      return 'शाम';\n    } else {\n      return 'रात';\n    }\n  },\n\n  week: {\n    dow: 0,\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\n\nlet weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n\nfunction translate$4(num, withoutSuffix, key, isFuture) {\n  switch (key) {\n    case 's':\n      return isFuture || withoutSuffix ? 'néhány másodperc' : 'néhány másodperce';\n\n    case 'ss':\n      return num + (isFuture || withoutSuffix ? ' másodperc' : ' másodperce');\n\n    case 'm':\n      return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n\n    case 'mm':\n      return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n\n    case 'h':\n      return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n\n    case 'hh':\n      return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n\n    case 'd':\n      return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n\n    case 'dd':\n      return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n\n    case 'M':\n      return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n\n    case 'MM':\n      return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n\n    case 'y':\n      return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n\n    case 'yy':\n      return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n  }\n\n  return '';\n}\n\nfunction week(date, isFuture) {\n  return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\n}\n\nconst huLocale = {\n  abbr: 'hu',\n  months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n  monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n  weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n  weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n  weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'YYYY.MM.DD.',\n    LL: 'YYYY. MMMM D.',\n    LLL: 'YYYY. MMMM D. H:mm',\n    LLLL: 'YYYY. MMMM D., dddd H:mm'\n  },\n  meridiemParse: /de|du/i,\n\n  isPM(input) {\n    return input.charAt(1).toLowerCase() === 'u';\n  },\n\n  meridiem(hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower === true ? 'de' : 'DE';\n    } else {\n      return isLower === true ? 'du' : 'DU';\n    }\n  },\n\n  calendar: {\n    sameDay: '[ma] LT[-kor]',\n    nextDay: '[holnap] LT[-kor]',\n\n    nextWeek(date) {\n      return week(date, true);\n    },\n\n    lastDay: '[tegnap] LT[-kor]',\n\n    lastWeek(date) {\n      return week(date, false);\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s múlva',\n    past: '%s',\n    s: translate$4,\n    ss: translate$4,\n    m: translate$4,\n    mm: translate$4,\n    h: translate$4,\n    hh: translate$4,\n    d: translate$4,\n    dd: translate$4,\n    M: translate$4,\n    MM: translate$4,\n    y: translate$4,\n    yy: translate$4\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Croatian [hr]\n//! author : Danijel Grmec : https://github.com/cobaltsis\n\nconst hrLocale = {\n  abbr: 'hr',\n  months: 'Siječanj_Veljača_Ožujak_Travanj_Svibanj_Lipanj_Srpanj_Kolovoz_Rujan_Listopad_Studeni_Prosinac'.split('_'),\n  monthsShort: 'Sij_Velj_Ožu_Tra_Svi_Lip_Srp_Kol_Ruj_Lis_Stu_Pro'.split('_'),\n  weekdays: 'Nedjelja_Ponedjeljak_Utorak_Srijeda_Četvrtak_Petak_Subota'.split('_'),\n  weekdaysShort: 'Ned_Pon_Uto_Sri_Čet_Pet_Sub'.split('_'),\n  weekdaysMin: 'Ne_Po_Ut_Sr_Če_Pe_Su'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Danas u] LT',\n    nextDay: '[Sutra u] LT',\n    nextWeek: 'dddd [u] LT',\n    lastDay: '[Jučer u] LT',\n    lastWeek: '[Zadnji] dddd [u] LT',\n    sameElse: 'L'\n  },\n  invalidDate: 'Neispravan datum',\n  relativeTime: {\n    future: 'za %s',\n    past: '%s prije',\n    s: 'nekoliko sekundi',\n    ss: '%d sekundi',\n    m: 'minuta',\n    mm: '%d minuta',\n    h: 'sat',\n    hh: '%d sati',\n    d: 'dan',\n    dd: '%d dana',\n    M: 'mjesec',\n    MM: '%d mjeseci',\n    y: 'godina',\n    yy: '%d godina'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n\n  ordinal(_num) {\n    const num = Number(_num);\n    const b = num % 10,\n          output = ~~(num % 100 / 10) === 1 ? '.' : b === 1 ? '.' : b === 2 ? '.' : b === 3 ? '.' : '.';\n    return num + output;\n  },\n\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Indonesia [id]\n//! author : Romy Kusuma : https://github.com/rkusuma\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\n\nconst idLocale = {\n  abbr: 'id',\n  months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n  weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n  weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n  weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [pukul] HH.mm',\n    LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'\n  },\n  meridiemParse: /pagi|siang|sore|malam/,\n\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n\n    if (meridiem === 'pagi') {\n      return hour;\n    } else if (meridiem === 'siang') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === 'sore' || meridiem === 'malam') {\n      return hour + 12;\n    }\n  },\n\n  meridiem(hours, minutes, isLower) {\n    if (hours < 11) {\n      return 'pagi';\n    } else if (hours < 15) {\n      return 'siang';\n    } else if (hours < 19) {\n      return 'sore';\n    } else {\n      return 'malam';\n    }\n  },\n\n  calendar: {\n    sameDay: '[Hari ini pukul] LT',\n    nextDay: '[Besok pukul] LT',\n    nextWeek: 'dddd [pukul] LT',\n    lastDay: '[Kemarin pukul] LT',\n    lastWeek: 'dddd [lalu pukul] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dalam %s',\n    past: '%s yang lalu',\n    s: 'beberapa detik',\n    ss: '%d detik',\n    m: 'semenit',\n    mm: '%d menit',\n    h: 'sejam',\n    hh: '%d jam',\n    d: 'sehari',\n    dd: '%d hari',\n    M: 'sebulan',\n    MM: '%d bulan',\n    y: 'setahun',\n    yy: '%d tahun'\n  },\n  week: {\n    dow: 1,\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\n\nconst itLocale = {\n  abbr: 'it',\n  months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n  monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n  weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n  weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n  weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Oggi alle] LT',\n    nextDay: '[Domani alle] LT',\n    nextWeek: 'dddd [alle] LT',\n    lastDay: '[Ieri alle] LT',\n\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[la scorsa] dddd [alle] LT';\n\n        default:\n          return '[lo scorso] dddd [alle] LT';\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future(num) {\n      return (/^[0-9].+$/.test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\n    },\n\n    past: '%s fa',\n    s: 'alcuni secondi',\n    ss: '%d secondi',\n    m: 'un minuto',\n    mm: '%d minuti',\n    h: 'un\\'ora',\n    hh: '%d ore',\n    d: 'un giorno',\n    dd: '%d giorni',\n    M: 'un mese',\n    MM: '%d mesi',\n    y: 'un anno',\n    yy: '%d anni'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\n\nconst jaLocale = {\n  abbr: 'ja',\n  months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n  weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n  weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYY年M月D日',\n    LLL: 'YYYY年M月D日 HH:mm',\n    LLLL: 'YYYY年M月D日 HH:mm dddd',\n    l: 'YYYY/MM/DD',\n    ll: 'YYYY年M月D日',\n    lll: 'YYYY年M月D日 HH:mm',\n    llll: 'YYYY年M月D日 HH:mm dddd'\n  },\n  meridiemParse: /午前|午後/i,\n\n  isPM(input) {\n    return input === '午後';\n  },\n\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return '午前';\n    } else {\n      return '午後';\n    }\n  },\n\n  calendar: {\n    sameDay: '[今日] LT',\n    nextDay: '[明日] LT',\n    nextWeek: '[来週]dddd LT',\n    lastDay: '[昨日] LT',\n    lastWeek: '[前週]dddd LT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}日/,\n\n  ordinal(num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '日';\n\n      default:\n        return num.toString(10);\n    }\n  },\n\n  relativeTime: {\n    future: '%s後',\n    past: '%s前',\n    s: '数秒',\n    ss: '%d秒',\n    m: '1分',\n    mm: '%d分',\n    h: '1時間',\n    hh: '%d時間',\n    d: '1日',\n    dd: '%d日',\n    M: '1ヶ月',\n    MM: '%dヶ月',\n    y: '1年',\n    yy: '%d年'\n  }\n}; //! moment.js locale configuration\n//! locale : Georgian [ka]\n//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n//! author : Levan Tskipuri : https://github.com/tskipa\n\nconst kaLocale = {\n  abbr: 'ka',\n  months: {\n    format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_'),\n    standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_')\n  },\n  monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n  weekdays: {\n    standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n    format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n    isFormat: /(წინა|შემდეგ)/\n  },\n  weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n  weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY h:mm A',\n    LLLL: 'dddd, D MMMM YYYY h:mm A'\n  },\n  calendar: {\n    sameDay: '[დღეს] LT[-ზე]',\n    nextDay: '[ხვალ] LT[-ზე]',\n    lastDay: '[გუშინ] LT[-ზე]',\n    nextWeek: '[შემდეგ] dddd LT[-ზე]',\n    lastWeek: '[წინა] dddd LT-ზე',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future(s) {\n      var st = s.toString();\n      return /(წამი|წუთი|საათი|წელი)/.test(st) ? st.replace(/ი$/, 'ში') : st + 'ში';\n    },\n\n    past(s) {\n      var st = s.toString();\n\n      if (/(წამი|წუთი|საათი|დღე|თვე)/.test(st)) {\n        return st.replace(/(ი|ე)$/, 'ის წინ');\n      }\n\n      if (/წელი/.test(st)) {\n        return st.replace(/წელი$/, 'წლის წინ');\n      }\n    },\n\n    s: 'რამდენიმე წამი',\n    ss: '%d წამი',\n    m: 'წუთი',\n    mm: '%d წუთი',\n    h: 'საათი',\n    hh: '%d საათი',\n    d: 'დღე',\n    dd: '%d დღე',\n    M: 'თვე',\n    MM: '%d თვე',\n    y: 'წელი',\n    yy: '%d წელი'\n  },\n  dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n\n  ordinal(_num, _period) {\n    const num = Number(_num);\n\n    if (num === 0) {\n      return num.toString();\n    }\n\n    if (num === 1) {\n      return num + '-ლი';\n    }\n\n    if (num < 20 || num <= 100 && num % 20 === 0 || num % 100 === 0) {\n      return 'მე-' + num;\n    }\n\n    return num + '-ე';\n  },\n\n  week: {\n    dow: 1,\n    doy: 4\n  }\n}; // ! moment.js locale configuration\n// ! locale : Kazakh [kk]\n// ! authors : Nurlan Rakhimzhanov : https://github.com/nurlan\n\nconst suffixes$1 = {\n  0: '-ші',\n  1: '-ші',\n  2: '-ші',\n  3: '-ші',\n  4: '-ші',\n  5: '-ші',\n  6: '-шы',\n  7: '-ші',\n  8: '-ші',\n  9: '-шы',\n  10: '-шы',\n  20: '-шы',\n  30: '-шы',\n  40: '-шы',\n  50: '-ші',\n  60: '-шы',\n  70: '-ші',\n  80: '-ші',\n  90: '-шы',\n  100: '-ші'\n};\nconst kkLocale = {\n  abbr: 'kk',\n  months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n  monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n  weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n  weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n  weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Бүгін сағат] LT',\n    nextDay: '[Ертең сағат] LT',\n    nextWeek: 'dddd [сағат] LT',\n    lastDay: '[Кеше сағат] LT',\n    lastWeek: '[Өткен аптаның] dddd [сағат] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s ішінде',\n    past: '%s бұрын',\n    s: 'бірнеше секунд',\n    ss: '%d секунд',\n    m: 'бір минут',\n    mm: '%d минут',\n    h: 'бір сағат',\n    hh: '%d сағат',\n    d: 'бір күн',\n    dd: '%d күн',\n    M: 'бір ай',\n    MM: '%d ай',\n    y: 'бір жыл',\n    yy: '%d жыл'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n\n  ordinal(_num) {\n    const a = _num % 10;\n    const b = _num >= 100 ? 100 : null;\n    return _num + (suffixes$1[_num] || suffixes$1[a] || suffixes$1[b]);\n  },\n\n  week: {\n    dow: 1,\n    doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\n\nconst koLocale = {\n  abbr: 'ko',\n  months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n  weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n  weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm',\n    LTS: 'A h:mm:ss',\n    L: 'YYYY.MM.DD',\n    LL: 'YYYY년 MMMM D일',\n    LLL: 'YYYY년 MMMM D일 A h:mm',\n    LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n    l: 'YYYY.MM.DD',\n    ll: 'YYYY년 MMMM D일',\n    lll: 'YYYY년 MMMM D일 A h:mm',\n    llll: 'YYYY년 MMMM D일 dddd A h:mm'\n  },\n  calendar: {\n    sameDay: '오늘 LT',\n    nextDay: '내일 LT',\n    nextWeek: 'dddd LT',\n    lastDay: '어제 LT',\n    lastWeek: '지난주 dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s 후',\n    past: '%s 전',\n    s: '몇 초',\n    ss: '%d초',\n    m: '1분',\n    mm: '%d분',\n    h: '한 시간',\n    hh: '%d시간',\n    d: '하루',\n    dd: '%d일',\n    M: '한 달',\n    MM: '%d달',\n    y: '일 년',\n    yy: '%d년'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n  ordinal: function (num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '일';\n\n      case 'M':\n        return num + '월';\n\n      case 'w':\n      case 'W':\n        return num + '주';\n\n      default:\n        return num.toString(10);\n    }\n  },\n  meridiemParse: /오전|오후/,\n  isPM: function (token) {\n    return token === '오후';\n  },\n  meridiem: function (hour, minute, isUpper) {\n    return hour < 12 ? '오전' : '오후';\n  }\n}; //! moment.js locale configuration\n//! locale : Lithuanian [lt]\n//! author : Stanislavas Guk : https://github.com/ixoster\n\nconst units = {\n  ss: 'sekundė_sekundžių_sekundes',\n  m: 'minutė_minutės_minutę',\n  mm: 'minutės_minučių_minutes',\n  h: 'valanda_valandos_valandą',\n  hh: 'valandos_valandų_valandas',\n  d: 'diena_dienos_dieną',\n  dd: 'dienos_dienų_dienas',\n  M: 'mėnuo_mėnesio_mėnesį',\n  MM: 'mėnesiai_mėnesių_mėnesius',\n  y: 'metai_metų_metus',\n  yy: 'metai_metų_metus'\n};\n\nfunction translateSeconds(num, withoutSuffix, key, isFuture) {\n  if (withoutSuffix) {\n    return 'kelios sekundės';\n  } else {\n    return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n  }\n}\n\nfunction translateSingular(num, withoutSuffix, key, isFuture) {\n  return withoutSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];\n}\n\nfunction special(num) {\n  return num % 10 === 0 || num > 10 && num < 20;\n}\n\nfunction forms(key) {\n  return units[key].split('_');\n}\n\nfunction translate$3(num, withoutSuffix, key, isFuture) {\n  let result = num + ' ';\n\n  if (num === 1) {\n    return result + translateSingular(num, withoutSuffix, key[0], isFuture);\n  } else if (withoutSuffix) {\n    return result + (special(num) ? forms(key)[1] : forms(key)[0]);\n  } else {\n    if (isFuture) {\n      return result + forms(key)[1];\n    } else {\n      return result + (special(num) ? forms(key)[1] : forms(key)[2]);\n    }\n  }\n}\n\nconst ltLocale = {\n  abbr: 'lt',\n  months: {\n    format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n    standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n    isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n  },\n  monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n  weekdays: {\n    format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n    standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n    isFormat: /dddd HH:mm/\n  },\n  weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n  weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY [m.] MMMM D [d.]',\n    LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n    LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n    l: 'YYYY-MM-DD',\n    ll: 'YYYY [m.] MMMM D [d.]',\n    lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n    llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n  },\n  calendar: {\n    sameDay: '[Šiandien] LT',\n    nextDay: '[Rytoj] LT',\n    nextWeek: 'dddd LT',\n    lastDay: '[Vakar] LT',\n    lastWeek: '[Praėjusį] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'po %s',\n    past: 'prieš %s',\n    s: translateSeconds,\n    ss: translate$3,\n    m: translateSingular,\n    mm: translate$3,\n    h: translateSingular,\n    hh: translate$3,\n    d: translateSingular,\n    dd: translate$3,\n    M: translateSingular,\n    MM: translate$3,\n    y: translateSingular,\n    yy: translate$3\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n\n  ordinal(num) {\n    return num + '-oji';\n  },\n\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Latvian [lv]\n//! author : Matiss Janis Aboltins : https://github.com/matissjanis\n\nconst lvLocale = {\n  abbr: 'lv',\n  months: 'Janvāris_Februāris_Marts_Aprīlis_Maijs_Jūnijs_Jūlijs_Augusts_Septembris_Oktobris_Novembris_Decembris'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Mai_Jūn_Jūl_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays: 'Svētdiena_Pirmdiena_Otrdiena_Trešdiena_Ceturtdiena_Piektdiena_Sestdiena'.split('_'),\n  weekdaysShort: 'Svētd_Pirmd_Otrd_Trešd_Ceturtd_Piektd_Sestd'.split('_'),\n  weekdaysMin: 'Sv_Pi_Ot_Tr_Ce_Pk_Se'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'pēc %s',\n    past: 'pirms %s',\n    s: 'dažām sekundēm',\n    ss: '%d sekundēm',\n    m: 'minūtes',\n    mm: '%d minūtēm',\n    h: 'stundas',\n    hh: '%d stundām',\n    d: 'dienas',\n    dd: '%d dienām',\n    M: 'mēneša',\n    MM: '%d mēnešiem',\n    y: 'gada',\n    yy: '%d gadiem'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n\n  ordinal(num) {\n    return num + '.';\n  },\n\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Mongolian [mn]\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\n\nfunction translate$2(num, withoutSuffix, key, isFuture) {\n  switch (key) {\n    case 's':\n      return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n\n    case 'ss':\n      return num + (withoutSuffix ? ' секунд' : ' секундын');\n\n    case 'm':\n    case 'mm':\n      return num + (withoutSuffix ? ' минут' : ' минутын');\n\n    case 'h':\n    case 'hh':\n      return num + (withoutSuffix ? ' цаг' : ' цагийн');\n\n    case 'd':\n    case 'dd':\n      return num + (withoutSuffix ? ' өдөр' : ' өдрийн');\n\n    case 'M':\n    case 'MM':\n      return num + (withoutSuffix ? ' сар' : ' сарын');\n\n    case 'y':\n    case 'yy':\n      return num + (withoutSuffix ? ' жил' : ' жилийн');\n\n    default:\n      return num.toString(10);\n  }\n}\n\nconst mnLocale = {\n  abbr: 'mn',\n  months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n  monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n  weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n  weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY оны MMMMын D',\n    LLL: 'YYYY оны MMMMын D HH:mm',\n    LLLL: 'dddd, YYYY оны MMMMын D HH:mm'\n  },\n  meridiemParse: /ҮӨ|ҮХ/i,\n  isPM: function (input) {\n    return input === 'ҮХ';\n  },\n  meridiem: function (hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ҮӨ';\n    } else {\n      return 'ҮХ';\n    }\n  },\n  calendar: {\n    sameDay: '[Өнөөдөр] LT',\n    nextDay: '[Маргааш] LT',\n    nextWeek: '[Ирэх] dddd LT',\n    lastDay: '[Өчигдөр] LT',\n    lastWeek: '[Өнгөрсөн] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s дараа',\n    past: '%s өмнө',\n    s: translate$2,\n    ss: translate$2,\n    m: translate$2,\n    mm: translate$2,\n    h: translate$2,\n    hh: translate$2,\n    d: translate$2,\n    dd: translate$2,\n    M: translate$2,\n    MM: translate$2,\n    y: translate$2,\n    yy: translate$2\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n  ordinal: function (num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + ' өдөр';\n\n      default:\n        return num.toString(10);\n    }\n  }\n}; //! moment.js locale configuration\n//! locale : Norwegian Bokmål [nb]\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\n//!           Sigurd Gartmann : https://github.com/sigurdga\n\nconst nbLocale = {\n  abbr: 'nb',\n  months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n  monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n  weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n  weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'dddd [kl.] LT',\n    lastDay: '[i går kl.] LT',\n    lastWeek: '[forrige] dddd [kl.] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'noen sekunder',\n    ss: '%d sekunder',\n    m: 'ett minutt',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dager',\n    M: 'en måned',\n    MM: '%d måneder',\n    y: 'ett år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\nlet monthsShortWithDots$1 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\nlet monthsShortWithoutDots$1 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\nlet monthsParse$2 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex$1 = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\nconst nlBeLocale = {\n  abbr: 'nl-be',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortWithDots$1;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots$1[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots$1[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex: monthsRegex$1,\n  monthsShortRegex: monthsRegex$1,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$2,\n  longMonthsParse: monthsParse$2,\n  shortMonthsParse: monthsParse$2,\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'één minuut',\n    mm: '%d minuten',\n    h: 'één uur',\n    hh: '%d uur',\n    d: 'één dag',\n    dd: '%d dagen',\n    M: 'één maand',\n    MM: '%d maanden',\n    y: 'één jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n\n  ordinal(_num) {\n    const num = Number(_num);\n    return num + (num === 1 || num === 8 || num >= 20 ? 'ste' : 'de');\n  },\n\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n    monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\nlet monthsParse$1 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\nconst nlLocale = {\n  abbr: 'nl',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$1,\n  longMonthsParse: monthsParse$1,\n  shortMonthsParse: monthsParse$1,\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD-MM-YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'één minuut',\n    mm: '%d minuten',\n    h: 'één uur',\n    hh: '%d uur',\n    d: 'één dag',\n    dd: '%d dagen',\n    M: 'één maand',\n    MM: '%d maanden',\n    y: 'één jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n\n  ordinal(_num) {\n    const num = Number(_num);\n    return num + (num === 1 || num === 8 || num >= 20 ? 'ste' : 'de');\n  },\n\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n\nlet monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n\nfunction plural$3(num) {\n  return num % 10 < 5 && num % 10 > 1 && ~~(num / 10) % 10 !== 1;\n}\n\nfunction translate$1(num, withoutSuffix, key) {\n  let result = num + ' ';\n\n  switch (key) {\n    case 'ss':\n      return result + (plural$3(num) ? 'sekundy' : 'sekund');\n\n    case 'm':\n      return withoutSuffix ? 'minuta' : 'minutę';\n\n    case 'mm':\n      return result + (plural$3(num) ? 'minuty' : 'minut');\n\n    case 'h':\n      return withoutSuffix ? 'godzina' : 'godzinę';\n\n    case 'hh':\n      return result + (plural$3(num) ? 'godziny' : 'godzin');\n\n    case 'MM':\n      return result + (plural$3(num) ? 'miesiące' : 'miesięcy');\n\n    case 'yy':\n      return result + (plural$3(num) ? 'lata' : 'lat');\n  }\n}\n\nconst plLocale = {\n  abbr: 'pl',\n\n  months(date, format, isUTC) {\n    if (!date) {\n      return monthsNominative;\n    } else if (format === '') {\n      // Hack: if format empty we know this is used to generate\n      // RegExp by moment. Give then back both valid forms of months\n      // in RegExp ready format.\n      return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\n    } else if (/D MMMM/.test(format)) {\n      return monthsSubjective[getMonth(date, isUTC)];\n    } else {\n      return monthsNominative[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n  weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n  weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n  weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Dziś o] LT',\n    nextDay: '[Jutro o] LT',\n\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W niedzielę o] LT';\n\n        case 2:\n          return '[We wtorek o] LT';\n\n        case 3:\n          return '[W środę o] LT';\n\n        case 5:\n          return '[W piątek o] LT';\n\n        case 6:\n          return '[W sobotę o] LT';\n\n        default:\n          return '[W] dddd [o] LT';\n      }\n    },\n\n    lastDay: '[Wczoraj o] LT',\n\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W zeszłą niedzielę o] LT';\n\n        case 3:\n          return '[W zeszłą środę o] LT';\n\n        case 4:\n          return '[W zeszłą czwartek o] LT';\n\n        case 5:\n          return '[W zeszłą piątek o] LT';\n\n        case 6:\n          return '[W zeszłą sobotę o] LT';\n\n        default:\n          return '[W zeszły] dddd [o] LT';\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: '%s temu',\n    s: 'kilka sekund',\n    ss: translate$1,\n    m: translate$1,\n    mm: translate$1,\n    h: translate$1,\n    hh: translate$1,\n    d: '1 dzień',\n    dd: '%d dni',\n    M: 'miesiąc',\n    MM: translate$1,\n    y: 'rok',\n    yy: translate$1\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n\nconst ptBrLocale = {\n  abbr: 'pt-br',\n  months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n  monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n  weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n  weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n  weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hoje às] LT',\n    nextDay: '[Amanhã às] LT',\n    nextWeek: 'dddd [às] LT',\n    lastDay: '[Ontem às] LT',\n\n    lastWeek(date) {\n      return getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6 ? '[Último] dddd [às] LT' : // Saturday + Sunday\n      '[Última] dddd [às] LT'; // Monday - Friday\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'em %s',\n    past: '%s atrás',\n    s: 'poucos segundos',\n    ss: '%d segundos',\n    m: 'um minuto',\n    mm: '%d minutos',\n    h: 'uma hora',\n    hh: '%d horas',\n    d: 'um dia',\n    dd: '%d dias',\n    M: 'um mês',\n    MM: '%d meses',\n    y: 'um ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº'\n}; // ! moment.js locale configuration\n// ! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n// ! author : Earle white: https://github.com/5earle\n\nfunction relativeTimeWithPlural$2(num, withoutSuffix, key) {\n  let format = {\n    ss: 'secunde',\n    mm: 'minute',\n    hh: 'ore',\n    dd: 'zile',\n    MM: 'luni',\n    yy: 'ani'\n  };\n  let separator = ' ';\n\n  if (num % 100 >= 20 || num >= 100 && num % 100 === 0) {\n    separator = ' de ';\n  }\n\n  return num + separator + format[key];\n}\n\nconst roLocale = {\n  abbr: 'ro',\n  months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n  monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n  weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n  weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[azi la] LT',\n    nextDay: '[mâine la] LT',\n    nextWeek: 'dddd [la] LT',\n    lastDay: '[ieri la] LT',\n    lastWeek: '[fosta] dddd [la] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'peste %s',\n    past: '%s în urmă',\n    s: 'câteva secunde',\n    ss: relativeTimeWithPlural$2,\n    m: 'un minut',\n    mm: relativeTimeWithPlural$2,\n    h: 'o oră',\n    hh: relativeTimeWithPlural$2,\n    d: 'o zi',\n    dd: relativeTimeWithPlural$2,\n    M: 'o lună',\n    MM: relativeTimeWithPlural$2,\n    y: 'un an',\n    yy: relativeTimeWithPlural$2\n  },\n  week: {\n    dow: 1,\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\n\nfunction plural$2(word, num) {\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n}\n\nfunction relativeTimeWithPlural$1(num, withoutSuffix, key) {\n  let format = {\n    ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n    mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n    hh: 'час_часа_часов',\n    dd: 'день_дня_дней',\n    MM: 'месяц_месяца_месяцев',\n    yy: 'год_года_лет'\n  };\n\n  if (key === 'm') {\n    return withoutSuffix ? 'минута' : 'минуту';\n  }\n\n  return num + ' ' + plural$2(format[key], +num);\n}\n\nlet monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i]; // http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n\nconst ruLocale = {\n  abbr: 'ru',\n  months: {\n    format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n    standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n  },\n  monthsShort: {\n    // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n    format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n    standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n  },\n  weekdays: {\n    standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n    format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n    isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n  },\n  weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n  monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n  // копия предыдущего\n  monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n  // полные названия с падежами\n  monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n  // Выражение, которое соотвествует только сокращённым формам\n  monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY г.',\n    LLL: 'D MMMM YYYY г., H:mm',\n    LLLL: 'dddd, D MMMM YYYY г., H:mm'\n  },\n  calendar: {\n    sameDay: '[Сегодня в] LT',\n    nextDay: '[Завтра в] LT',\n    lastDay: '[Вчера в] LT',\n\n    nextWeek(date, now) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[В следующее] dddd [в] LT';\n\n          case 1:\n          case 2:\n          case 4:\n            return '[В следующий] dddd [в] LT';\n\n          case 3:\n          case 5:\n          case 6:\n            return '[В следующую] dddd [в] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[Во] dddd [в] LT';\n        } else {\n          return '[В] dddd [в] LT';\n        }\n      }\n    },\n\n    lastWeek(date, now) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[В прошлое] dddd [в] LT';\n\n          case 1:\n          case 2:\n          case 4:\n            return '[В прошлый] dddd [в] LT';\n\n          case 3:\n          case 5:\n          case 6:\n            return '[В прошлую] dddd [в] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[Во] dddd [в] LT';\n        } else {\n          return '[В] dddd [в] LT';\n        }\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'через %s',\n    past: '%s назад',\n    s: 'несколько секунд',\n    ss: relativeTimeWithPlural$1,\n    m: relativeTimeWithPlural$1,\n    mm: relativeTimeWithPlural$1,\n    h: 'час',\n    hh: relativeTimeWithPlural$1,\n    d: 'день',\n    dd: relativeTimeWithPlural$1,\n    M: 'месяц',\n    MM: relativeTimeWithPlural$1,\n    y: 'год',\n    yy: relativeTimeWithPlural$1\n  },\n  meridiemParse: /ночи|утра|дня|вечера/i,\n\n  isPM(input) {\n    return /^(дня|вечера)$/.test(input);\n  },\n\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночи';\n    } else if (hour < 12) {\n      return 'утра';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечера';\n    }\n  },\n\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n\n  ordinal(_num, period) {\n    const num = Number(_num);\n\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n        return num + '-й';\n\n      case 'D':\n        return num + '-го';\n\n      case 'w':\n      case 'W':\n        return num + '-я';\n\n      default:\n        return num.toString(10);\n    }\n  },\n\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Slovak [sk]\n//! author : Jozef Pažin : https://github.com/atiris\n\nconst months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');\nconst monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n\nfunction plural$1(num) {\n  return num > 1 && num < 5 && ~~(num / 10) !== 1;\n}\n\nfunction translate(num, withoutSuffix, key, isFuture) {\n  const result = num + ' ';\n\n  switch (key) {\n    case 's':\n      // a few seconds / in a few seconds / a few seconds ago\n      return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';\n\n    case 'ss':\n      // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'sekundy' : 'sekúnd');\n      } else {\n        return result + 'sekundami';\n      }\n\n    // break;\n\n    case 'm':\n      // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';\n\n    case 'mm':\n      // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'minúty' : 'minút');\n      } else {\n        return result + 'minútami';\n      }\n\n    // break;\n\n    case 'h':\n      // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n\n    case 'hh':\n      // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'hodiny' : 'hodín');\n      } else {\n        return result + 'hodinami';\n      }\n\n    // break;\n\n    case 'd':\n      // a day / in a day / a day ago\n      return withoutSuffix || isFuture ? 'deň' : 'dňom';\n\n    case 'dd':\n      // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'dni' : 'dní');\n      } else {\n        return result + 'dňami';\n      }\n\n    // break;\n\n    case 'M':\n      // a month / in a month / a month ago\n      return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';\n\n    case 'MM':\n      // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'mesiace' : 'mesiacov');\n      } else {\n        return result + 'mesiacmi';\n      }\n\n    // break;\n\n    case 'y':\n      // a year / in a year / a year ago\n      return withoutSuffix || isFuture ? 'rok' : 'rokom';\n\n    case 'yy':\n      // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'roky' : 'rokov');\n      } else {\n        return result + 'rokmi';\n      }\n\n    // break;\n  }\n}\n\nconst skLocale = {\n  abbr: 'sk',\n  months,\n  monthsShort,\n  weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n  weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n  weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes o] LT',\n    nextDay: '[zajtra o] LT',\n\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v nedeľu o] LT';\n\n        case 1:\n        case 2:\n          return '[v] dddd [o] LT';\n\n        case 3:\n          return '[v stredu o] LT';\n\n        case 4:\n          return '[vo štvrtok o] LT';\n\n        case 5:\n          return '[v piatok o] LT';\n\n        case 6:\n          return '[v sobotu o] LT';\n      }\n    },\n\n    lastDay: '[včera o] LT',\n\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulú nedeľu o] LT';\n\n        case 1:\n        case 2:\n          return '[minulý] dddd [o] LT';\n\n        case 3:\n          return '[minulú stredu o] LT';\n\n        case 4:\n        case 5:\n          return '[minulý] dddd [o] LT';\n\n        case 6:\n          return '[minulú sobotu o] LT';\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'o %s',\n    past: 'pred %s',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Slovenian [sl]\n//! author : mihan : https://github.com/mihan\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n  var result = number + ' ';\n\n  switch (key) {\n    case 's':\n      return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n\n    case 'ss':\n      if (number === 1) {\n        result += withoutSuffix ? 'sekundo' : 'sekundi';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n      } else {\n        result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n      }\n\n      return result;\n\n    case 'm':\n      return withoutSuffix ? 'ena minuta' : 'eno minuto';\n\n    case 'mm':\n      if (number === 1) {\n        result += withoutSuffix ? 'minuta' : 'minuto';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n      } else {\n        result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n      }\n\n      return result;\n\n    case 'h':\n      return withoutSuffix ? 'ena ura' : 'eno uro';\n\n    case 'hh':\n      if (number === 1) {\n        result += withoutSuffix ? 'ura' : 'uro';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'uri' : 'urama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'ure' : 'urami';\n      } else {\n        result += withoutSuffix || isFuture ? 'ur' : 'urami';\n      }\n\n      return result;\n\n    case 'd':\n      return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n\n    case 'dd':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n      } else {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n      }\n\n      return result;\n\n    case 'M':\n      return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n\n    case 'MM':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n      } else {\n        result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n      }\n\n      return result;\n\n    case 'y':\n      return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n\n    case 'yy':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'leto' : 'letom';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'leta' : 'leti';\n      } else {\n        result += withoutSuffix || isFuture ? 'let' : 'leti';\n      }\n\n      return result;\n  }\n}\n\nconst slLocale = {\n  abbr: 'sl',\n  months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n  weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n  weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[danes ob] LT',\n    nextDay: '[jutri ob] LT',\n\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v] [nedeljo] [ob] LT';\n\n        case 3:\n          return '[v] [sredo] [ob] LT';\n\n        case 6:\n          return '[v] [soboto] [ob] LT';\n\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[v] dddd [ob] LT';\n      }\n    },\n\n    lastDay: '[včeraj ob] LT',\n\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[prejšnjo] [nedeljo] [ob] LT';\n\n        case 3:\n          return '[prejšnjo] [sredo] [ob] LT';\n\n        case 6:\n          return '[prejšnjo] [soboto] [ob] LT';\n\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[prejšnji] dddd [ob] LT';\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'čez %s',\n    past: 'pred %s',\n    s: processRelativeTime,\n    ss: processRelativeTime,\n    m: processRelativeTime,\n    mm: processRelativeTime,\n    h: processRelativeTime,\n    hh: processRelativeTime,\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Albanian [sq]\n//! author : Agon Cecelia : https://github.com/agoncecelia\n\nconst sqLocale = {\n  abbr: 'sq',\n  months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n  monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n  weekdays: 'E Dielë_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n  weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n  weekdaysMin: 'Di_He_Ma_Me_En_Pr_Sh'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Sot në] LT',\n    nextDay: '[Nesër në] LT',\n    nextWeek: 'dddd [në] LT',\n    lastDay: '[Dje në] LT',\n    lastWeek: 'dddd [e kaluar në] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'në %s',\n    past: 'para %sve',\n    s: 'disa sekonda',\n    ss: '%d sekonda',\n    m: 'një minut',\n    mm: '%d minuta',\n    h: 'një orë',\n    hh: '%d orë',\n    d: 'një ditë',\n    dd: '%d ditë',\n    M: 'një muaj',\n    MM: '%d muaj',\n    y: 'një vit',\n    yy: '%d vite'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\n\nconst svLocale = {\n  abbr: 'sv',\n  months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n  weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n  weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n  weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Idag] LT',\n    nextDay: '[Imorgon] LT',\n    lastDay: '[Igår] LT',\n    nextWeek: '[På] dddd LT',\n    lastWeek: '[I] dddd[s] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: 'för %s sedan',\n    s: 'några sekunder',\n    ss: '%d sekunder',\n    m: 'en minut',\n    mm: '%d minuter',\n    h: 'en timme',\n    hh: '%d timmar',\n    d: 'en dag',\n    dd: '%d dagar',\n    M: 'en månad',\n    MM: '%d månader',\n    y: 'ett år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n\n  ordinal(_num) {\n    const num = Number(_num);\n    let b = num % 10,\n        output = ~~(num % 100 / 10) === 1 ? 'e' : b === 1 ? 'a' : b === 2 ? 'a' : b === 3 ? 'e' : 'e';\n    return num + output;\n  },\n\n  week: {\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n}; // moment.js locale configuration\n// locale : Thai [th]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n\nconst thLocale = {\n  abbr: 'th',\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n  weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY เวลา H:mm',\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n  },\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n\n  isPM(input) {\n    return input === 'หลังเที่ยง';\n  },\n\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ก่อนเที่ยง';\n    } else {\n      return 'หลังเที่ยง';\n    }\n  },\n\n  calendar: {\n    sameDay: '[วันนี้ เวลา] LT',\n    nextDay: '[พรุ่งนี้ เวลา] LT',\n    nextWeek: 'dddd[หน้า เวลา] LT',\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'อีก %s',\n    past: '%sที่แล้ว',\n    s: 'ไม่กี่วินาที',\n    ss: '%d วินาที',\n    m: '1 นาที',\n    mm: '%d นาที',\n    h: '1 ชั่วโมง',\n    hh: '%d ชั่วโมง',\n    d: '1 วัน',\n    dd: '%d วัน',\n    M: '1 เดือน',\n    MM: '%d เดือน',\n    y: '1 ปี',\n    yy: '%d ปี'\n  }\n}; // moment.js locale configuration\n// locale : Thai-Buddhist Era [th-be]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n\nconst thBeLocale = {\n  abbr: 'th-be',\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n  weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY เวลา H:mm',\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n  },\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n\n  isPM(input) {\n    return input === 'หลังเที่ยง';\n  },\n\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ก่อนเที่ยง';\n    } else {\n      return 'หลังเที่ยง';\n    }\n  },\n\n  calendar: {\n    sameDay: '[วันนี้ เวลา] LT',\n    nextDay: '[พรุ่งนี้ เวลา] LT',\n    nextWeek: 'dddd[หน้า เวลา] LT',\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'อีก %s',\n    past: '%sที่แล้ว',\n    s: 'ไม่กี่วินาที',\n    ss: '%d วินาที',\n    m: '1 นาที',\n    mm: '%d นาที',\n    h: '1 ชั่วโมง',\n    hh: '%d ชั่วโมง',\n    d: '1 วัน',\n    dd: '%d วัน',\n    M: '1 เดือน',\n    MM: '%d เดือน',\n    y: '1 ปี',\n    yy: '%d ปี'\n  },\n\n  preparse(str, format) {\n    const _format = thBeLocale.longDateFormat[format] ? thBeLocale.longDateFormat[format] : format; // endsWith('YYYY')\n\n\n    if (_format.indexOf('YYYY', _format.length - 'YYYY'.length) !== -1) {\n      const ddMM = str.substr(0, str.length - 4);\n      const yyyy = parseInt(str.substr(str.length - 4), 10) - 543;\n      return ddMM + yyyy;\n    }\n\n    return str;\n  },\n\n  getFullYear(date, isUTC = false) {\n    return 543 + (isUTC ? date.getUTCFullYear() : date.getFullYear());\n  }\n\n}; //! moment.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak Yiğit Kaya: https://github.com/BYK\n\nlet suffixes = {\n  1: '\\'inci',\n  5: '\\'inci',\n  8: '\\'inci',\n  70: '\\'inci',\n  80: '\\'inci',\n  2: '\\'nci',\n  7: '\\'nci',\n  20: '\\'nci',\n  50: '\\'nci',\n  3: '\\'üncü',\n  4: '\\'üncü',\n  100: '\\'üncü',\n  6: '\\'ncı',\n  9: '\\'uncu',\n  10: '\\'uncu',\n  30: '\\'uncu',\n  60: '\\'ıncı',\n  90: '\\'ıncı'\n};\nconst trLocale = {\n  abbr: 'tr',\n  months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n  monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n  weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n  weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n  weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[bugün saat] LT',\n    nextDay: '[yarın saat] LT',\n    nextWeek: '[gelecek] dddd [saat] LT',\n    lastDay: '[dün] LT',\n    lastWeek: '[geçen] dddd [saat] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s sonra',\n    past: '%s önce',\n    s: 'birkaç saniye',\n    ss: '%d saniye',\n    m: 'bir dakika',\n    mm: '%d dakika',\n    h: 'bir saat',\n    hh: '%d saat',\n    d: 'bir gün',\n    dd: '%d gün',\n    M: 'bir ay',\n    MM: '%d ay',\n    y: 'bir yıl',\n    yy: '%d yıl'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n\n  ordinal(_num) {\n    const num = Number(_num);\n\n    if (num === 0) {\n      // special case for zero\n      return num + '\\'ıncı';\n    }\n\n    let a = num % 10,\n        b = num % 100 - a,\n        c = num >= 100 ? 100 : null;\n    return num + (suffixes[a] || suffixes[b] || suffixes[c]);\n  },\n\n  week: {\n    dow: 1,\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n\nfunction plural(word, num) {\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n}\n\nfunction relativeTimeWithPlural(num, withoutSuffix, key) {\n  let format = {\n    ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n    mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n    hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n    dd: 'день_дні_днів',\n    MM: 'місяць_місяці_місяців',\n    yy: 'рік_роки_років'\n  };\n\n  if (key === 'm') {\n    return withoutSuffix ? 'хвилина' : 'хвилину';\n  }\n\n  if (key === 'h') {\n    return withoutSuffix ? 'година' : 'годину';\n  }\n\n  return num + ' ' + plural(format[key], +num);\n}\n\nfunction weekdaysCaseReplace(date, format, isUTC) {\n  let weekdays = {\n    nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n    accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n    genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n  };\n\n  if (!date) {\n    return weekdays.nominative;\n  }\n\n  let nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format) ? 'accusative' : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format) ? 'genitive' : 'nominative';\n  return weekdays[nounCase][getDayOfWeek(date, isUTC)];\n}\n\nfunction processHoursFunction(str) {\n  return function (date) {\n    return str + 'о' + (getHours(date) === 11 ? 'б' : '') + '] LT';\n  };\n}\n\nconst ukLocale = {\n  abbr: 'uk',\n  months: {\n    format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n    standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n  },\n  monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n  weekdays: weekdaysCaseReplace,\n  weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY р.',\n    LLL: 'D MMMM YYYY р., HH:mm',\n    LLLL: 'dddd, D MMMM YYYY р., HH:mm'\n  },\n  calendar: {\n    sameDay: processHoursFunction('[Сьогодні '),\n    nextDay: processHoursFunction('[Завтра '),\n    lastDay: processHoursFunction('[Вчора '),\n    nextWeek: processHoursFunction('[У] dddd ['),\n\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n        case 3:\n        case 5:\n        case 6:\n          return processHoursFunction('[Минулої] dddd [')(date);\n\n        case 1:\n        case 2:\n        case 4:\n          return processHoursFunction('[Минулого] dddd [')(date);\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'за %s',\n    past: '%s тому',\n    s: 'декілька секунд',\n    ss: relativeTimeWithPlural,\n    m: relativeTimeWithPlural,\n    mm: relativeTimeWithPlural,\n    h: 'годину',\n    hh: relativeTimeWithPlural,\n    d: 'день',\n    dd: relativeTimeWithPlural,\n    M: 'місяць',\n    MM: relativeTimeWithPlural,\n    y: 'рік',\n    yy: relativeTimeWithPlural\n  },\n  // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n  meridiemParse: /ночі|ранку|дня|вечора/,\n\n  isPM(input) {\n    return /^(дня|вечора)$/.test(input);\n  },\n\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночі';\n    } else if (hour < 12) {\n      return 'ранку';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечора';\n    }\n  },\n\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n\n  ordinal(_num, period) {\n    const num = Number(_num);\n\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n      case 'w':\n      case 'W':\n        return num + '-й';\n\n      case 'D':\n        return num + '-го';\n\n      default:\n        return num.toString();\n    }\n  },\n\n  week: {\n    dow: 1,\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Việt Nam [vi]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n\nconst viLocale = {\n  abbr: 'vi',\n  months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n  monthsShort: 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n  weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysParseExact: true,\n  meridiemParse: /sa|ch/i,\n\n  isPM(input) {\n    return /^ch$/i.test(input);\n  },\n\n  meridiem(hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower ? 'sa' : 'SA';\n    } else {\n      return isLower ? 'ch' : 'CH';\n    }\n  },\n\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM [năm] YYYY',\n    LLL: 'D MMMM [năm] YYYY HH:mm',\n    LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',\n    l: 'DD/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hôm nay lúc] LT',\n    nextDay: '[Ngày mai lúc] LT',\n    nextWeek: 'dddd [tuần tới lúc] LT',\n    lastDay: '[Hôm qua lúc] LT',\n    lastWeek: 'dddd [tuần trước lúc] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s tới',\n    past: '%s trước',\n    s: 'vài giây',\n    ss: '%d giây',\n    m: 'một phút',\n    mm: '%d phút',\n    h: 'một giờ',\n    hh: '%d giờ',\n    d: 'một ngày',\n    dd: '%d ngày',\n    M: 'một tháng',\n    MM: '%d tháng',\n    y: 'một năm',\n    yy: '%d năm'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}/,\n\n  ordinal(_num) {\n    return '' + _num;\n  },\n\n  week: {\n    dow: 1,\n    doy: 4 // Tuần chứa ngày 4 tháng 1 là tuần đầu tiên trong năm.\n\n  }\n}; //! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\n\nconst zhCnLocale = {\n  abbr: 'zh-cn',\n  months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n  weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n  weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYY年M月D日',\n    LLL: 'YYYY年M月D日Ah点mm分',\n    LLLL: 'YYYY年M月D日ddddAh点mm分',\n    l: 'YYYY/M/D',\n    ll: 'YYYY年M月D日',\n    lll: 'YYYY年M月D日 HH:mm',\n    llll: 'YYYY年M月D日dddd HH:mm'\n  },\n  meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n\n    if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n      return hour;\n    } else if (meridiem === '下午' || meridiem === '晚上') {\n      return hour + 12;\n    } else {\n      // '中午'\n      return hour >= 11 ? hour : hour + 12;\n    }\n  },\n\n  meridiem(hour, minute, isLower) {\n    let hm = hour * 100 + minute;\n\n    if (hm < 600) {\n      return '凌晨';\n    } else if (hm < 900) {\n      return '早上';\n    } else if (hm < 1130) {\n      return '上午';\n    } else if (hm < 1230) {\n      return '中午';\n    } else if (hm < 1800) {\n      return '下午';\n    } else {\n      return '晚上';\n    }\n  },\n\n  calendar: {\n    sameDay: '[今天]LT',\n    nextDay: '[明天]LT',\n    nextWeek: '[下]ddddLT',\n    lastDay: '[昨天]LT',\n    lastWeek: '[上]ddddLT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n\n  ordinal(_num, period) {\n    const num = Number(_num);\n\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '日';\n\n      case 'M':\n        return num + '月';\n\n      case 'w':\n      case 'W':\n        return num + '周';\n\n      default:\n        return num.toString();\n    }\n  },\n\n  relativeTime: {\n    future: '%s内',\n    past: '%s前',\n    s: '几秒',\n    ss: '%d 秒',\n    m: '1 分钟',\n    mm: '%d 分钟',\n    h: '1 小时',\n    hh: '%d 小时',\n    d: '1 天',\n    dd: '%d 天',\n    M: '1 个月',\n    MM: '%d 个月',\n    y: '1 年',\n    yy: '%d 年'\n  },\n  week: {\n    // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n    dow: 1,\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { add, arLocale, bgLocale, caLocale, csLocale, daLocale, deLocale, defineLocale, enGbLocale, endOf, esDoLocale, esLocale, esPrLocale, esUsLocale, etLocale, fiLocale, formatDate, frLocale, getDay, getFirstDayOfMonth, getFullYear, getLocale, getMonth, getSetGlobalLocale, glLocale, heLocale, hiLocale, hrLocale, huLocale, idLocale, isAfter, isArray, isBefore, isDate, isDateValid, isDisabledDay, isFirstDayOfWeek, isSame, isSameDay$1 as isSameDay, isSameMonth, isSameYear, itLocale, jaLocale, kaLocale, kkLocale, koLocale, listLocales, ltLocale, lvLocale, mnLocale, nbLocale, nlBeLocale, nlLocale, parseDate, plLocale, ptBrLocale, roLocale, ruLocale, setFullDate, shiftDate, skLocale, slLocale, sqLocale, startOf, subtract, svLocale, thBeLocale, thLocale, trLocale, ukLocale, updateLocale, utcAsLocal, viLocale, zhCnLocale };","map":{"version":3,"names":["mod","n","x","absFloor","num","Math","ceil","floor","isString","str","isDate","value","Date","Object","prototype","toString","call","isBoolean","isDateValid","date","getTime","isNaN","isFunction","fn","Function","isNumber","isArray","input","Array","hasOwnProp","a","b","hasOwnProperty","isObject","isObjectEmpty","obj","getOwnPropertyNames","length","k","isUndefined","toInt","argumentForCoercion","coercedNumber","isFinite","aliases","_mapUnits","hour","minute","second","millisecond","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","_unit","normalizeUnits","units","undefined","normalizeObjectUnits","inputObject","normalizedInput","normalizedProp","prop","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","zeroFill","targetLength","forceSign","absNumber","abs","zerosToFill","sign","_sign","_zeros","pow","max","substr","formatFunctions","formatTokenFunctions","formattingTokens","addFormatToken","token","padded","ordinal","callback","apply","arguments","opts","locale","makeFormatFunction","format","array","match","formatArr","i","removeFormattingTokens","isUTC","offset","output","j","replace","createUTCDate","y","m","d","UTC","getUTCFullYear","setUTCFullYear","createDate","h","M","s","ms","getFullYear","setFullYear","getHours","getUTCHours","getMinutes","getUTCMinutes","getSeconds","getUTCSeconds","getMilliseconds","getUTCMilliseconds","getDay","getUTCDay","getDate","getUTCDate","getMonth","getUTCMonth","getUnixTime","valueOf","unix","getFirstDayOfMonth","daysInMonth$1","_daysInMonth","year","month","isFirstDayOfWeek","firstDayOfWeek","Number","isSameMonth","date1","date2","isSameYear","isSameDay$1","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchTimestamp","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","_strict","RegExp","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","_token","func","config","addWeekParseToken","_w","addTimeToArrayFromToken","_a","priorities","addUnitPriority","priority","initDayOfMonth","_dayOfMonthOrdinalParse","_ordinalParse","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","getYear","initYear","parseTwoDigitYear","parseInt","daysInYear","isLeapYear","daysInMonth","NaN","modMonth","_year","initMonth","monthsShort","months","monthsShortRegex","monthsRegex","_locale","monthsParse","defaultTimeUnit","day","seconds","shiftDate","assign","min","setFullDate","getNum","milliseconds","def","_month","_date","setMonth","dayOfMonth","setUTCMonth","setDay","setUTCDate","setDate","setHours","setUTCHours","setMinutes","setUTCMinutes","setSeconds","setUTCSeconds","setMilliseconds","setUTCMilliseconds","setTime","cloneDate","startOf","setLocaleDayOfWeek","setISODayOfWeek","endOf","start","_step","add","res","subtract","initDayOfYear","getDayOfYear","_dayOfYear","someDate","oneDay","round","setDayOfYear","dayOfYear","firstWeekOffset","dow","doy","fwd","fwdlw","dayOfYearFromWeeks","week","weekday","localWeekday","weekOffset","resYear","resDayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultOrdinal","defaultDayOfMonthOrdinalParse","defaultMonthsShortRegex","defaultMonthsRegex","Locale","constructor","set","confKey","key","_config","calendar","now","_calendar","longDateFormat","_longDateFormat","formatUpper","toUpperCase","val","slice","invalidDate","_invalidDate","_ordinal","preparse","postformat","relativeTime","withoutSuffix","isFuture","_relativeTime","pastFuture","diff","_months","standalone","isFormat","test","_monthsShort","monthName","strict","_monthsParseExact","handleMonthStrictParse","_monthsParse","_longMonthsParse","_shortMonthsParse","_shortMonths","computeMonthsParse","_monthsStrictRegex","_monthsRegex","_monthsShortStrictRegex","_monthsShortRegex","_week","firstDayOfYear","weekdays","_weekdays","_key","weekdaysMin","_weekdaysMin","weekdaysShort","_weekdaysShort","weekdaysParse","weekdayName","_weekdaysParseExact","handleWeekStrictParse","_weekdaysParse","_minWeekdaysParse","_shortWeekdaysParse","_fullWeekdaysParse","setDayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","isPM","charAt","hours","minutes","isLower","formatLongDate","llc","toLocaleLowerCase","ii","mom","indexOf","shortPieces","longPieces","mixedPieces","push","sort","cmpLenRev","join","minPieces","minp","shortp","longp","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultInvalidDate","defaultLocaleWeek","defaultLocaleMeridiemParse","defaultRelativeTime","future","past","ss","mm","hh","dd","MM","yy","baseConfig","dayOfMonthOrdinalParse","meridiemParse","compareArrays","array1","array2","dontConvert","len","lengthDiff","diffs","initWeek","getWeek","getISOWeek","setWeek","getLocale","setISOWeek","initWeekYear","getWeekYear","getISOWeekYear","addWeekYearFormatToken","_getWeekYearFormatCb","_getISOWeekYearFormatCb","getter","getSetWeekYear","getSetWeekYearHelper","getLocaleDayOfWeek","getSetISOWeekYear","getISODayOfWeek","getISOWeeksInYear","getWeeksInYear","weeksTarget","setWeekAll","weekYear","dayOfYearData","initTimezone","getZoneAbbr","getZoneName","initTimestamp","_d","parseFloat","initSecond","initQuarter","getQuarter","setQuarter","quarter","addOffsetFormatToken","separator","getUTCOffset","_isUTC","_offset","initOffset","_useUTC","_tzm","offsetFromString","chunkOffset","matcher","matches","chunk","parts","_min","cloneWithOffset","offsetDiff","getDateOffset","getTimezoneOffset","setUTCOffset","keepLocalTime","keepMinutes","localAdjust","_input","_changeInProgress","setOffsetToUTC","isDaylightSavingTime","setOffsetToParsedOffset","tZone","hasAlignedHourOffset","initMinute","initMillisecond","parseMs","initHour","hFormat","kFormat","_h","_mm","_ss","_H","lowercase","matchMeridiem","_meridiemParse","kInput","_isPm","_meridiem","bigHour","pos","pos1","pos2","locales","localeFamilies","globalLocale","normalizeLocale","chooseLocale","names","next","loadLocale","mergeConfigs","parentConfig","childConfig","childProp","parentProp","name","console","error","getSetGlobalLocale","values","data","defineLocale","_abbr","abbr","parentLocale","forEach","updateLocale","tmpLocale","setDefaultLocale","listLocales","keys","initDayOfWeek","ordering","orderingHash","reduce","mem","order","isDurationValid","duration","durationKeys","some","unitHasDecimal","absCeil","number","bubble","dur","_milliseconds","days","_days","_data","monthsToDays","monthsFromDays","daysToMonths","years","thresholds","substituteTimeAgo","posNegDuration","createDuration","as","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","Duration","quarters","weeks","_isValid","isValid","humanize","withSuffix","localeData","localeKey","mathAbs","_units","Error","isDuration","flags","parsedParts","isNowValid","invalidWeekday","isFrozen","createInvalid","markInvalid","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","_i","exec","allowTime","dateFormat","timeFormat","tzFormat","l","_f","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","preprocessRFC2822","trim","checkWeekday","weekdayStr","parsedInput","weekdayProvided","weekdayActual","calculateOffset","obsOffset","militaryOffset","numOffset","hm","configFromRFC2822","parsedArray","configFromString","formatDate","_format","formatMoment","expandFormat","localFormattingTokens","replaceLongDateFormatTokens","lastIndex","defaults","c","currentDateArray","nowValue","configFromArray","yearToUse","currentDate","dayOfYearFromWeekInfo","_overflowDayOfYear","_nextDay","expectedWeekday","temp","weekdayOverflow","w","curWeek","_overflowWeeks","_overflowWeekday","checkOverflow","ISO_8601","RFC_2822","totalParsedInputLength","inputLength","skipped","meridiemFixWrap","_hour","meridiemHour","isPm","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","map","createFromConfig","prepareConfig","_l","configFromInput","_arr","createLocalOrUTC","parseDate","utcAsLocal","absRound","isAfter","isBefore","isDisabledDay","daysDisabled","isBetween","from","to","inclusivity","leftBound","rightBound","isSame","inputMs","isSameDay","isSameOrAfter","isSameOrBefore","aspNetRegex","isoRegex","convertDuration","parseIso","diffRes","momentsDifference","inp","positiveMomentsDifference","base","other","_basePlus","_other","period","addSubtract","isAdding","parseWeekday","_num","_weekDay","parseIsoWeekday","getSetDayOfWeek","getDayOfWeek","symbolMap$1","numberMap$1","pluralForm","plurals","pluralize","u","f","months$2","arLocale","weekdaysParseExact","bgLocale","lastDigit","last2Digits","monthsShortDot$5","monthsShort$7","monthsParse$6","monthsRegex$5","caLocale","monthsStrictRegex","monthsShortStrictRegex","longMonthsParse","shortMonthsParse","months$1","monthsShort$6","plural$4","translate$6","csLocale","daLocale","processRelativeTime$2","deLocale","monthsParseExact","enGbLocale","monthsShortDot$4","monthsShort$5","monthsParse$5","monthsRegex$4","esDoLocale","monthsShortDot$3","monthsShort$4","monthsParse$4","monthsRegex$3","esLocale","monthsShortDot$2","monthsShort$3","esPrLocale","monthsShortDot$1","monthsShort$2","esUsLocale","processRelativeTime$1","etLocale","numbersPast","numbersFuture","translate$5","verbalNumber","fiLocale","ll","lll","llll","frLocale","monthsShortDot","monthsShort$1","monthsParse$3","monthsRegex$2","glLocale","heLocale","symbolMap","numberMap","hiLocale","weekEndings","translate$4","huLocale","hrLocale","idLocale","itLocale","jaLocale","kaLocale","st","_period","suffixes$1","kkLocale","koLocale","isUpper","translateSeconds","translateSingular","forms","special","translate$3","ltLocale","lvLocale","translate$2","mnLocale","nbLocale","monthsShortWithDots$1","monthsShortWithoutDots$1","monthsParse$2","monthsRegex$1","nlBeLocale","monthsShortWithDots","monthsShortWithoutDots","monthsParse$1","nlLocale","monthsNominative","monthsSubjective","plural$3","translate$1","plLocale","ptBrLocale","relativeTimeWithPlural$2","roLocale","plural$2","word","relativeTimeWithPlural$1","ruLocale","plural$1","translate","skLocale","processRelativeTime","slLocale","sqLocale","svLocale","thLocale","thBeLocale","ddMM","yyyy","suffixes","trLocale","plural","relativeTimeWithPlural","weekdaysCaseReplace","nominative","accusative","genitive","nounCase","processHoursFunction","ukLocale","viLocale","zhCnLocale"],"sources":["C:/Users/aiman/Documents/Projects/fairwindscu-customer-app/node_modules/ngx-bootstrap/chronos/fesm2020/ngx-bootstrap-chronos.mjs"],"sourcesContent":["function mod(n, x) {\n    return (n % x + x) % x;\n}\nfunction absFloor(num) {\n    return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\n}\n\nfunction isString(str) {\n    return typeof str === 'string';\n}\nfunction isDate(value) {\n    return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\n}\nfunction isBoolean(value) {\n    return value === true || value === false;\n}\nfunction isDateValid(date) {\n    return date && date.getTime && !isNaN(date.getTime());\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isFunction(fn) {\n    return (fn instanceof Function ||\n        Object.prototype.toString.call(fn) === '[object Function]');\n}\nfunction isNumber(value) {\n    return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\nfunction isArray(input) {\n    return (input instanceof Array ||\n        Object.prototype.toString.call(input) === '[object Array]');\n}\nfunction hasOwnProp(a /*object*/, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\nfunction isObject(input /*object*/) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return (input != null && Object.prototype.toString.call(input) === '[object Object]');\n}\nfunction isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n        return (Object.getOwnPropertyNames(obj).length === 0);\n    }\n    let k;\n    for (k in obj) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (obj.hasOwnProperty(k)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isUndefined(input) {\n    return input === void 0;\n}\nfunction toInt(argumentForCoercion) {\n    const coercedNumber = +argumentForCoercion;\n    let value = 0;\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n    return value;\n}\n\nconst aliases = {};\nconst _mapUnits = {\n    date: 'day',\n    hour: 'hours',\n    minute: 'minutes',\n    second: 'seconds',\n    millisecond: 'milliseconds'\n};\nfunction addUnitAlias(unit, shorthand) {\n    const lowerCase = unit.toLowerCase();\n    let _unit = unit;\n    if (lowerCase in _mapUnits) {\n        _unit = _mapUnits[lowerCase];\n    }\n    aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = _unit;\n}\nfunction normalizeUnits(units) {\n    return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\nfunction normalizeObjectUnits(inputObject) {\n    const normalizedInput = {};\n    let normalizedProp;\n    let prop;\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n    return normalizedInput;\n}\n\n// place in new Date([array])\nconst YEAR = 0;\nconst MONTH = 1;\nconst DATE = 2;\nconst HOUR = 3;\nconst MINUTE = 4;\nconst SECOND = 5;\nconst MILLISECOND = 6;\nconst WEEK = 7;\nconst WEEKDAY = 8;\n\nfunction zeroFill(num, targetLength, forceSign) {\n    const absNumber = `${Math.abs(num)}`;\n    const zerosToFill = targetLength - absNumber.length;\n    const sign = num >= 0;\n    const _sign = sign ? (forceSign ? '+' : '') : '-';\n    // todo: this is crazy slow\n    const _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\n    return (_sign + _zeros + absNumber);\n}\n\nconst formatFunctions = {};\nconst formatTokenFunctions = {};\nconst formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken(token, padded, ordinal, callback) {\n    if (token) {\n        formatTokenFunctions[token] = callback;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function (date, opts) {\n            return opts.locale.ordinal(callback.apply(null, arguments), token);\n        };\n    }\n}\nfunction makeFormatFunction(format) {\n    const array = format.match(formattingTokens);\n    const length = array.length;\n    const formatArr = new Array(length);\n    for (let i = 0; i < length; i++) {\n        formatArr[i] = formatTokenFunctions[array[i]]\n            ? formatTokenFunctions[array[i]]\n            : removeFormattingTokens(array[i]);\n    }\n    return function (date, locale, isUTC, offset = 0) {\n        let output = '';\n        for (let j = 0; j < length; j++) {\n            output += isFunction(formatArr[j])\n                ? formatArr[j].call(null, date, { format, locale, isUTC, offset })\n                : formatArr[j];\n        }\n        return output;\n    };\n}\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction createUTCDate(y, m, d) {\n    // eslint-disable-next-line prefer-rest-params\n    const date = new Date(Date.UTC.apply(null, arguments));\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\nfunction createDate(y, m = 0, d = 1, h = 0, M = 0, s = 0, ms = 0) {\n    const date = new Date(y, m, d, h, M, s, ms);\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction getHours(date, isUTC = false) {\n    return isUTC ? date.getUTCHours() : date.getHours();\n}\nfunction getMinutes(date, isUTC = false) {\n    return isUTC ? date.getUTCMinutes() : date.getMinutes();\n}\nfunction getSeconds(date, isUTC = false) {\n    return isUTC ? date.getUTCSeconds() : date.getSeconds();\n}\nfunction getMilliseconds(date, isUTC = false) {\n    return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\n}\nfunction getTime(date) {\n    return date.getTime();\n}\nfunction getDay(date, isUTC = false) {\n    return isUTC ? date.getUTCDay() : date.getDay();\n}\nfunction getDate(date, isUTC = false) {\n    return isUTC ? date.getUTCDate() : date.getDate();\n}\nfunction getMonth(date, isUTC = false) {\n    return isUTC ? date.getUTCMonth() : date.getMonth();\n}\nfunction getFullYear(date, isUTC = false) {\n    return isUTC ? date.getUTCFullYear() : date.getFullYear();\n}\nfunction getUnixTime(date) {\n    return Math.floor(date.valueOf() / 1000);\n}\nfunction unix(date) {\n    return Math.floor(date.valueOf() / 1000);\n}\nfunction getFirstDayOfMonth(date) {\n    return createDate(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes(), date.getSeconds());\n}\nfunction daysInMonth$1(date) {\n    return _daysInMonth(date.getFullYear(), date.getMonth());\n}\nfunction _daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\nfunction isFirstDayOfWeek(date, firstDayOfWeek) {\n    return date.getDay() === Number(firstDayOfWeek);\n}\nfunction isSameMonth(date1, date2) {\n    if (!date1 || !date2) {\n        return false;\n    }\n    return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\n}\nfunction isSameYear(date1, date2) {\n    if (!date1 || !date2) {\n        return false;\n    }\n    return getFullYear(date1) === getFullYear(date2);\n}\nfunction isSameDay$1(date1, date2) {\n    if (!date1 || !date2) {\n        return false;\n    }\n    return (isSameYear(date1, date2) &&\n        isSameMonth(date1, date2) &&\n        getDate(date1) === getDate(date2));\n}\n\nconst match1 = /\\d/; //       0 - 9\nconst match2 = /\\d\\d/; //      00 - 99\nconst match3 = /\\d{3}/; //     000 - 999\nconst match4 = /\\d{4}/; //    0000 - 9999\nconst match6 = /[+-]?\\d{6}/; // -999999 - 999999\nconst match1to2 = /\\d\\d?/; //       0 - 99\nconst match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\nconst match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nconst match1to3 = /\\d{1,3}/; //       0 - 999\nconst match1to4 = /\\d{1,4}/; //       0 - 9999\nconst match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\nconst matchUnsigned = /\\d+/; //       0 - inf\nconst matchSigned = /[+-]?\\d+/; //    -inf - inf\nconst matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nconst matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\nconst matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nconst matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\nconst regexes = {};\nfunction addRegexToken(token, regex, strictRegex) {\n    if (isFunction(regex)) {\n        regexes[token] = regex;\n        return;\n    }\n    regexes[token] = function (isStrict, locale) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\nfunction getParseRegexForToken(token, locale) {\n    const _strict = false;\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n    return regexes[token](_strict, locale);\n}\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(str) {\n    return regexEscape(str\n        .replace('\\\\', '')\n        .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4));\n}\nfunction regexEscape(str) {\n    return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nconst tokens = {};\nfunction addParseToken(token, callback) {\n    const _token = isString(token) ? [token] : token;\n    let func = callback;\n    if (isNumber(callback)) {\n        func = function (input, array, config) {\n            array[callback] = toInt(input);\n            return config;\n        };\n    }\n    if (isArray(_token) && isFunction(func)) {\n        let i;\n        for (i = 0; i < _token.length; i++) {\n            tokens[_token[i]] = func;\n        }\n    }\n}\nfunction addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, _token) {\n        config._w = config._w || {};\n        return callback(input, config._w, config, _token);\n    });\n}\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n    return config;\n}\n\nconst priorities = {};\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n/*\nexport function getPrioritizedUnits(unitsObj) {\n  const units = [];\n  let unit;\n  for (unit in unitsObj) {\n    if (unitsObj.hasOwnProperty(unit)) {\n      units.push({ unit, priority: priorities[unit] });\n    }\n  }\n  units.sort(function (a, b) {\n    return a.priority - b.priority;\n  });\n\n  return units;\n}\n*/\n\nfunction initDayOfMonth() {\n    // FORMATTING\n    addFormatToken('D', ['DD', 2, false], 'Do', function (date, opts) {\n        return getDate(date, opts.isUTC)\n            .toString(10);\n    });\n    // ALIASES\n    addUnitAlias('date', 'D');\n    // PRIOROITY\n    addUnitPriority('date', 9);\n    // PARSING\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\n    });\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array, config) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n        return config;\n    });\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty: false,\n        unusedTokens: [],\n        unusedInput: [],\n        overflow: -2,\n        charsLeftOver: 0,\n        nullInput: false,\n        invalidMonth: null,\n        invalidFormat: false,\n        userInvalidated: false,\n        iso: false,\n        parsedDateParts: [],\n        meridiem: null,\n        rfc2822: false,\n        weekdayMismatch: false\n    };\n}\nfunction getParsingFlags(config) {\n    if (config._pf == null) {\n        config._pf = defaultParsingFlags();\n    }\n    return config._pf;\n}\n\n// FORMATTING\nfunction getYear(date, opts) {\n    if (opts.locale.getFullYear) {\n        return opts.locale.getFullYear(date, opts.isUTC).toString();\n    }\n    return getFullYear(date, opts.isUTC).toString();\n}\nfunction initYear() {\n    addFormatToken('Y', null, null, function (date, opts) {\n        const y = getFullYear(date, opts.isUTC);\n        return y <= 9999 ? y.toString(10) : `+${y}`;\n    });\n    addFormatToken(null, ['YY', 2, false], null, function (date, opts) {\n        return (getFullYear(date, opts.isUTC) % 100).toString(10);\n    });\n    addFormatToken(null, ['YYYY', 4, false], null, getYear);\n    addFormatToken(null, ['YYYYY', 5, false], null, getYear);\n    addFormatToken(null, ['YYYYYY', 6, true], null, getYear);\n    // ALIASES\n    addUnitAlias('year', 'y');\n    // PRIORITIES\n    addUnitPriority('year', 1);\n    // PARSING\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array, config) {\n        array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\n        return config;\n    });\n    addParseToken('YY', function (input, array, config) {\n        array[YEAR] = parseTwoDigitYear(input);\n        return config;\n    });\n    addParseToken('Y', function (input, array, config) {\n        array[YEAR] = parseInt(input, 10);\n        return config;\n    });\n}\nfunction parseTwoDigitYear(input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n}\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// todo: this is duplicate, source in date-getters.ts\nfunction daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n        return NaN;\n    }\n    const modMonth = mod(month, 12);\n    const _year = year + (month - modMonth) / 12;\n    return modMonth === 1\n        ? isLeapYear(_year) ? 29 : 28\n        : (31 - modMonth % 7 % 2);\n}\nfunction initMonth() {\n    // FORMATTING\n    addFormatToken('M', ['MM', 2, false], 'Mo', function (date, opts) {\n        return (getMonth(date, opts.isUTC) + 1).toString(10);\n    });\n    addFormatToken('MMM', null, null, function (date, opts) {\n        return opts.locale.monthsShort(date, opts.format, opts.isUTC);\n    });\n    addFormatToken('MMMM', null, null, function (date, opts) {\n        return opts.locale.months(date, opts.format, opts.isUTC);\n    });\n    // ALIASES\n    addUnitAlias('month', 'M');\n    // PRIORITY\n    addUnitPriority('month', 8);\n    // PARSING\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n    addParseToken(['M', 'MM'], function (input, array, config) {\n        array[MONTH] = toInt(input) - 1;\n        return config;\n    });\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        const month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        }\n        else {\n            getParsingFlags(config).invalidMonth = !!input;\n        }\n        return config;\n    });\n}\n\nconst defaultTimeUnit = {\n    year: 0,\n    month: 0,\n    day: 0,\n    hour: 0,\n    minute: 0,\n    seconds: 0\n};\nfunction shiftDate(date, unit) {\n    const _unit = Object.assign({}, defaultTimeUnit, unit);\n    const year = date.getFullYear() + (_unit.year || 0);\n    const month = date.getMonth() + (_unit.month || 0);\n    let day = date.getDate() + (_unit.day || 0);\n    if (_unit.month && !_unit.day) {\n        day = Math.min(day, daysInMonth(year, month));\n    }\n    return createDate(year, month, day, date.getHours() + (_unit.hour || 0), date.getMinutes() + (_unit.minute || 0), date.getSeconds() + (_unit.seconds || 0));\n}\nfunction setFullDate(date, unit) {\n    return createDate(getNum(date.getFullYear(), unit.year), getNum(date.getMonth(), unit.month), 1, // day, to avoid issue with wrong months selection at the end of current month (#5371)\n    getNum(date.getHours(), unit.hour), getNum(date.getMinutes(), unit.minute), getNum(date.getSeconds(), unit.seconds), getNum(date.getMilliseconds(), unit.milliseconds));\n}\nfunction getNum(def, num) {\n    return isNumber(num) ? num : def;\n}\nfunction setFullYear(date, value, isUTC) {\n    const _month = getMonth(date, isUTC);\n    const _date = getDate(date, isUTC);\n    const _year = getFullYear(date, isUTC);\n    if (isLeapYear(_year) && _month === 1 && _date === 29) {\n        const _daysInMonth = daysInMonth(value, _month);\n        isUTC ? date.setUTCFullYear(value, _month, _daysInMonth) : date.setFullYear(value, _month, _daysInMonth);\n    }\n    isUTC ? date.setUTCFullYear(value) : date.setFullYear(value);\n    return date;\n}\nfunction setMonth(date, value, isUTC) {\n    const dayOfMonth = Math.min(getDate(date), daysInMonth(getFullYear(date), value));\n    isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\n    return date;\n}\nfunction setDay(date, value, isUTC) {\n    isUTC ? date.setUTCDate(value) : date.setDate(value);\n    return date;\n}\nfunction setHours(date, value, isUTC) {\n    isUTC ? date.setUTCHours(value) : date.setHours(value);\n    return date;\n}\nfunction setMinutes(date, value, isUTC) {\n    isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\n    return date;\n}\nfunction setSeconds(date, value, isUTC) {\n    isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\n    return date;\n}\nfunction setMilliseconds(date, value, isUTC) {\n    isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\n    return date;\n}\nfunction setDate(date, value, isUTC) {\n    isUTC ? date.setUTCDate(value) : date.setDate(value);\n    return date;\n}\nfunction setTime(date, value) {\n    date.setTime(value);\n    return date;\n}\n\n// fastest way to clone date\n// https://jsperf.com/clone-date-object2\nfunction cloneDate(date) {\n    return new Date(date.getTime());\n}\n\nfunction startOf(date, unit, isUTC) {\n    const _date = cloneDate(date);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (unit) {\n        case 'year':\n            setMonth(_date, 0, isUTC);\n        /* falls through */\n        case 'quarter':\n        case 'month':\n            setDate(_date, 1, isUTC);\n        /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            setHours(_date, 0, isUTC);\n        /* falls through */\n        case 'hours':\n            setMinutes(_date, 0, isUTC);\n        /* falls through */\n        case 'minutes':\n            setSeconds(_date, 0, isUTC);\n        /* falls through */\n        case 'seconds':\n            setMilliseconds(_date, 0, isUTC);\n    }\n    // weeks are a special case\n    if (unit === 'week') {\n        setLocaleDayOfWeek(_date, 0, { isUTC });\n    }\n    if (unit === 'isoWeek') {\n        setISODayOfWeek(_date, 1);\n    }\n    // quarters are also special\n    if (unit === 'quarter') {\n        setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\n    }\n    return _date;\n}\nfunction endOf(date, unit, isUTC) {\n    let _unit = unit;\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (_unit === 'date') {\n        _unit = 'day';\n    }\n    const start = startOf(date, _unit, isUTC);\n    const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\n    const res = subtract(_step, 1, 'milliseconds', isUTC);\n    return res;\n}\n\nfunction initDayOfYear() {\n    // FORMATTING\n    addFormatToken('DDD', ['DDDD', 3, false], 'DDDo', function (date) {\n        return getDayOfYear(date)\n            .toString(10);\n    });\n    // ALIASES\n    addUnitAlias('dayOfYear', 'DDD');\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n        return config;\n    });\n}\nfunction getDayOfYear(date, isUTC) {\n    const date1 = +startOf(date, 'day', isUTC);\n    const date2 = +startOf(date, 'year', isUTC);\n    const someDate = date1 - date2;\n    const oneDay = 1000 * 60 * 60 * 24;\n    return Math.round(someDate / oneDay) + 1;\n}\nfunction setDayOfYear(date, input) {\n    const dayOfYear = getDayOfYear(date);\n    return add(date, (input - dayOfYear), 'day');\n}\n\n/**\n *\n * @param {number} year\n * @param {number} dow - start-of-first-week\n * @param {number} doy - start-of-year\n * @returns {number}\n */\nfunction firstWeekOffset(year, dow, doy) {\n    // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    const fwd = dow - doy + 7;\n    // first-week day local weekday -- which local weekday is fwd\n    const fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\n    return -fwdlw + fwd - 1;\n}\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    const localWeekday = (7 + weekday - dow) % 7;\n    const weekOffset = firstWeekOffset(year, dow, doy);\n    const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n    let resYear;\n    let resDayOfYear;\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    }\n    else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    }\n    else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\nfunction weekOfYear(date, dow, doy, isUTC) {\n    const weekOffset = firstWeekOffset(getFullYear(date, isUTC), dow, doy);\n    const week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\n    let resWeek;\n    let resYear;\n    if (week < 1) {\n        resYear = getFullYear(date, isUTC) - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    }\n    else if (week > weeksInYear(getFullYear(date, isUTC), dow, doy)) {\n        resWeek = week - weeksInYear(getFullYear(date, isUTC), dow, doy);\n        resYear = getFullYear(date, isUTC) + 1;\n    }\n    else {\n        resYear = getFullYear(date, isUTC);\n        resWeek = week;\n    }\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\nfunction weeksInYear(year, dow, doy) {\n    const weekOffset = firstWeekOffset(year, dow, doy);\n    const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nconst defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nconst defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nconst defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nconst defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nconst defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nconst defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\nconst defaultOrdinal = '%d';\nconst defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\nconst defaultMonthsShortRegex = matchWord;\nconst defaultMonthsRegex = matchWord;\nclass Locale {\n    constructor(config) {\n        if (config) {\n            this.set(config);\n        }\n    }\n    set(config) {\n        let confKey;\n        for (confKey in config) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (!config.hasOwnProperty(confKey)) {\n                continue;\n            }\n            const prop = config[confKey];\n            const key = (isFunction(prop) ? confKey : `_${confKey}`);\n            this[key] = prop;\n        }\n        this._config = config;\n    }\n    calendar(key, date, now) {\n        const output = this._calendar[key] || this._calendar[\"sameElse\"];\n        return isFunction(output) ? output.call(null, date, now) : output;\n    }\n    longDateFormat(key) {\n        const format = this._longDateFormat[key];\n        const formatUpper = this._longDateFormat[key.toUpperCase()];\n        if (format || !formatUpper) {\n            return format;\n        }\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n        return this._longDateFormat[key];\n    }\n    get invalidDate() {\n        return this._invalidDate;\n    }\n    set invalidDate(val) {\n        this._invalidDate = val;\n    }\n    ordinal(num, token) {\n        return this._ordinal.replace('%d', num.toString(10));\n    }\n    preparse(str, format) {\n        return str;\n    }\n    getFullYear(date, isUTC = false) {\n        return getFullYear(date, isUTC);\n    }\n    postformat(str) {\n        return str;\n    }\n    relativeTime(num, withoutSuffix, str, isFuture) {\n        const output = this._relativeTime[str];\n        return (isFunction(output)) ?\n            output(num, withoutSuffix, str, isFuture) :\n            output.replace(/%d/i, num.toString(10));\n    }\n    pastFuture(diff, output) {\n        const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n    months(date, format, isUTC = false) {\n        if (!date) {\n            return isArray(this._months)\n                ? this._months\n                : this._months.standalone;\n        }\n        if (isArray(this._months)) {\n            return this._months[getMonth(date, isUTC)];\n        }\n        const key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n            ? 'format'\n            : 'standalone';\n        return this._months[key][getMonth(date, isUTC)];\n    }\n    monthsShort(date, format, isUTC = false) {\n        if (!date) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort.standalone;\n        }\n        if (isArray(this._monthsShort)) {\n            return this._monthsShort[getMonth(date, isUTC)];\n        }\n        const key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\n        return this._monthsShort[key][getMonth(date, isUTC)];\n    }\n    monthsParse(monthName, format, strict) {\n        let date;\n        let regex;\n        if (this._monthsParseExact) {\n            return this.handleMonthStrictParse(monthName, format, strict);\n        }\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        let i;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            date = new Date(Date.UTC(2000, i));\n            if (strict && !this._longMonthsParse[i]) {\n                const _months = this.months(date, '', true).replace('.', '');\n                const _shortMonths = this.monthsShort(date, '', true).replace('.', '');\n                this._longMonthsParse[i] = new RegExp(`^${_months}$`, 'i');\n                this._shortMonthsParse[i] = new RegExp(`^${_shortMonths}$`, 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = `^${this.months(date, '', true)}|^${this.monthsShort(date, '', true)}`;\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // testing the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            }\n            if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            }\n            if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n    monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this.computeMonthsParse();\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            }\n            return this._monthsRegex;\n        }\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n    monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this.computeMonthsParse();\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            }\n            return this._monthsShortRegex;\n        }\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n    /** Week */\n    week(date, isUTC) {\n        return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\n    }\n    firstDayOfWeek() {\n        return this._week.dow;\n    }\n    firstDayOfYear() {\n        return this._week.doy;\n    }\n    weekdays(date, format, isUTC) {\n        if (!date) {\n            return isArray(this._weekdays)\n                ? this._weekdays\n                : this._weekdays.standalone;\n        }\n        if (isArray(this._weekdays)) {\n            return this._weekdays[getDay(date, isUTC)];\n        }\n        const _key = this._weekdays.isFormat.test(format)\n            ? 'format'\n            : 'standalone';\n        return this._weekdays[_key][getDay(date, isUTC)];\n    }\n    weekdaysMin(date, format, isUTC) {\n        return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\n    }\n    weekdaysShort(date, format, isUTC) {\n        return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\n    }\n    // proto.weekdaysParse  =        localeWeekdaysParse;\n    weekdaysParse(weekdayName, format, strict) {\n        let i;\n        let regex;\n        if (this._weekdaysParseExact) {\n            return this.handleWeekStrictParse(weekdayName, format, strict);\n        }\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            // fix: here is the issue\n            const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(date, '', true).replace('.', '\\.?')}$`, 'i');\n                this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(date, '', true).replace('.', '\\.?')}$`, 'i');\n                this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(date, '', true).replace('.', '\\.?')}$`, 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = `^${this.weekdays(date, '', true)}|^${this.weekdaysShort(date, '', true)}|^${this.weekdaysMin(date, '', true)}`;\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            if (!isArray(this._fullWeekdaysParse)\n                || !isArray(this._shortWeekdaysParse)\n                || !isArray(this._minWeekdaysParse)\n                || !isArray(this._weekdaysParse)) {\n                return;\n            }\n            // testing the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n            else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n            else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n            else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n    // proto.weekdaysRegex       =        weekdaysRegex;\n    weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this.computeWeekdaysParse();\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            }\n            else {\n                return this._weekdaysRegex;\n            }\n        }\n        else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = matchWord;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n    // proto.weekdaysShortRegex  =        weekdaysShortRegex;\n    // proto.weekdaysMinRegex    =        weekdaysMinRegex;\n    weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this.computeWeekdaysParse();\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            }\n            else {\n                return this._weekdaysShortRegex;\n            }\n        }\n        else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = matchWord;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n    weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this.computeWeekdaysParse();\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            }\n            else {\n                return this._weekdaysMinRegex;\n            }\n        }\n        else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = matchWord;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n    isPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return input.toLowerCase().charAt(0) === 'p';\n    }\n    meridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        }\n        return isLower ? 'am' : 'AM';\n    }\n    formatLongDate(key) {\n        this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\n        const format = this._longDateFormat[key];\n        const formatUpper = this._longDateFormat[key.toUpperCase()];\n        if (format || !formatUpper) {\n            return format;\n        }\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, (val) => {\n            return val.slice(1);\n        });\n        return this._longDateFormat[key];\n    }\n    handleMonthStrictParse(monthName, format, strict) {\n        const llc = monthName.toLocaleLowerCase();\n        let i;\n        let ii;\n        let mom;\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = new Date(2000, i);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n        if (strict) {\n            if (format === 'MMM') {\n                ii = this._shortMonthsParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            ii = this._longMonthsParse.indexOf(llc);\n            return ii !== -1 ? ii : null;\n        }\n        if (format === 'MMM') {\n            ii = this._shortMonthsParse.indexOf(llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = this._longMonthsParse.indexOf(llc);\n            return ii !== -1 ? ii : null;\n        }\n        ii = this._longMonthsParse.indexOf(llc);\n        if (ii !== -1) {\n            return ii;\n        }\n        ii = this._shortMonthsParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n    }\n    handleWeekStrictParse(weekdayName, format, strict) {\n        let ii;\n        const llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n            let i;\n            for (i = 0; i < 7; ++i) {\n                const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n                this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\n            }\n        }\n        if (!isArray(this._weekdaysParse)\n            || !isArray(this._shortWeekdaysParse)\n            || !isArray(this._minWeekdaysParse)) {\n            return;\n        }\n        if (strict) {\n            if (format === 'dddd') {\n                ii = this._weekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else if (format === 'ddd') {\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else {\n                ii = this._minWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n        else {\n            if (format === 'dddd') {\n                ii = this._weekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._minWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else if (format === 'ddd') {\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._weekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._minWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else {\n                ii = this._minWeekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._weekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n    computeMonthsParse() {\n        const shortPieces = [];\n        const longPieces = [];\n        const mixedPieces = [];\n        let date;\n        let i;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            date = new Date(2000, i);\n            shortPieces.push(this.monthsShort(date, ''));\n            longPieces.push(this.months(date, ''));\n            mixedPieces.push(this.months(date, ''));\n            mixedPieces.push(this.monthsShort(date, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n        this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n        this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n    }\n    computeWeekdaysParse() {\n        const minPieces = [];\n        const shortPieces = [];\n        const longPieces = [];\n        const mixedPieces = [];\n        let i;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            // let mom = createUTC([2000, 1]).day(i);\n            const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n            const minp = this.weekdaysMin(date);\n            const shortp = this.weekdaysShort(date);\n            const longp = this.weekdays(date);\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n        this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n        this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n        this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n        this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\n    }\n}\nfunction cmpLenRev(a, b) {\n    return b.length - a.length;\n}\n\nconst defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n};\n\nconst defaultInvalidDate = 'Invalid date';\nconst defaultLocaleWeek = {\n    dow: 0,\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n};\nconst defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nconst defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n};\nconst baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    const len = Math.min(array1.length, array2.length);\n    const lengthDiff = Math.abs(array1.length - array2.length);\n    let diffs = 0;\n    let i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i])\n            || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\n// FORMATTING\nfunction initWeek() {\n    addFormatToken('w', ['ww', 2, false], 'wo', function (date, opts) {\n        return getWeek(date, opts.locale)\n            .toString(10);\n    });\n    addFormatToken('W', ['WW', 2, false], 'Wo', function (date) {\n        return getISOWeek(date)\n            .toString(10);\n    });\n    // ALIASES\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n    // PRIORITIES\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n    // PARSING\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n        return config;\n    });\n    // export function getSetWeek (input) {\n    //   var week = this.localeData().week(this);\n    //   return input == null ? week : this.add((input - week) * 7, 'd');\n    // }\n}\nfunction setWeek(date, input, locale = getLocale()) {\n    const week = getWeek(date, locale);\n    return add(date, (input - week) * 7, 'day');\n}\nfunction getWeek(date, locale = getLocale(), isUTC) {\n    return locale.week(date, isUTC);\n}\n// export function getSetISOWeek (input) {\n//   var week = weekOfYear(this, 1, 4).week;\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\nfunction setISOWeek(date, input) {\n    const week = getISOWeek(date);\n    return add(date, (input - week) * 7, 'day');\n}\nfunction getISOWeek(date, isUTC) {\n    return weekOfYear(date, 1, 4, isUTC).week;\n}\n\n// FORMATTING\nfunction initWeekYear() {\n    addFormatToken(null, ['gg', 2, false], null, function (date, opts) {\n        // return this.weekYear() % 100;\n        return (getWeekYear(date, opts.locale) % 100).toString();\n    });\n    addFormatToken(null, ['GG', 2, false], null, function (date) {\n        // return this.isoWeekYear() % 100;\n        return (getISOWeekYear(date) % 100).toString();\n    });\n    addWeekYearFormatToken('gggg', _getWeekYearFormatCb);\n    addWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\n    addWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\n    addWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb);\n    // ALIASES\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n    // PRIORITY\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n    // PARSING\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n        return config;\n    });\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = parseTwoDigitYear(input);\n        return config;\n    });\n}\nfunction addWeekYearFormatToken(token, getter) {\n    addFormatToken(null, [token, token.length, false], null, getter);\n}\nfunction _getWeekYearFormatCb(date, opts) {\n    return getWeekYear(date, opts.locale).toString();\n}\nfunction _getISOWeekYearFormatCb(date) {\n    return getISOWeekYear(date).toString();\n}\n// MOMENTS\nfunction getSetWeekYear(date, input, locale = getLocale(), isUTC) {\n    return getSetWeekYearHelper(date, input, \n    // this.week(),\n    getWeek(date, locale, isUTC), \n    // this.weekday(),\n    getLocaleDayOfWeek(date, locale, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC);\n}\nfunction getWeekYear(date, locale = getLocale(), isUTC) {\n    return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\n}\nfunction getSetISOWeekYear(date, input, isUTC) {\n    return getSetWeekYearHelper(date, input, getISOWeek(date, isUTC), getISODayOfWeek(date, isUTC), 1, 4);\n}\nfunction getISOWeekYear(date, isUTC) {\n    return weekOfYear(date, 1, 4, isUTC).year;\n}\nfunction getISOWeeksInYear(date, isUTC) {\n    return weeksInYear(getFullYear(date, isUTC), 1, 4);\n}\nfunction getWeeksInYear(date, isUTC, locale = getLocale()) {\n    return weeksInYear(getFullYear(date, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear());\n}\nfunction getSetWeekYearHelper(date, input, week, weekday, dow, doy, isUTC) {\n    if (!input) {\n        return getWeekYear(date, void 0, isUTC);\n    }\n    const weeksTarget = weeksInYear(input, dow, doy);\n    const _week = week > weeksTarget ? weeksTarget : week;\n    return setWeekAll(date, input, _week, weekday, dow, doy);\n}\nfunction setWeekAll(date, weekYear, week, weekday, dow, doy) {\n    const dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n    const _date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    setFullYear(date, getFullYear(_date, true), true);\n    setMonth(date, getMonth(_date, true), true);\n    setDate(date, getDate(_date, true), true);\n    return date;\n}\n\n// todo: add support for timezones\nfunction initTimezone() {\n    // FORMATTING\n    addFormatToken('z', null, null, function (date, opts) {\n        return opts.isUTC ? 'UTC' : '';\n    });\n    addFormatToken('zz', null, null, function (date, opts) {\n        return opts.isUTC ? 'Coordinated Universal Time' : '';\n    });\n}\n// MOMENTS\nfunction getZoneAbbr(isUTC) {\n    return isUTC ? 'UTC' : '';\n}\nfunction getZoneName(isUTC) {\n    return isUTC ? 'Coordinated Universal Time' : '';\n}\n\nfunction initTimestamp() {\n    // FORMATTING\n    addFormatToken('X', null, null, function (date) {\n        return unix(date)\n            .toString(10);\n    });\n    addFormatToken('x', null, null, function (date) {\n        return date.valueOf()\n            .toString(10);\n    });\n    // PARSING\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n        return config;\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n        return config;\n    });\n}\n\nfunction initSecond() {\n    // FORMATTING\n    addFormatToken('s', ['ss', 2, false], null, function (date, opts) {\n        return getSeconds(date, opts.isUTC)\n            .toString(10);\n    });\n    // ALIASES\n    addUnitAlias('second', 's');\n    // PRIORITY\n    addUnitPriority('second', 15);\n    // PARSING\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n}\n\nfunction initQuarter() {\n    // FORMATTING\n    addFormatToken('Q', null, 'Qo', function (date, opts) {\n        return getQuarter(date, opts.isUTC)\n            .toString(10);\n    });\n    // ALIASES\n    addUnitAlias('quarter', 'Q');\n    // PRIORITY\n    addUnitPriority('quarter', 7);\n    // PARSING\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array, config) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n        return config;\n    });\n}\n// MOMENTS\nfunction getQuarter(date, isUTC = false) {\n    return Math.ceil((getMonth(date, isUTC) + 1) / 3);\n}\nfunction setQuarter(date, quarter, isUTC) {\n    return setMonth(date, (quarter - 1) * 3 + getMonth(date, isUTC) % 3, isUTC);\n}\n// export function getSetQuarter(input) {\n//   return input == null\n//     ? Math.ceil((this.month() + 1) / 3)\n//     : this.month((input - 1) * 3 + this.month() % 3);\n// }\n\n// FORMATTING\nfunction addOffsetFormatToken(token, separator) {\n    addFormatToken(token, null, null, function (date, config) {\n        let offset = getUTCOffset(date, { _isUTC: config.isUTC, _offset: config.offset });\n        let sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\nfunction initOffset() {\n    addOffsetFormatToken('Z', ':');\n    addOffsetFormatToken('ZZ', '');\n    // PARSING\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n        return config;\n    });\n}\n// HELPERS\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\nfunction offsetFromString(matcher, str) {\n    const matches = (str || '').match(matcher);\n    if (matches === null) {\n        return null;\n    }\n    const chunk = matches[matches.length - 1];\n    const parts = chunk.match(chunkOffset) || ['-', '0', '0'];\n    const minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\n    const _min = parts[0] === '+' ? minutes : -minutes;\n    return minutes === 0 ? 0 : _min;\n}\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, date, config = {}) {\n    if (!config._isUTC) {\n        return input;\n    }\n    const res = cloneDate(date);\n    // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\n    const offsetDiff = (config._offset || 0) * 60000;\n    const diff = input.valueOf() - res.valueOf() + offsetDiff;\n    // Use low-level api, because this fn is low-level api.\n    res.setTime(res.valueOf() + diff);\n    // todo: add timezone handling\n    // hooks.updateOffset(res, false);\n    return res;\n}\nfunction getDateOffset(date) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(date.getTimezoneOffset() / 15) * 15;\n}\n// HOOKS\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\n// todo: it's from moment timezones\n// hooks.updateOffset = function () {\n// };\n// MOMENTS\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getUTCOffset(date, config = {}) {\n    const _offset = config._offset || 0;\n    return config._isUTC ? _offset : getDateOffset(date);\n}\nfunction setUTCOffset(date, input, keepLocalTime, keepMinutes, config = {}) {\n    const offset = config._offset || 0;\n    let localAdjust;\n    let _input = input;\n    let _date = date;\n    if (isString(_input)) {\n        _input = offsetFromString(matchShortOffset, _input);\n        if (_input === null) {\n            return _date;\n        }\n    }\n    else if (isNumber(_input) && Math.abs(_input) < 16 && !keepMinutes) {\n        _input = _input * 60;\n    }\n    if (!config._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(_date);\n    }\n    config._offset = _input;\n    config._isUTC = true;\n    if (localAdjust != null) {\n        _date = add(_date, localAdjust, 'minutes');\n    }\n    if (offset !== _input) {\n        if (!keepLocalTime || config._changeInProgress) {\n            _date = add(_date, _input - offset, 'minutes', config._isUTC);\n            // addSubtract(this, createDuration(_input - offset, 'm'), 1, false);\n        }\n        else if (!config._changeInProgress) {\n            config._changeInProgress = true;\n            // todo: add timezone handling\n            // hooks.updateOffset(this, true);\n            config._changeInProgress = null;\n        }\n    }\n    return _date;\n}\n/*\nexport function getSetZone(input, keepLocalTime) {\n  if (input != null) {\n    if (typeof input !== 'string') {\n      input = -input;\n    }\n\n    this.utcOffset(input, keepLocalTime);\n\n    return this;\n  } else {\n    return -this.utcOffset();\n  }\n}\n*/\nfunction setOffsetToUTC(date, keepLocalTime) {\n    return setUTCOffset(date, 0, keepLocalTime);\n}\nfunction isDaylightSavingTime(date) {\n    return (getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 0))\n        || getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 5)));\n}\n/*export function setOffsetToLocal(date: Date, isUTC?: boolean, keepLocalTime?: boolean) {\n  if (this._isUTC) {\n    this.utcOffset(0, keepLocalTime);\n    this._isUTC = false;\n\n    if (keepLocalTime) {\n      this.subtract(getDateOffset(this), 'm');\n    }\n  }\n  return this;\n}*/\nfunction setOffsetToParsedOffset(date, input, config = {}) {\n    if (config._tzm != null) {\n        return setUTCOffset(date, config._tzm, false, true, config);\n    }\n    if (isString(input)) {\n        const tZone = offsetFromString(matchOffset, input);\n        if (tZone != null) {\n            return setUTCOffset(date, tZone, false, false, config);\n        }\n        return setUTCOffset(date, 0, true, false, config);\n    }\n    return date;\n}\nfunction hasAlignedHourOffset(date, input) {\n    const _input = input ? getUTCOffset(input, { _isUTC: false }) : 0;\n    return (getUTCOffset(date) - _input) % 60 === 0;\n}\n// DEPRECATED\n/*export function isDaylightSavingTimeShifted() {\n  if (!isUndefined(this._isDSTShifted)) {\n    return this._isDSTShifted;\n  }\n\n  const c = {};\n\n  copyConfig(c, this);\n  c = prepareConfig(c);\n\n  if (c._a) {\n    const other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n    this._isDSTShifted = this.isValid() &&\n      compareArrays(c._a, other.toArray()) > 0;\n  } else {\n    this._isDSTShifted = false;\n  }\n\n  return this._isDSTShifted;\n}*/\n// in Khronos\n/*export function isLocal() {\n  return this.isValid() ? !this._isUTC : false;\n}\n\nexport function isUtcOffset() {\n  return this.isValid() ? this._isUTC : false;\n}\n\nexport function isUtc() {\n  return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}*/\n\nfunction initMinute() {\n    // FORMATTING\n    addFormatToken('m', ['mm', 2, false], null, function (date, opts) {\n        return getMinutes(date, opts.isUTC)\n            .toString(10);\n    });\n    // ALIASES\n    addUnitAlias('minute', 'm');\n    // PRIORITY\n    addUnitPriority('minute', 14);\n    // PARSING\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n}\n\n// FORMATTING\nfunction initMillisecond() {\n    addFormatToken('S', null, null, function (date, opts) {\n        return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\n    });\n    addFormatToken(null, ['SS', 2, false], null, function (date, opts) {\n        return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\n    });\n    addFormatToken(null, ['SSS', 3, false], null, function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC)).toString(10);\n    });\n    addFormatToken(null, ['SSSS', 4, false], null, function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\n    });\n    addFormatToken(null, ['SSSSS', 5, false], null, function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\n    });\n    addFormatToken(null, ['SSSSSS', 6, false], null, function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\n    });\n    addFormatToken(null, ['SSSSSSS', 7, false], null, function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\n    });\n    addFormatToken(null, ['SSSSSSSS', 8, false], null, function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\n    });\n    addFormatToken(null, ['SSSSSSSSS', 9, false], null, function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\n    });\n    // ALIASES\n    addUnitAlias('millisecond', 'ms');\n    // PRIORITY\n    addUnitPriority('millisecond', 16);\n    // PARSING\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n    let token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n    function parseMs(input, array, config) {\n        array[MILLISECOND] = toInt(parseFloat(`0.${input}`) * 1000);\n        return config;\n    }\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n}\n\nfunction initHour() {\n    // FORMATTING\n    function hFormat(date, isUTC) {\n        return getHours(date, isUTC) % 12 || 12;\n    }\n    function kFormat(date, isUTC) {\n        return getHours(date, isUTC) || 24;\n    }\n    addFormatToken('H', ['HH', 2, false], null, function (date, opts) {\n        return getHours(date, opts.isUTC)\n            .toString(10);\n    });\n    addFormatToken('h', ['hh', 2, false], null, function (date, opts) {\n        return hFormat(date, opts.isUTC)\n            .toString(10);\n    });\n    addFormatToken('k', ['kk', 2, false], null, function (date, opts) {\n        return kFormat(date, opts.isUTC)\n            .toString(10);\n    });\n    addFormatToken('hmm', null, null, function (date, opts) {\n        const _h = hFormat(date, opts.isUTC);\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        return `${_h}${_mm}`;\n    });\n    addFormatToken('hmmss', null, null, function (date, opts) {\n        const _h = hFormat(date, opts.isUTC);\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n        return `${_h}${_mm}${_ss}`;\n    });\n    addFormatToken('Hmm', null, null, function (date, opts) {\n        const _H = getHours(date, opts.isUTC);\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        return `${_H}${_mm}`;\n    });\n    addFormatToken('Hmmss', null, null, function (date, opts) {\n        const _H = getHours(date, opts.isUTC);\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n        return `${_H}${_mm}${_ss}`;\n    });\n    function meridiem(token, lowercase) {\n        addFormatToken(token, null, null, function (date, opts) {\n            return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\n        });\n    }\n    meridiem('a', true);\n    meridiem('A', false);\n    // ALIASES\n    addUnitAlias('hour', 'h');\n    // PRIORITY\n    addUnitPriority('hour', 13);\n    // PARSING\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        const kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n        return config;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n        return config;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n        return config;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        const pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n        return config;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        const pos1 = input.length - 4;\n        const pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n        return config;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        const pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        return config;\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        const pos1 = input.length - 4;\n        const pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        return config;\n    });\n}\n\n// internal storage for locale config files\nconst locales = {};\nconst localeFamilies = {};\nlet globalLocale;\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least,\n// but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    let next;\n    let locale;\n    let i = 0;\n    while (i < names.length) {\n        const split = normalizeLocale(names[i]).split('-');\n        let j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                // the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\nfunction mergeConfigs(parentConfig, childConfig) {\n    const res = Object.assign({}, parentConfig);\n    for (const childProp in childConfig) {\n        if (!hasOwnProp(childConfig, childProp)) {\n            continue;\n        }\n        if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\n            res[childProp] = {};\n            Object.assign(res[childProp], parentConfig[childProp]);\n            Object.assign(res[childProp], childConfig[childProp]);\n        }\n        else if (childConfig[childProp] != null) {\n            res[childProp] = childConfig[childProp];\n        }\n        else {\n            delete res[childProp];\n        }\n    }\n    for (const parentProp in parentConfig) {\n        if (hasOwnProp(parentConfig, parentProp) &&\n            !hasOwnProp(childConfig, parentProp) &&\n            isObject(parentConfig[parentProp])) {\n            // make sure changes to properties don't modify parent config\n            res[parentProp] = Object.assign({}, res[parentProp]);\n        }\n    }\n    return res;\n}\nfunction loadLocale(name) {\n    // no way!\n    /* var oldLocale = null;\n     // TODO: Find a better way to register and load all the locales in Node\n     if (!locales[name] && (typeof module !== 'undefined') &&\n       module && module.exports) {\n       try {\n         oldLocale = globalLocale._abbr;\n         var aliasedRequire = require;\n         aliasedRequire('./locale/' + name);\n         getSetGlobalLocale(oldLocale);\n       } catch (e) {}\n     }*/\n    if (!locales[name]) {\n        console.error(`Khronos locale error: please load locale \"${name}\" before using it`);\n        // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\n    }\n    return locales[name];\n}\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale(key, values) {\n    let data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else if (isString(key)) {\n            data = defineLocale(key, values);\n        }\n        if (data) {\n            globalLocale = data;\n        }\n    }\n    return globalLocale && globalLocale._abbr;\n}\nfunction defineLocale(name, config) {\n    if (config === null) {\n        // useful for testing\n        delete locales[name];\n        globalLocale = getLocale('en');\n        return null;\n    }\n    if (!config) {\n        return;\n    }\n    let parentConfig = baseConfig;\n    config.abbr = name;\n    if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n            parentConfig = locales[config.parentLocale]._config;\n        }\n        else {\n            if (!localeFamilies[config.parentLocale]) {\n                localeFamilies[config.parentLocale] = [];\n            }\n            localeFamilies[config.parentLocale].push({ name, config });\n            return null;\n        }\n    }\n    locales[name] = new Locale(mergeConfigs(parentConfig, config));\n    if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n            defineLocale(x.name, x.config);\n        });\n    }\n    // backwards compat for now: also set the locale\n    // make sure we set the locale AFTER all child locales have been\n    // created, so we won't end up with the child locale set.\n    getSetGlobalLocale(name);\n    return locales[name];\n}\nfunction updateLocale(name, config) {\n    let _config = config;\n    if (_config != null) {\n        let parentConfig = baseConfig;\n        // MERGE\n        const tmpLocale = loadLocale(name);\n        if (tmpLocale != null) {\n            parentConfig = tmpLocale._config;\n        }\n        _config = mergeConfigs(parentConfig, _config);\n        const locale = new Locale(_config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    }\n    else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            }\n            else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n// returns locale data\nfunction getLocale(key) {\n    setDefaultLocale();\n    if (!key) {\n        return globalLocale;\n    }\n    // let locale;\n    const _key = isArray(key) ? key : [key];\n    return chooseLocale(_key);\n}\nfunction listLocales() {\n    return Object.keys(locales);\n}\nfunction setDefaultLocale() {\n    if (locales[`en`]) {\n        return undefined;\n    }\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal(num) {\n            const b = num % 10;\n            const output = toInt((num % 100) / 10) === 1\n                ? 'th'\n                : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n            return num + output;\n        }\n    });\n    initWeek();\n    initWeekYear();\n    initYear();\n    initTimezone();\n    initTimestamp();\n    initSecond();\n    initQuarter();\n    initOffset();\n    initMonth();\n    initMinute();\n    initMillisecond();\n    initHour();\n    initDayOfYear();\n    initDayOfWeek();\n    initDayOfMonth();\n}\n\nconst ordering = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\nconst orderingHash = ordering.reduce((mem, order) => {\n    mem[order] = true;\n    return mem;\n}, {});\nfunction isDurationValid(duration) {\n    const durationKeys = Object.keys(duration);\n    if (durationKeys\n        .some((key) => {\n        return (key in orderingHash)\n            && duration[key] === null\n            || isNaN(duration[key]);\n    })) {\n        return false;\n    }\n    // for (let key in duration) {\n    //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\n    //     return false;\n    //   }\n    // }\n    let unitHasDecimal = false;\n    for (let i = 0; i < ordering.length; ++i) {\n        if (duration[ordering[i]]) {\n            // only allow non-integers for smallest unit\n            if (unitHasDecimal) {\n                return false;\n            }\n            if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n    return true;\n}\n// export function isValid() {\n//   return this._isValid;\n// }\n//\n// export function createInvalid(): Duration {\n//   return createDuration(NaN);\n// }\n\nfunction absCeil(number) {\n    return number < 0 ? Math.floor(number) : Math.ceil(number);\n}\n\nfunction bubble(dur) {\n    let milliseconds = dur._milliseconds;\n    let days = dur._days;\n    let months = dur._months;\n    const data = dur._data;\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n        (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n    const seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    const minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    const hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24);\n    // convert days to months\n    const monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n    // 12 months -> 1 year\n    const years = absFloor(months / 12);\n    months %= 12;\n    data.day = days;\n    data.month = months;\n    data.year = years;\n    return dur;\n}\nfunction daysToMonths(day) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return day * 4800 / 146097;\n}\nfunction monthsToDays(month) {\n    // the reverse of daysToMonths\n    return month * 146097 / 4800;\n}\n\nlet round = Math.round;\nconst thresholds = {\n    ss: 44,\n    s: 45,\n    m: 45,\n    h: 22,\n    d: 26,\n    M: 11 // months to year\n};\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(str, num, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\n}\nfunction relativeTime(posNegDuration, withoutSuffix, locale) {\n    const duration = createDuration(posNegDuration).abs();\n    const seconds = round(duration.as('s'));\n    const minutes = round(duration.as('m'));\n    const hours = round(duration.as('h'));\n    const days = round(duration.as('d'));\n    const months = round(duration.as('M'));\n    const years = round(duration.as('y'));\n    const a = seconds <= thresholds[\"ss\"] && ['s', seconds] ||\n        seconds < thresholds[\"s\"] && ['ss', seconds] ||\n        minutes <= 1 && ['m'] ||\n        minutes < thresholds[\"m\"] && ['mm', minutes] ||\n        hours <= 1 && ['h'] ||\n        hours < thresholds[\"h\"] && ['hh', hours] ||\n        days <= 1 && ['d'] ||\n        days < thresholds[\"d\"] && ['dd', days] ||\n        months <= 1 && ['M'] ||\n        months < thresholds[\"M\"] && ['MM', months] ||\n        years <= 1 && ['y'] || ['yy', years];\n    const b = [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale];\n    // a[2] = withoutSuffix;\n    // a[3] = +posNegDuration > 0;\n    // a[4] = locale;\n    return substituteTimeAgo.apply(null, b);\n}\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof (roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds[\"ss\"] = limit - 1;\n    }\n    return true;\n}\n// export function humanize(withSuffix) {\n//   if (!this.isValid()) {\n//     return this.localeData().invalidDate();\n//   }\n//\n//   const locale = this.localeData();\n//   let output = relativeTime(this, !withSuffix, locale);\n//\n//   if (withSuffix) {\n//     output = locale.pastFuture(+this, output);\n//   }\n//\n//   return locale.postformat(output);\n// }\n\nclass Duration {\n    constructor(duration, config = {}) {\n        this._data = {};\n        this._locale = getLocale();\n        this._locale = config && config._locale || getLocale();\n        // const normalizedInput = normalizeObjectUnits(duration);\n        const normalizedInput = duration;\n        const years = normalizedInput.year || 0;\n        const quarters = normalizedInput.quarter || 0;\n        const months = normalizedInput.month || 0;\n        const weeks = normalizedInput.week || 0;\n        const days = normalizedInput.day || 0;\n        const hours = normalizedInput.hours || 0;\n        const minutes = normalizedInput.minutes || 0;\n        const seconds = normalizedInput.seconds || 0;\n        const milliseconds = normalizedInput.milliseconds || 0;\n        this._isValid = isDurationValid(normalizedInput);\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1000 +\n            minutes * 60 * 1000 + // 1000 * 60\n            hours * 1000 * 60 * 60; // using 1000 * 60 * 60\n        // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n        // this._data = {};\n        // this._locale = getLocale();\n        // this._bubble();\n        return bubble(this);\n    }\n    isValid() {\n        return this._isValid;\n    }\n    humanize(withSuffix) {\n        // throw new Error(`TODO: implement`);\n        if (!this.isValid()) {\n            return this.localeData().invalidDate;\n        }\n        const locale = this.localeData();\n        let output = relativeTime(this, !withSuffix, locale);\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n        return locale.postformat(output);\n    }\n    localeData() {\n        return this._locale;\n    }\n    locale(localeKey) {\n        if (!localeKey) {\n            return this._locale._abbr;\n        }\n        this._locale = getLocale(localeKey) || this._locale;\n        return this;\n    }\n    abs() {\n        const mathAbs = Math.abs;\n        const data = this._data;\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.month = mathAbs(data.month);\n        data.year = mathAbs(data.year);\n        return this;\n    }\n    as(_units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        let days;\n        let months;\n        const milliseconds = this._milliseconds;\n        const units = normalizeUnits(_units);\n        if (units === 'month' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        }\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week':\n                return days / 7 + milliseconds / 6048e5;\n            case 'day':\n                return days + milliseconds / 864e5;\n            case 'hours':\n                return days * 24 + milliseconds / 36e5;\n            case 'minutes':\n                return days * 1440 + milliseconds / 6e4;\n            case 'seconds':\n                return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'milliseconds':\n                return Math.floor(days * 864e5) + milliseconds;\n            default:\n                throw new Error(`Unknown unit ${units}`);\n        }\n    }\n    valueOf() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6);\n    }\n}\nfunction isDuration(obj) {\n    return obj instanceof Duration;\n}\n\nfunction isValid(config) {\n    if (config._isValid == null) {\n        const flags = getParsingFlags(config);\n        const parsedParts = Array.prototype.some.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        let isNowValid = !isNaN(config._d && config._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.weekdayMismatch &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n        if (config._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n        if (Object.isFrozen == null || !Object.isFrozen(config)) {\n            config._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return config._isValid;\n}\nfunction createInvalid(config, flags) {\n    config._d = new Date(NaN);\n    Object.assign(getParsingFlags(config), flags || { userInvalidated: true });\n    return config;\n}\nfunction markInvalid(config) {\n    config._isValid = false;\n    return config;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nconst extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nconst basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nconst tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\nconst isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/, true],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/, true],\n    ['YYYYMMDD', /\\d{8}/, true],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/, true],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/, true]\n];\n// iso time formats and regexes\nconst isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\nconst aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\nconst obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n};\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n// date from iso format\nfunction configFromISO(config) {\n    if (!isString(config._i)) {\n        return config;\n    }\n    const input = config._i;\n    const match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\n    let allowTime;\n    let dateFormat;\n    let timeFormat;\n    let tzFormat;\n    if (!match) {\n        config._isValid = false;\n        return config;\n    }\n    // getParsingFlags(config).iso = true;\n    let i;\n    let l;\n    for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n            dateFormat = isoDates[i][0];\n            allowTime = isoDates[i][2] !== false;\n            break;\n        }\n    }\n    if (dateFormat == null) {\n        config._isValid = false;\n        return config;\n    }\n    if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n            if (isoTimes[i][1].exec(match[3])) {\n                // match[2] should be 'T' or space\n                timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                break;\n            }\n        }\n        if (timeFormat == null) {\n            config._isValid = false;\n            return config;\n        }\n    }\n    if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return config;\n    }\n    if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n            tzFormat = 'Z';\n        }\n        else {\n            config._isValid = false;\n            return config;\n        }\n    }\n    config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n    return configFromStringAndFormat(config);\n}\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    const result = [\n        untruncateYear(yearStr),\n        defaultLocaleMonthsShort.indexOf(monthStr),\n        parseInt(dayStr, 10),\n        parseInt(hourStr, 10),\n        parseInt(minuteStr, 10)\n    ];\n    if (secondStr) {\n        result.push(parseInt(secondStr, 10));\n    }\n    return result;\n}\nfunction untruncateYear(yearStr) {\n    const year = parseInt(yearStr, 10);\n    return year <= 49 ? year + 2000 : year;\n}\nfunction preprocessRFC2822(str) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return str\n        .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n        .replace(/(\\s\\s+)/g, ' ').trim();\n}\nfunction checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\n        const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n        if (weekdayProvided !== weekdayActual) {\n            getParsingFlags(config).weekdayMismatch = true;\n            config._isValid = false;\n            return false;\n        }\n    }\n    return true;\n}\nfunction calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n        return obsOffsets[obsOffset];\n    }\n    else if (militaryOffset) {\n        // the only allowed military tz is Z\n        return 0;\n    }\n    else {\n        const hm = parseInt(numOffset, 10);\n        const m = hm % 100;\n        const h = (hm - m) / 100;\n        return h * 60 + m;\n    }\n}\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    if (!isString(config._i)) {\n        return config;\n    }\n    const match = rfc2822.exec(preprocessRFC2822(config._i));\n    if (!match) {\n        return markInvalid(config);\n    }\n    const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n    if (!checkWeekday(match[1], parsedArray, config)) {\n        return config;\n    }\n    config._a = parsedArray;\n    config._tzm = calculateOffset(match[8], match[9], match[10]);\n    config._d = createUTCDate.apply(null, config._a);\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    getParsingFlags(config).rfc2822 = true;\n    return config;\n}\n// date from iso format or fallback\nfunction configFromString(config) {\n    if (!isString(config._i)) {\n        return config;\n    }\n    const matched = aspNetJsonRegex.exec(config._i);\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return config;\n    }\n    // todo: update logic processing\n    // isISO -> configFromISO\n    // isRFC -> configFromRFC\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    }\n    else {\n        return config;\n    }\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    }\n    else {\n        return config;\n    }\n    // Final attempt, use Input Fallback\n    // hooks.createFromInputFallback(config);\n    return createInvalid(config);\n}\n// hooks.createFromInputFallback = deprecate(\n//     'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n//     'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n//     'discouraged and will be removed in an upcoming major release. Please refer to ' +\n//     'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n//     function (config) {\n//         config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n//     }\n// );\n\n// moment.js\nfunction formatDate(date, format, locale, isUTC, offset = 0) {\n    const _locale = getLocale(locale || 'en');\n    if (!_locale) {\n        throw new Error(`Locale \"${locale}\" is not defined, please add it with \"defineLocale(...)\"`);\n    }\n    const _format = format || (isUTC ? 'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\n    const output = formatMoment(date, _format, _locale, isUTC, offset);\n    if (!output) {\n        return output;\n    }\n    return _locale.postformat(output);\n}\n// format date using native date object\nfunction formatMoment(date, _format, locale, isUTC, offset = 0) {\n    if (!isDateValid(date)) {\n        return locale.invalidDate;\n    }\n    const format = expandFormat(_format, locale);\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](date, locale, isUTC, offset);\n}\nfunction expandFormat(_format, locale) {\n    let format = _format;\n    let i = 5;\n    const localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n    const replaceLongDateFormatTokens = (input) => {\n        return locale.formatLongDate(input) || input;\n    };\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n    return format;\n}\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    const nowValue = new Date();\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray(config) {\n    const input = [];\n    let i;\n    let date;\n    let yearToUse;\n    if (config._d) {\n        return config;\n    }\n    const currentDate = currentDateArray(config);\n    // compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n    // if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n        date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n        config._a[MINUTE] === 0 &&\n        config._a[SECOND] === 0 &&\n        config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n    // eslint-disable-next-line prefer-spread\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    const expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n    // check for mismatching day of week\n    if (config._w && typeof config._w[\"d\"] !== 'undefined' && config._w[\"d\"] !== expectedWeekday) {\n        getParsingFlags(config).weekdayMismatch = true;\n    }\n    return config;\n}\nfunction dayOfYearFromWeekInfo(config) {\n    let weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    const w = config._w;\n    if (w[\"GG\"] != null || w[\"W\"] != null || w[\"E\"] != null) {\n        dow = 1;\n        doy = 4;\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w[\"GG\"], config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\n        week = defaults(w[\"W\"], 1);\n        weekday = defaults(w[\"E\"], 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    }\n    else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n        const curWeek = weekOfYear(new Date(), dow, doy);\n        weekYear = defaults(w[\"gg\"], config._a[YEAR], curWeek.year);\n        // Default to current week.\n        week = defaults(w[\"w\"], curWeek.week);\n        if (w[\"d\"] != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w[\"d\"];\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        }\n        else if (w[\"e\"] != null) {\n            // local weekday -- counting starts from beginning of week\n            weekday = w[\"e\"] + dow;\n            if (w[\"e\"] < 0 || w[\"e\"] > 6) {\n                weekdayOverflow = true;\n            }\n        }\n        else {\n            // default to beginning of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    }\n    else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    }\n    else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n    return config;\n}\n\nfunction checkOverflow(config) {\n    let overflow;\n    const a = config._a;\n    if (a && getParsingFlags(config).overflow === -2) {\n        // todo: fix this sh*t\n        overflow =\n            a[MONTH] < 0 || a[MONTH] > 11 ? MONTH :\n                a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                    a[HOUR] < 0 || a[HOUR] > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                        a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE :\n                            a[SECOND] < 0 || a[SECOND] > 59 ? SECOND :\n                                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                                    -1;\n        if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n        getParsingFlags(config).overflow = overflow;\n    }\n    return config;\n}\n\n// constant that refers to the ISO standard\n// hooks.ISO_8601 = function () {};\nconst ISO_8601 = 'ISO_8601';\n// constant that refers to the RFC 2822 form\n// hooks.RFC_2822 = function () {};\nconst RFC_2822 = 'RFC_2822';\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === ISO_8601) {\n        return configFromISO(config);\n    }\n    if (config._f === RFC_2822) {\n        return configFromRFC2822(config);\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n    if (isArray(config._f) || (!config._i && config._i !== 0)) {\n        return config;\n    }\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    let input = config._i.toString();\n    let totalParsedInputLength = 0;\n    const inputLength = input.length;\n    const tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n    let i;\n    let token;\n    let parsedInput;\n    let skipped;\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\n        if (parsedInput) {\n            skipped = input.substr(0, input.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\n    if (input.length > 0) {\n        getParsingFlags(config).unusedInput.push(input);\n    }\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = void 0;\n    }\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    return checkOverflow(config);\n}\nfunction meridiemFixWrap(locale, _hour, meridiem) {\n    let hour = _hour;\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    }\n    if (locale.isPM == null) {\n        // this is not supposed to happen\n        return hour;\n    }\n    // Fallback\n    const isPm = locale.isPM(meridiem);\n    if (isPm && hour < 12) {\n        hour += 12;\n    }\n    if (!isPm && hour === 12) {\n        hour = 0;\n    }\n    return hour;\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    let tempConfig;\n    let bestMoment;\n    let scoreToBeat;\n    let currentScore;\n    if (!config._f || config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        return createInvalid(config);\n    }\n    let i;\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = Object.assign({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n        // or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n        getParsingFlags(tempConfig).score = currentScore;\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n    return Object.assign(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return config;\n    }\n    const input = config._i;\n    if (isObject(input)) {\n        const i = normalizeObjectUnits(input);\n        config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds]\n            // todo: obsolete -> remove it\n            .map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n    }\n    return configFromArray(config);\n}\n\nfunction createFromConfig(config) {\n    const res = checkOverflow(prepareConfig(config));\n    // todo: remove, in moment.js it's never called cuz of moment constructor\n    res._d = new Date(res._d != null ? res._d.getTime() : NaN);\n    if (!isValid(Object.assign({}, res, { _isValid: null }))) {\n        res._d = new Date(NaN);\n    }\n    // todo: update offset\n    /*if (res._nextDay) {\n      // Adding is smart enough around DST\n      res._d = add(res._d, 1, 'day');\n      res._nextDay = undefined;\n    }*/\n    return res;\n}\nfunction prepareConfig(config) {\n    let input = config._i;\n    const format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid(config, { nullInput: true });\n    }\n    if (isString(input)) {\n        config._i = input = config._locale.preparse(input, format);\n    }\n    if (isDate(input)) {\n        config._d = cloneDate(input);\n        return config;\n    }\n    // todo: add check for recursion\n    if (isArray(format)) {\n        configFromStringAndArray(config);\n    }\n    else if (format) {\n        configFromStringAndFormat(config);\n    }\n    else {\n        configFromInput(config);\n    }\n    if (!isValid(config)) {\n        config._d = null;\n    }\n    return config;\n}\nfunction configFromInput(config) {\n    const input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date();\n    }\n    else if (isDate(input)) {\n        config._d = cloneDate(input);\n    }\n    else if (isString(input)) {\n        configFromString(config);\n    }\n    else if (isArray(input) && input.length) {\n        const _arr = input.slice(0);\n        config._a = _arr.map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n        configFromArray(config);\n    }\n    else if (isObject(input)) {\n        configFromObject(config);\n    }\n    else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    }\n    else {\n        //   hooks.createFromInputFallback(config);\n        return createInvalid(config);\n    }\n    return config;\n}\nfunction createLocalOrUTC(input, format, localeKey, strict, isUTC) {\n    const config = {};\n    let _input = input;\n    // params switch -> skip; testing it well\n    // if (localeKey === true || localeKey === false) {\n    //     strict = localeKey;\n    //     localeKey = undefined;\n    // }\n    // todo: fail fast and return not valid date\n    if ((isObject(_input) && isObjectEmpty(_input)) || (isArray(_input) && _input.length === 0)) {\n        _input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    // config._isAMomentObject = true;\n    config._useUTC = config._isUTC = isUTC;\n    config._l = localeKey;\n    config._i = _input;\n    config._f = format;\n    config._strict = strict;\n    return createFromConfig(config);\n}\n\nfunction parseDate(input, format, localeKey, strict, isUTC) {\n    if (isDate(input)) {\n        return input;\n    }\n    const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\n    return config._d;\n}\nfunction utcAsLocal(date) {\n    if (!(date instanceof Date)) {\n        return null;\n    }\n    return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n}\n\nfunction absRound(num) {\n    return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\n}\n\nfunction isAfter(date1, date2, units = 'milliseconds') {\n    if (!date1 || !date2) {\n        return false;\n    }\n    if (units === 'milliseconds') {\n        return date1.valueOf() > date2.valueOf();\n    }\n    return date2.valueOf() < startOf(date1, units).valueOf();\n}\nfunction isBefore(date1, date2, units = 'milliseconds') {\n    if (!date1 || !date2) {\n        return false;\n    }\n    if (units === 'milliseconds') {\n        return date1.valueOf() < date2.valueOf();\n    }\n    return endOf(date1, units).valueOf() < date2.valueOf();\n}\nfunction isDisabledDay(date, daysDisabled) {\n    if (typeof daysDisabled === 'undefined' || !daysDisabled || !daysDisabled.length) {\n        return false;\n    }\n    return daysDisabled.some((day) => day === date.getDay());\n}\nfunction isBetween(date, from, to, units, inclusivity = '()') {\n    const leftBound = inclusivity[0] === '('\n        ? isAfter(date, from, units)\n        : !isBefore(date, from, units);\n    const rightBound = inclusivity[1] === ')'\n        ? isBefore(date, to, units)\n        : !isAfter(date, to, units);\n    return leftBound && rightBound;\n}\nfunction isSame(date1, date2, units = 'milliseconds') {\n    if (!date1 || !date2) {\n        return false;\n    }\n    if (units === 'milliseconds') {\n        return date1.valueOf() === date2.valueOf();\n    }\n    const inputMs = date2.valueOf();\n    return (startOf(date1, units).valueOf() <= inputMs &&\n        inputMs <= endOf(date1, units).valueOf());\n}\nfunction isSameDay(date1, date2) {\n    return (date1.getDay() == date2.getDay());\n}\nfunction isSameOrAfter(date1, date2, units) {\n    return isSame(date1, date2, units) || isAfter(date1, date2, units);\n}\nfunction isSameOrBefore(date1, date2, units) {\n    return isSame(date1, date2, units) || isBefore(date1, date2, units);\n}\n\n// ASP.NET json date format regex\nconst aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nconst isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\nfunction createDuration(input, key, config = {}) {\n    const duration = convertDuration(input, key);\n    // matching against regexp is expensive, do it on demand\n    return new Duration(duration, config);\n}\nfunction convertDuration(input, key) {\n    // checks for null or undefined\n    if (input == null) {\n        return {};\n    }\n    if (isDuration(input)) {\n        return {\n            milliseconds: input._milliseconds,\n            day: input._days,\n            month: input._months\n        };\n    }\n    if (isNumber(input)) {\n        // duration = {};\n        return key ? { [key]: input } : { milliseconds: input };\n    }\n    if (isString(input)) {\n        let match = aspNetRegex.exec(input);\n        if (match) {\n            const sign = (match[1] === '-') ? -1 : 1;\n            return {\n                year: 0,\n                day: toInt(match[DATE]) * sign,\n                hours: toInt(match[HOUR]) * sign,\n                minutes: toInt(match[MINUTE]) * sign,\n                seconds: toInt(match[SECOND]) * sign,\n                // the millisecond decimal point is included in the match\n                milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\n            };\n        }\n        match = isoRegex.exec(input);\n        if (match) {\n            const sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            return {\n                year: parseIso(match[2], sign),\n                month: parseIso(match[3], sign),\n                week: parseIso(match[4], sign),\n                day: parseIso(match[5], sign),\n                hours: parseIso(match[6], sign),\n                minutes: parseIso(match[7], sign),\n                seconds: parseIso(match[8], sign)\n            };\n        }\n    }\n    if (isObject(input) && ('from' in input || 'to' in input)) {\n        const diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\n        return {\n            milliseconds: diffRes.milliseconds,\n            month: diffRes.months\n        };\n    }\n    return input;\n}\n// createDuration.fn = Duration.prototype;\n// createDuration.invalid = invalid;\nfunction parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    const res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\nfunction positiveMomentsDifference(base, other) {\n    const res = { milliseconds: 0, months: 0 };\n    res.months = getMonth(other) - getMonth(base) +\n        (getFullYear(other) - getFullYear(base)) * 12;\n    const _basePlus = add(cloneDate(base), res.months, 'month');\n    if (isAfter(_basePlus, other)) {\n        --res.months;\n    }\n    res.milliseconds = +other - +(add(cloneDate(base), res.months, 'month'));\n    return res;\n}\nfunction momentsDifference(base, other) {\n    if (!(isDateValid(base) && isDateValid(other))) {\n        return { milliseconds: 0, months: 0 };\n    }\n    let res;\n    const _other = cloneWithOffset(other, base, { _offset: base.getTimezoneOffset() });\n    if (isBefore(base, _other)) {\n        res = positiveMomentsDifference(base, _other);\n    }\n    else {\n        res = positiveMomentsDifference(_other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n    return res;\n}\n\nfunction add(date, val, period, isUTC) {\n    const dur = createDuration(val, period);\n    return addSubtract(date, dur, 1, isUTC);\n}\nfunction subtract(date, val, period, isUTC) {\n    const dur = createDuration(val, period);\n    return addSubtract(date, dur, -1, isUTC);\n}\nfunction addSubtract(date, duration, isAdding, isUTC) {\n    const milliseconds = duration._milliseconds;\n    const days = absRound(duration._days);\n    const months = absRound(duration._months);\n    // todo: add timezones support\n    // const _updateOffset = updateOffset == null ? true : updateOffset;\n    if (months) {\n        setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\n    }\n    if (days) {\n        setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\n    }\n    if (milliseconds) {\n        setTime(date, getTime(date) + milliseconds * isAdding);\n    }\n    return cloneDate(date);\n    // todo: add timezones support\n    // if (_updateOffset) {\n    //   hooks.updateOffset(date, days || months);\n    // }\n}\n\nfunction initDayOfWeek() {\n    // FORMATTING\n    addFormatToken('d', null, 'do', function (date, opts) {\n        return getDay(date, opts.isUTC)\n            .toString(10);\n    });\n    addFormatToken('dd', null, null, function (date, opts) {\n        return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\n    });\n    addFormatToken('ddd', null, null, function (date, opts) {\n        return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\n    });\n    addFormatToken('dddd', null, null, function (date, opts) {\n        return opts.locale.weekdays(date, opts.format, opts.isUTC);\n    });\n    addFormatToken('e', null, null, function (date, opts) {\n        return getLocaleDayOfWeek(date, opts.locale, opts.isUTC)\n            .toString(10);\n        // return getDay(date, opts.isUTC).toString(10);\n    });\n    addFormatToken('E', null, null, function (date, opts) {\n        return getISODayOfWeek(date, opts.isUTC)\n            .toString(10);\n    });\n    // ALIASES\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n    // PARSING\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        const weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week[\"d\"] = weekday;\n        }\n        else {\n            getParsingFlags(config).invalidWeekday = !!input;\n        }\n        return config;\n    });\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n        return config;\n    });\n}\n// HELPERS\nfunction parseWeekday(input, locale) {\n    if (!isString(input)) {\n        return input;\n    }\n    const _num = parseInt(input, 10);\n    if (!isNaN(_num)) {\n        return _num;\n    }\n    const _weekDay = locale.weekdaysParse(input);\n    if (isNumber(_weekDay)) {\n        return _weekDay;\n    }\n    return null;\n}\nfunction parseIsoWeekday(input, locale = getLocale()) {\n    if (isString(input)) {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNumber(input) && isNaN(input) ? null : input;\n}\n// MOMENTS\nfunction getSetDayOfWeek(date, input, opts) {\n    if (!input) {\n        return getDayOfWeek(date, opts.isUTC);\n    }\n    return setDayOfWeek(date, input, opts.locale, opts.isUTC);\n}\nfunction setDayOfWeek(date, input, locale = getLocale(), isUTC) {\n    const day = getDay(date, isUTC);\n    const _input = parseWeekday(input, locale);\n    return add(date, _input - day, 'day');\n}\nfunction getDayOfWeek(date, isUTC) {\n    return getDay(date, isUTC);\n}\n/********************************************/\n// todo: utc\n// getSetLocaleDayOfWeek\nfunction getLocaleDayOfWeek(date, locale = getLocale(), isUTC) {\n    return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\n}\nfunction setLocaleDayOfWeek(date, input, opts = {}) {\n    const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\n    return add(date, input - weekday, 'day');\n}\n// getSetISODayOfWeek\nfunction getISODayOfWeek(date, isUTC) {\n    return getDay(date, isUTC) || 7;\n}\nfunction setISODayOfWeek(date, input, opts = {}) {\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n    const weekday = parseIsoWeekday(input, opts.locale);\n    return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\n}\n\n//! moment.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\nconst symbolMap$1 = {\n    1: '١',\n    2: '٢',\n    3: '٣',\n    4: '٤',\n    5: '٥',\n    6: '٦',\n    7: '٧',\n    8: '٨',\n    9: '٩',\n    0: '٠'\n};\nconst numberMap$1 = {\n    '١': '1',\n    '٢': '2',\n    '٣': '3',\n    '٤': '4',\n    '٥': '5',\n    '٦': '6',\n    '٧': '7',\n    '٨': '8',\n    '٩': '9',\n    '٠': '0'\n};\nconst pluralForm = function (num) {\n    return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\n};\nconst plurals = {\n    s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n    m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n    h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n    d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n    M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n    y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n};\nconst pluralize = function (u) {\n    return function (num, withoutSuffix) {\n        const f = pluralForm(num);\n        let str = plurals[u][pluralForm(num)];\n        if (f === 2) {\n            str = str[withoutSuffix ? 0 : 1];\n        }\n        return str.replace(/%d/i, num.toString());\n    };\n};\nconst months$2 = [\n    'يناير',\n    'فبراير',\n    'مارس',\n    'أبريل',\n    'مايو',\n    'يونيو',\n    'يوليو',\n    'أغسطس',\n    'سبتمبر',\n    'أكتوبر',\n    'نوفمبر',\n    'ديسمبر'\n];\nconst arLocale = {\n    abbr: 'ar',\n    months: months$2,\n    monthsShort: months$2,\n    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'D/\\u200FM/\\u200FYYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ص|م/,\n    isPM(input) {\n        return 'م' === input;\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ص';\n        }\n        else {\n            return 'م';\n        }\n    },\n    calendar: {\n        sameDay: '[اليوم عند الساعة] LT',\n        nextDay: '[غدًا عند الساعة] LT',\n        nextWeek: 'dddd [عند الساعة] LT',\n        lastDay: '[أمس عند الساعة] LT',\n        lastWeek: 'dddd [عند الساعة] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'بعد %s',\n        past: 'منذ %s',\n        s: pluralize('s'),\n        ss: pluralize('s'),\n        m: pluralize('m'),\n        mm: pluralize('m'),\n        h: pluralize('h'),\n        hh: pluralize('h'),\n        d: pluralize('d'),\n        dd: pluralize('d'),\n        M: pluralize('M'),\n        MM: pluralize('M'),\n        y: pluralize('y'),\n        yy: pluralize('y')\n    },\n    preparse(str) {\n        return str.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n            return numberMap$1[match];\n        }).replace(/،/g, ',');\n    },\n    postformat(str) {\n        return str.replace(/\\d/g, function (match) {\n            return symbolMap$1[match];\n        }).replace(/,/g, '،');\n    },\n    week: {\n        dow: 6,\n        doy: 12 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Bulgarian [bg]\n//! author : Iskren Ivov Chernev : https://github.com/ichernev\n//! author : Kunal Marwaha : https://github.com/marwahaha\n//! author : Matt Grande : https://github.com/mattgrande\n//! author : Isaac Cambron : https://github.com/icambron\n//! author : Venelin Manchev : https://github.com/vmanchev\nconst bgLocale = {\n    abbr: 'bg',\n    months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n    monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n    weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n    weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'D.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY H:mm',\n        LLLL: 'dddd, D MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[Днес в] LT',\n        nextDay: '[Утре в] LT',\n        nextWeek: 'dddd [в] LT',\n        lastDay: '[Вчера в] LT',\n        lastWeek: function (d) {\n            switch (d) {\n                case 0:\n                case 3:\n                case 6:\n                    return '[В изминалата] dddd [в] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[В изминалия] dddd [в] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'след %s',\n        past: 'преди %s',\n        s: 'няколко секунди',\n        ss: '%d секунди',\n        m: 'минута',\n        mm: '%d минути',\n        h: 'час',\n        hh: '%d часа',\n        d: 'ден',\n        dd: '%d дни',\n        M: 'месец',\n        MM: '%d месеца',\n        y: 'година',\n        yy: '%d години'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n    ordinal: function (_num) {\n        const number = Number(_num);\n        let lastDigit = number % 10, last2Digits = number % 100;\n        if (number === 0) {\n            return number + '-ев';\n        }\n        else if (last2Digits === 0) {\n            return number + '-ен';\n        }\n        else if (last2Digits > 10 && last2Digits < 20) {\n            return number + '-ти';\n        }\n        else if (lastDigit === 1) {\n            return number + '-ви';\n        }\n        else if (lastDigit === 2) {\n            return number + '-ри';\n        }\n        else if (lastDigit === 7 || lastDigit === 8) {\n            return number + '-ми';\n        }\n        else {\n            return number + '-ти';\n        }\n    },\n    week: {\n        dow: 1,\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Catalan [ca]\n//! author : Xavier Arbat : https://github.com/XavisaurusRex\nlet monthsShortDot$5 = 'gen._feb._mar._abr._mai._jun._jul._ago._set._oct._nov._des.'.split('_'), monthsShort$7 = 'ene_feb_mar_abr_mai_jun_jul_ago_set_oct_nov_des'.split('_');\nlet monthsParse$6 = [/^gen/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^oct/i, /^nov/i, /^des/i];\nlet monthsRegex$5 = /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i;\nconst caLocale = {\n    abbr: 'ca',\n    months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$5;\n        }\n        if (/-MMM-/.test(format)) {\n            return monthsShort$7[getMonth(date, isUTC)];\n        }\n        return monthsShortDot$5[getMonth(date, isUTC)];\n    },\n    monthsRegex: monthsRegex$5,\n    monthsShortRegex: monthsRegex$5,\n    monthsStrictRegex: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\n    monthsShortStrictRegex: /^(gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i,\n    monthsParse: monthsParse$6,\n    longMonthsParse: monthsParse$6,\n    shortMonthsParse: monthsParse$6,\n    weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n    weekdaysShort: 'diu._dil._dim._dix._dij._div._dis.'.split('_'),\n    weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY H:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar: {\n        sameDay(date) {\n            return '[avui a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        nextDay(date) {\n            return '[dema a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        nextWeek(date) {\n            return 'dddd [a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        lastDay(date) {\n            return '[ahir a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        lastWeek(date) {\n            return '[el] dddd [' + ('passada la ' + (getHours(date) !== 1) ? 'passades les' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'fa %s',\n        s: 'uns segons',\n        ss: '%d segons',\n        m: 'un minut',\n        mm: '%d minuts',\n        h: 'una hora',\n        hh: '%d hores',\n        d: 'un dia',\n        dd: '%d dies',\n        M: 'un mes',\n        MM: '%d mesos',\n        y: 'un any',\n        yy: '%d anys'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|on|er|rt|é)/,\n    ordinal(_num) {\n        const num = Number(_num);\n        const output = (num > 4) ? 'é' :\n            (num === 1 || num === 3) ? 'r' :\n                (num === 2) ? 'n' :\n                    (num === 4) ? 't' : 'é';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\nconst months$1 = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');\nconst monthsShort$6 = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\nfunction plural$4(num) {\n    return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\nfunction translate$6(num, withoutSuffix, key, isFuture) {\n    const result = num + ' ';\n    switch (key) {\n        case 's': // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n        case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$4(num) ? 'sekundy' : 'sekund');\n            }\n            else {\n                return result + 'sekundami';\n            }\n        // break;\n        case 'm': // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$4(num) ? 'minuty' : 'minut');\n            }\n            else {\n                return result + 'minutami';\n            }\n        // break;\n        case 'h': // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$4(num) ? 'hodiny' : 'hodin');\n            }\n            else {\n                return result + 'hodinami';\n            }\n        // break;\n        case 'd': // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$4(num) ? 'dny' : 'dní');\n            }\n            else {\n                return result + 'dny';\n            }\n        // break;\n        case 'M': // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$4(num) ? 'měsíce' : 'měsíců');\n            }\n            else {\n                return result + 'měsíci';\n            }\n        // break;\n        case 'y': // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$4(num) ? 'roky' : 'let');\n            }\n            else {\n                return result + 'lety';\n            }\n        // break;\n    }\n}\nconst csLocale = {\n    abbr: 'cs',\n    months: months$1,\n    monthsShort: monthsShort$6,\n    monthsParse: (function (months, monthsShort) {\n        let i, _monthsParse = [];\n        for (i = 0; i < 12; i++) {\n            // use custom parser to solve problem with July (červenec)\n            _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n        }\n        return _monthsParse;\n    }(months$1, monthsShort$6)),\n    shortMonthsParse: (function (monthsShort) {\n        let i, _shortMonthsParse = [];\n        for (i = 0; i < 12; i++) {\n            _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n        }\n        return _shortMonthsParse;\n    }(monthsShort$6)),\n    longMonthsParse: (function (months) {\n        let i, _longMonthsParse = [];\n        for (i = 0; i < 12; i++) {\n            _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n        }\n        return _longMonthsParse;\n    }(months$1)),\n    weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n    weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n    weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd D. MMMM YYYY H:mm',\n        l: 'D. M. YYYY'\n    },\n    calendar: {\n        sameDay: '[dnes v] LT',\n        nextDay: '[zítra v] LT',\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[v neděli v] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [v] LT';\n                case 3:\n                    return '[ve středu v] LT';\n                case 4:\n                    return '[ve čtvrtek v] LT';\n                case 5:\n                    return '[v pátek v] LT';\n                case 6:\n                    return '[v sobotu v] LT';\n            }\n        },\n        lastDay: '[včera v] LT',\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[minulou neděli v] LT';\n                case 1:\n                case 2:\n                    return '[minulé] dddd [v] LT';\n                case 3:\n                    return '[minulou středu v] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [v] LT';\n                case 6:\n                    return '[minulou sobotu v] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'za %s',\n        past: 'před %s',\n        s: translate$6,\n        ss: translate$6,\n        m: translate$6,\n        mm: translate$6,\n        h: translate$6,\n        hh: translate$6,\n        d: translate$6,\n        dd: translate$6,\n        M: translate$6,\n        MM: translate$6,\n        y: translate$6,\n        yy: translate$6\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Danish (Denmark) [da]\n//! author : Per Hansen : https://github.com/perhp\nconst daLocale = {\n    abbr: 'da',\n    months: 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\n    weekdays: 'Søndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_Lørdag'.split('_'),\n    weekdaysShort: 'Søn_Man_Tir_Ons_Tor_Fre_Lør'.split('_'),\n    weekdaysMin: 'Sø_Ma_Ti_On_To_Fr_Lø'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY HH:mm',\n        LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n    },\n    calendar: {\n        sameDay: '[i dag kl.] LT',\n        nextDay: '[i morgen kl.] LT',\n        nextWeek: 'på dddd [kl.] LT',\n        lastDay: '[i går kl.] LT',\n        lastWeek: '[i] dddd[s kl.] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'om %s',\n        past: '%s siden',\n        s: 'få sekunder',\n        m: 'et minut',\n        mm: '%d minutter',\n        h: 'en time',\n        hh: '%d timer',\n        d: 'en dag',\n        dd: '%d dage',\n        M: 'en måned',\n        MM: '%d måneder',\n        y: 'et år',\n        yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\nfunction processRelativeTime$2(num, withoutSuffix, key, isFuture) {\n    const format = {\n        'm': ['eine Minute', 'einer Minute'],\n        'h': ['eine Stunde', 'einer Stunde'],\n        'd': ['ein Tag', 'einem Tag'],\n        'dd': [num + ' Tage', num + ' Tagen'],\n        'M': ['ein Monat', 'einem Monat'],\n        'MM': [num + ' Monate', num + ' Monaten'],\n        'y': ['ein Jahr', 'einem Jahr'],\n        'yy': [num + ' Jahre', num + ' Jahren']\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n}\nconst deLocale = {\n    abbr: 'de',\n    months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n    monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n    weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n    weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY HH:mm',\n        LLLL: 'dddd, D. MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[heute um] LT [Uhr]',\n        sameElse: 'L',\n        nextDay: '[morgen um] LT [Uhr]',\n        nextWeek: 'dddd [um] LT [Uhr]',\n        lastDay: '[gestern um] LT [Uhr]',\n        lastWeek: '[letzten] dddd [um] LT [Uhr]'\n    },\n    relativeTime: {\n        future: 'in %s',\n        past: 'vor %s',\n        s: 'ein paar Sekunden',\n        ss: '%d Sekunden',\n        m: processRelativeTime$2,\n        mm: '%d Minuten',\n        h: processRelativeTime$2,\n        hh: '%d Stunden',\n        d: processRelativeTime$2,\n        dd: processRelativeTime$2,\n        M: processRelativeTime$2,\n        MM: processRelativeTime$2,\n        y: processRelativeTime$2,\n        yy: processRelativeTime$2\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\nconst enGbLocale = {\n    abbr: 'en-gb',\n    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal(_num) {\n        const num = Number(_num);\n        const b = num % 10, output = (~~(num % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                    (b === 3) ? 'rd' : 'th';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\nlet monthsShortDot$4 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'), monthsShort$5 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nlet monthsParse$5 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex$4 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\nconst esDoLocale = {\n    abbr: 'es-do',\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$4;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShort$5[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortDot$4[getMonth(date, isUTC)];\n        }\n    },\n    monthsRegex: monthsRegex$4,\n    monthsShortRegex: monthsRegex$4,\n    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n    monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n    monthsParse: monthsParse$5,\n    longMonthsParse: monthsParse$5,\n    shortMonthsParse: monthsParse$5,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'h:mm A',\n        LTS: 'h:mm:ss A',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY h:mm A',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n    },\n    calendar: {\n        sameDay(date) {\n            return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextDay(date) {\n            return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextWeek(date) {\n            return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastDay(date) {\n            return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastWeek(date) {\n            return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'hace %s',\n        s: 'unos segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'una hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un año',\n        yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\nlet monthsShortDot$3 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'), monthsShort$4 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nlet monthsParse$4 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex$3 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\nconst esLocale = {\n    abbr: 'es',\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$3;\n        }\n        if (/-MMM-/.test(format)) {\n            return monthsShort$4[getMonth(date, isUTC)];\n        }\n        return monthsShortDot$3[getMonth(date, isUTC)];\n    },\n    monthsRegex: monthsRegex$3,\n    monthsShortRegex: monthsRegex$3,\n    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n    monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n    monthsParse: monthsParse$4,\n    longMonthsParse: monthsParse$4,\n    shortMonthsParse: monthsParse$4,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY H:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar: {\n        sameDay(date) {\n            return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextDay(date) {\n            return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextWeek(date) {\n            return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastDay(date) {\n            return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastWeek(date) {\n            return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'hace %s',\n        s: 'unos segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'una hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un año',\n        yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish (Puerto Rico) [es-pr]\nlet monthsShortDot$2 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nlet monthsShort$3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nconst esPrLocale = {\n    abbr: 'es-pr',\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$2;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShort$3[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortDot$2[getMonth(date, isUTC)];\n        }\n    },\n    monthsParseExact: true,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'h:mm A',\n        LTS: 'h:mm:ss A',\n        L: 'MM/DD/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY h:mm A',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n    },\n    calendar: {\n        sameDay(date) {\n            return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextDay(date) {\n            return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextWeek(date) {\n            return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastDay(date) {\n            return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastWeek(date) {\n            return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'hace %s',\n        s: 'unos segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'una hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un año',\n        yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 0,\n        doy: 6 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish (United States) [es-us]\n//! author : bustta : https://github.com/bustta\nlet monthsShortDot$1 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nlet monthsShort$2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nconst esUsLocale = {\n    abbr: 'es-us',\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$1;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShort$2[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortDot$1[getMonth(date, isUTC)];\n        }\n    },\n    monthsParseExact: true,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'h:mm A',\n        LTS: 'h:mm:ss A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM [de] D [de] YYYY',\n        LLL: 'MMMM [de] D [de] YYYY h:mm A',\n        LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\n    },\n    calendar: {\n        sameDay(date) {\n            return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextDay(date) {\n            return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextWeek(date) {\n            return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastDay(date) {\n            return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastWeek(date) {\n            return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'hace %s',\n        s: 'unos segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'una hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un año',\n        yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 0,\n        doy: 6 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Estonian [et]\n//! author : Chris Gedrim : https://github.com/a90machado\nconst processRelativeTime$1 = function (num, withoutSuffix, key, isFuture) {\n    const format = {\n        s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n        ss: [num + 'sekundi', num + 'sekundit'],\n        m: ['ühe minuti', 'üks minut'],\n        mm: [num + ' minuti', num + ' minutit'],\n        h: ['ühe tunni', 'tund aega', 'üks tund'],\n        hh: [num + ' tunni', num + ' tundi'],\n        d: ['ühe päeva', 'üks päev'],\n        M: ['kuu aja', 'kuu aega', 'üks kuu'],\n        MM: [num + ' kuu', num + ' kuud'],\n        y: ['ühe aasta', 'aasta', 'üks aasta'],\n        yy: [num + ' aasta', num + ' aastat']\n    };\n    if (withoutSuffix) {\n        return format[key][2] ? format[key][2] : format[key][1];\n    }\n    return isFuture ? format[key][0] : format[key][1];\n};\nconst etLocale = {\n    abbr: 'et',\n    months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n    monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n    weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n    weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n    weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[Täna,] LT',\n        nextDay: '[Homme,] LT',\n        nextWeek: '[Järgmine] dddd LT',\n        lastDay: '[Eile,] LT',\n        lastWeek: '[Eelmine] dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s pärast',\n        past: '%s tagasi',\n        s: processRelativeTime$1,\n        ss: processRelativeTime$1,\n        m: processRelativeTime$1,\n        mm: processRelativeTime$1,\n        h: processRelativeTime$1,\n        hh: processRelativeTime$1,\n        d: processRelativeTime$1,\n        dd: '%d päeva',\n        M: processRelativeTime$1,\n        MM: processRelativeTime$1,\n        y: processRelativeTime$1,\n        yy: processRelativeTime$1\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n// https://github.com/moment/moment/blob/develop/locale/fi.js\nvar numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '), numbersFuture = [\n    'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n    numbersPast[7], numbersPast[8], numbersPast[9]\n];\nfunction translate$5(num, withoutSuffix, key, isFuture) {\n    var result = '';\n    switch (key) {\n        case 's':\n            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n        case 'ss':\n            return isFuture ? 'sekunnin' : 'sekuntia';\n        case 'm':\n            return isFuture ? 'minuutin' : 'minuutti';\n        case 'mm':\n            result = isFuture ? 'minuutin' : 'minuuttia';\n            break;\n        case 'h':\n            return isFuture ? 'tunnin' : 'tunti';\n        case 'hh':\n            result = isFuture ? 'tunnin' : 'tuntia';\n            break;\n        case 'd':\n            return isFuture ? 'päivän' : 'päivä';\n        case 'dd':\n            result = isFuture ? 'päivän' : 'päivää';\n            break;\n        case 'M':\n            return isFuture ? 'kuukauden' : 'kuukausi';\n        case 'MM':\n            result = isFuture ? 'kuukauden' : 'kuukautta';\n            break;\n        case 'y':\n            return isFuture ? 'vuoden' : 'vuosi';\n        case 'yy':\n            result = isFuture ? 'vuoden' : 'vuotta';\n            break;\n    }\n    result = verbalNumber(num, isFuture) + ' ' + result;\n    return result;\n}\nfunction verbalNumber(num, isFuture) {\n    return num < 10 ? (isFuture ? numbersFuture[num] : numbersPast[num]) : num;\n}\nconst fiLocale = {\n    abbr: 'fi',\n    months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n    monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n    weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n    weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n    weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n    longDateFormat: {\n        LT: 'HH.mm',\n        LTS: 'HH.mm.ss',\n        L: 'DD.MM.YYYY',\n        LL: 'Do MMMM[ta] YYYY',\n        LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n        LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n        l: 'D.M.YYYY',\n        ll: 'Do MMM YYYY',\n        lll: 'Do MMM YYYY, [klo] HH.mm',\n        llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\n    },\n    calendar: {\n        sameDay: '[tänään] [klo] LT',\n        nextDay: '[huomenna] [klo] LT',\n        nextWeek: 'dddd [klo] LT',\n        lastDay: '[eilen] [klo] LT',\n        lastWeek: '[viime] dddd[na] [klo] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s päästä',\n        past: '%s sitten',\n        s: translate$5,\n        ss: translate$5,\n        m: translate$5,\n        mm: translate$5,\n        h: translate$5,\n        hh: translate$5,\n        d: translate$5,\n        dd: translate$5,\n        M: translate$5,\n        MM: translate$5,\n        y: translate$5,\n        yy: translate$5\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\nconst frLocale = {\n    abbr: 'fr',\n    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n    monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n    weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Aujourd’hui à] LT',\n        nextDay: '[Demain à] LT',\n        nextWeek: 'dddd [à] LT',\n        lastDay: '[Hier à] LT',\n        lastWeek: 'dddd [dernier à] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'dans %s',\n        past: 'il y a %s',\n        s: 'quelques secondes',\n        ss: '%d secondes',\n        m: 'une minute',\n        mm: '%d minutes',\n        h: 'une heure',\n        hh: '%d heures',\n        d: 'un jour',\n        dd: '%d jours',\n        M: 'un mois',\n        MM: '%d mois',\n        y: 'un an',\n        yy: '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n    ordinal(_num, period) {\n        const num = Number(_num);\n        switch (period) {\n            // TODO: Return 'e' when day of month > 1. Move this case inside\n            // block for masculine words below.\n            // See https://github.com/moment/moment/issues/3375\n            case 'D':\n                return num + (num === 1 ? 'er' : '');\n            // Words with masculine grammatical gender: mois, trimestre, jour\n            default:\n            case 'M':\n            case 'Q':\n            case 'DDD':\n            case 'd':\n                return num + (num === 1 ? 'er' : 'e');\n            // Words with feminine grammatical gender: semaine\n            case 'w':\n            case 'W':\n                return num + (num === 1 ? 're' : 'e');\n        }\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Galician [gl]\n//! author : Darío Beiró : https://github.com/quinobravo\nlet monthsShortDot = 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'), monthsShort$1 = 'xan_feb_mar_abr_mai_xuñ_xul_ago_set_out_nov_dec'.split('_');\nlet monthsParse$3 = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuñ/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\nlet monthsRegex$2 = /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\nconst glLocale = {\n    abbr: 'gl',\n    months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot;\n        }\n        if (/-MMM-/.test(format)) {\n            return monthsShort$1[getMonth(date, isUTC)];\n        }\n        return monthsShortDot[getMonth(date, isUTC)];\n    },\n    monthsRegex: monthsRegex$2,\n    monthsShortRegex: monthsRegex$2,\n    monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i,\n    monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\n    monthsParse: monthsParse$3,\n    longMonthsParse: monthsParse$3,\n    shortMonthsParse: monthsParse$3,\n    weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY H:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar: {\n        sameDay(date) {\n            return '[hoxe á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextDay(date) {\n            return '[mañan á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        nextWeek(date) {\n            return 'dddd [á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastDay(date) {\n            return '[onte á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        lastWeek(date) {\n            return '[o] dddd [pasado á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'fai %s',\n        s: 'uns segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'unha hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un ano',\n        yy: '%d anos'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\nconst heLocale = {\n    abbr: 'he',\n    months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n    monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n    weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n    weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n    weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [ב]MMMM YYYY',\n        LLL: 'D [ב]MMMM YYYY HH:mm',\n        LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n        l: 'D/M/YYYY',\n        ll: 'D MMM YYYY',\n        lll: 'D MMM YYYY HH:mm',\n        llll: 'ddd, D MMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[היום ב־]LT',\n        nextDay: '[מחר ב־]LT',\n        nextWeek: 'dddd [בשעה] LT',\n        lastDay: '[אתמול ב־]LT',\n        lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'בעוד %s',\n        past: 'לפני %s',\n        s: 'מספר שניות',\n        ss: '%d שניות',\n        m: 'דקה',\n        mm: '%d דקות',\n        h: 'שעה',\n        hh(num) {\n            if (num === 2) {\n                return 'שעתיים';\n            }\n            return num + ' שעות';\n        },\n        d: 'יום',\n        dd(num) {\n            if (num === 2) {\n                return 'יומיים';\n            }\n            return num + ' ימים';\n        },\n        M: 'חודש',\n        MM(num) {\n            if (num === 2) {\n                return 'חודשיים';\n            }\n            return num + ' חודשים';\n        },\n        y: 'שנה',\n        yy(num) {\n            if (num === 2) {\n                return 'שנתיים';\n            }\n            else if (num % 10 === 0 && num !== 10) {\n                return num + ' שנה';\n            }\n            return num + ' שנים';\n        }\n    },\n    meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n    isPM(input) {\n        return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 5) {\n            return 'לפנות בוקר';\n        }\n        else if (hour < 10) {\n            return 'בבוקר';\n        }\n        else if (hour < 12) {\n            return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n        }\n        else if (hour < 18) {\n            return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n        }\n        else {\n            return 'בערב';\n        }\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\nlet symbolMap = {\n    1: '१',\n    2: '२',\n    3: '३',\n    4: '४',\n    5: '५',\n    6: '६',\n    7: '७',\n    8: '८',\n    9: '९',\n    0: '०'\n}, numberMap = {\n    '१': '1',\n    '२': '2',\n    '३': '3',\n    '४': '4',\n    '५': '5',\n    '६': '6',\n    '७': '7',\n    '८': '8',\n    '९': '9',\n    '०': '0'\n};\nconst hiLocale = {\n    abbr: 'hi',\n    months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n    monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n    weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n    weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n    longDateFormat: {\n        LT: 'A h:mm बजे',\n        LTS: 'A h:mm:ss बजे',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY, A h:mm बजे',\n        LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'\n    },\n    calendar: {\n        sameDay: '[आज] LT',\n        nextDay: '[कल] LT',\n        nextWeek: 'dddd, LT',\n        lastDay: '[कल] LT',\n        lastWeek: '[पिछले] dddd, LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s में',\n        past: '%s पहले',\n        s: 'कुछ ही क्षण',\n        ss: '%d सेकंड',\n        m: 'एक मिनट',\n        mm: '%d मिनट',\n        h: 'एक घंटा',\n        hh: '%d घंटे',\n        d: 'एक दिन',\n        dd: '%d दिन',\n        M: 'एक महीने',\n        MM: '%d महीने',\n        y: 'एक वर्ष',\n        yy: '%d वर्ष'\n    },\n    preparse(str) {\n        return str.replace(/[१२३४५६७८९०]/g, function (match) {\n            return numberMap[match];\n        });\n    },\n    postformat(str) {\n        return str.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        });\n    },\n    // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n    meridiemParse: /रात|सुबह|दोपहर|शाम/,\n    meridiemHour(hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'रात') {\n            return hour < 4 ? hour : hour + 12;\n        }\n        else if (meridiem === 'सुबह') {\n            return hour;\n        }\n        else if (meridiem === 'दोपहर') {\n            return hour >= 10 ? hour : hour + 12;\n        }\n        else if (meridiem === 'शाम') {\n            return hour + 12;\n        }\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 4) {\n            return 'रात';\n        }\n        else if (hour < 10) {\n            return 'सुबह';\n        }\n        else if (hour < 17) {\n            return 'दोपहर';\n        }\n        else if (hour < 20) {\n            return 'शाम';\n        }\n        else {\n            return 'रात';\n        }\n    },\n    week: {\n        dow: 0,\n        doy: 6 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\nlet weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\nfunction translate$4(num, withoutSuffix, key, isFuture) {\n    switch (key) {\n        case 's':\n            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n        case 'ss':\n            return num + ((isFuture || withoutSuffix) ? ' másodperc' : ' másodperce');\n        case 'm':\n            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'mm':\n            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'h':\n            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'hh':\n            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'd':\n            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'dd':\n            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'M':\n            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'MM':\n            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'y':\n            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n        case 'yy':\n            return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n    }\n    return '';\n}\nfunction week(date, isFuture) {\n    return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\n}\nconst huLocale = {\n    abbr: 'hu',\n    months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n    monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n    weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n    weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n    weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'YYYY.MM.DD.',\n        LL: 'YYYY. MMMM D.',\n        LLL: 'YYYY. MMMM D. H:mm',\n        LLLL: 'YYYY. MMMM D., dddd H:mm'\n    },\n    meridiemParse: /de|du/i,\n    isPM(input) {\n        return input.charAt(1).toLowerCase() === 'u';\n    },\n    meridiem(hours, minutes, isLower) {\n        if (hours < 12) {\n            return isLower === true ? 'de' : 'DE';\n        }\n        else {\n            return isLower === true ? 'du' : 'DU';\n        }\n    },\n    calendar: {\n        sameDay: '[ma] LT[-kor]',\n        nextDay: '[holnap] LT[-kor]',\n        nextWeek(date) {\n            return week(date, true);\n        },\n        lastDay: '[tegnap] LT[-kor]',\n        lastWeek(date) {\n            return week(date, false);\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s múlva',\n        past: '%s',\n        s: translate$4,\n        ss: translate$4,\n        m: translate$4,\n        mm: translate$4,\n        h: translate$4,\n        hh: translate$4,\n        d: translate$4,\n        dd: translate$4,\n        M: translate$4,\n        MM: translate$4,\n        y: translate$4,\n        yy: translate$4\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Croatian [hr]\n//! author : Danijel Grmec : https://github.com/cobaltsis\nconst hrLocale = {\n    abbr: 'hr',\n    months: 'Siječanj_Veljača_Ožujak_Travanj_Svibanj_Lipanj_Srpanj_Kolovoz_Rujan_Listopad_Studeni_Prosinac'.split('_'),\n    monthsShort: 'Sij_Velj_Ožu_Tra_Svi_Lip_Srp_Kol_Ruj_Lis_Stu_Pro'.split('_'),\n    weekdays: 'Nedjelja_Ponedjeljak_Utorak_Srijeda_Četvrtak_Petak_Subota'.split('_'),\n    weekdaysShort: 'Ned_Pon_Uto_Sri_Čet_Pet_Sub'.split('_'),\n    weekdaysMin: 'Ne_Po_Ut_Sr_Če_Pe_Su'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Danas u] LT',\n        nextDay: '[Sutra u] LT',\n        nextWeek: 'dddd [u] LT',\n        lastDay: '[Jučer u] LT',\n        lastWeek: '[Zadnji] dddd [u] LT',\n        sameElse: 'L'\n    },\n    invalidDate: 'Neispravan datum',\n    relativeTime: {\n        future: 'za %s',\n        past: '%s prije',\n        s: 'nekoliko sekundi',\n        ss: '%d sekundi',\n        m: 'minuta',\n        mm: '%d minuta',\n        h: 'sat',\n        hh: '%d sati',\n        d: 'dan',\n        dd: '%d dana',\n        M: 'mjesec',\n        MM: '%d mjeseci',\n        y: 'godina',\n        yy: '%d godina'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal(_num) {\n        const num = Number(_num);\n        const b = num % 10, output = (~~(num % 100 / 10) === 1) ? '.' :\n            (b === 1) ? '.' :\n                (b === 2) ? '.' :\n                    (b === 3) ? '.' : '.';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Indonesia [id]\n//! author : Romy Kusuma : https://github.com/rkusuma\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\nconst idLocale = {\n    abbr: 'id',\n    months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n    weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n    weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n    weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n    longDateFormat: {\n        LT: 'HH.mm',\n        LTS: 'HH.mm.ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY [pukul] HH.mm',\n        LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'\n    },\n    meridiemParse: /pagi|siang|sore|malam/,\n    meridiemHour(hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'pagi') {\n            return hour;\n        }\n        else if (meridiem === 'siang') {\n            return hour >= 11 ? hour : hour + 12;\n        }\n        else if (meridiem === 'sore' || meridiem === 'malam') {\n            return hour + 12;\n        }\n    },\n    meridiem(hours, minutes, isLower) {\n        if (hours < 11) {\n            return 'pagi';\n        }\n        else if (hours < 15) {\n            return 'siang';\n        }\n        else if (hours < 19) {\n            return 'sore';\n        }\n        else {\n            return 'malam';\n        }\n    },\n    calendar: {\n        sameDay: '[Hari ini pukul] LT',\n        nextDay: '[Besok pukul] LT',\n        nextWeek: 'dddd [pukul] LT',\n        lastDay: '[Kemarin pukul] LT',\n        lastWeek: 'dddd [lalu pukul] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'dalam %s',\n        past: '%s yang lalu',\n        s: 'beberapa detik',\n        ss: '%d detik',\n        m: 'semenit',\n        mm: '%d menit',\n        h: 'sejam',\n        hh: '%d jam',\n        d: 'sehari',\n        dd: '%d hari',\n        M: 'sebulan',\n        MM: '%d bulan',\n        y: 'setahun',\n        yy: '%d tahun'\n    },\n    week: {\n        dow: 1,\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\nconst itLocale = {\n    abbr: 'it',\n    months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n    monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n    weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n    weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n    weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Oggi alle] LT',\n        nextDay: '[Domani alle] LT',\n        nextWeek: 'dddd [alle] LT',\n        lastDay: '[Ieri alle] LT',\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[la scorsa] dddd [alle] LT';\n                default:\n                    return '[lo scorso] dddd [alle] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future(num) {\n            return ((/^[0-9].+$/).test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\n        },\n        past: '%s fa',\n        s: 'alcuni secondi',\n        ss: '%d secondi',\n        m: 'un minuto',\n        mm: '%d minuti',\n        h: 'un\\'ora',\n        hh: '%d ore',\n        d: 'un giorno',\n        dd: '%d giorni',\n        M: 'un mese',\n        MM: '%d mesi',\n        y: 'un anno',\n        yy: '%d anni'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\nconst jaLocale = {\n    abbr: 'ja',\n    months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n    weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n    weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY/MM/DD',\n        LL: 'YYYY年M月D日',\n        LLL: 'YYYY年M月D日 HH:mm',\n        LLLL: 'YYYY年M月D日 HH:mm dddd',\n        l: 'YYYY/MM/DD',\n        ll: 'YYYY年M月D日',\n        lll: 'YYYY年M月D日 HH:mm',\n        llll: 'YYYY年M月D日 HH:mm dddd'\n    },\n    meridiemParse: /午前|午後/i,\n    isPM(input) {\n        return input === '午後';\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 12) {\n            return '午前';\n        }\n        else {\n            return '午後';\n        }\n    },\n    calendar: {\n        sameDay: '[今日] LT',\n        nextDay: '[明日] LT',\n        nextWeek: '[来週]dddd LT',\n        lastDay: '[昨日] LT',\n        lastWeek: '[前週]dddd LT',\n        sameElse: 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}日/,\n    ordinal(num, period) {\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + '日';\n            default:\n                return num.toString(10);\n        }\n    },\n    relativeTime: {\n        future: '%s後',\n        past: '%s前',\n        s: '数秒',\n        ss: '%d秒',\n        m: '1分',\n        mm: '%d分',\n        h: '1時間',\n        hh: '%d時間',\n        d: '1日',\n        dd: '%d日',\n        M: '1ヶ月',\n        MM: '%dヶ月',\n        y: '1年',\n        yy: '%d年'\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Georgian [ka]\n//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n//! author : Levan Tskipuri : https://github.com/tskipa\nconst kaLocale = {\n    abbr: 'ka',\n    months: {\n        format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_'),\n        standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_')\n    },\n    monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n    weekdays: {\n        standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n        format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n        isFormat: /(წინა|შემდეგ)/\n    },\n    weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n    weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n    longDateFormat: {\n        LT: 'h:mm A',\n        LTS: 'h:mm:ss A',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY h:mm A',\n        LLLL: 'dddd, D MMMM YYYY h:mm A'\n    },\n    calendar: {\n        sameDay: '[დღეს] LT[-ზე]',\n        nextDay: '[ხვალ] LT[-ზე]',\n        lastDay: '[გუშინ] LT[-ზე]',\n        nextWeek: '[შემდეგ] dddd LT[-ზე]',\n        lastWeek: '[წინა] dddd LT-ზე',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future(s) {\n            var st = s.toString();\n            return (/(წამი|წუთი|საათი|წელი)/).test(st) ?\n                st.replace(/ი$/, 'ში') :\n                st + 'ში';\n        },\n        past(s) {\n            var st = s.toString();\n            if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(st)) {\n                return st.replace(/(ი|ე)$/, 'ის წინ');\n            }\n            if ((/წელი/).test(st)) {\n                return st.replace(/წელი$/, 'წლის წინ');\n            }\n        },\n        s: 'რამდენიმე წამი',\n        ss: '%d წამი',\n        m: 'წუთი',\n        mm: '%d წუთი',\n        h: 'საათი',\n        hh: '%d საათი',\n        d: 'დღე',\n        dd: '%d დღე',\n        M: 'თვე',\n        MM: '%d თვე',\n        y: 'წელი',\n        yy: '%d წელი'\n    },\n    dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n    ordinal(_num, _period) {\n        const num = Number(_num);\n        if (num === 0) {\n            return num.toString();\n        }\n        if (num === 1) {\n            return num + '-ლი';\n        }\n        if ((num < 20) || (num <= 100 && (num % 20 === 0)) || (num % 100 === 0)) {\n            return 'მე-' + num;\n        }\n        return num + '-ე';\n    },\n    week: {\n        dow: 1,\n        doy: 4\n    }\n};\n\n// ! moment.js locale configuration\n// ! locale : Kazakh [kk]\n// ! authors : Nurlan Rakhimzhanov : https://github.com/nurlan\nconst suffixes$1 = {\n    0: '-ші',\n    1: '-ші',\n    2: '-ші',\n    3: '-ші',\n    4: '-ші',\n    5: '-ші',\n    6: '-шы',\n    7: '-ші',\n    8: '-ші',\n    9: '-шы',\n    10: '-шы',\n    20: '-шы',\n    30: '-шы',\n    40: '-шы',\n    50: '-ші',\n    60: '-шы',\n    70: '-ші',\n    80: '-ші',\n    90: '-шы',\n    100: '-ші'\n};\nconst kkLocale = {\n    abbr: 'kk',\n    months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n    monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n    weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n    weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n    weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Бүгін сағат] LT',\n        nextDay: '[Ертең сағат] LT',\n        nextWeek: 'dddd [сағат] LT',\n        lastDay: '[Кеше сағат] LT',\n        lastWeek: '[Өткен аптаның] dddd [сағат] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s ішінде',\n        past: '%s бұрын',\n        s: 'бірнеше секунд',\n        ss: '%d секунд',\n        m: 'бір минут',\n        mm: '%d минут',\n        h: 'бір сағат',\n        hh: '%d сағат',\n        d: 'бір күн',\n        dd: '%d күн',\n        M: 'бір ай',\n        MM: '%d ай',\n        y: 'бір жыл',\n        yy: '%d жыл'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n    ordinal(_num) {\n        const a = _num % 10;\n        const b = _num >= 100 ? 100 : null;\n        return _num + (suffixes$1[_num] || suffixes$1[a] || suffixes$1[b]);\n    },\n    week: {\n        dow: 1,\n        doy: 7 // The week that contains Jan 7th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\nconst koLocale = {\n    abbr: 'ko',\n    months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n    monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n    weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n    weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n    weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n    longDateFormat: {\n        LT: 'A h:mm',\n        LTS: 'A h:mm:ss',\n        L: 'YYYY.MM.DD',\n        LL: 'YYYY년 MMMM D일',\n        LLL: 'YYYY년 MMMM D일 A h:mm',\n        LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n        l: 'YYYY.MM.DD',\n        ll: 'YYYY년 MMMM D일',\n        lll: 'YYYY년 MMMM D일 A h:mm',\n        llll: 'YYYY년 MMMM D일 dddd A h:mm'\n    },\n    calendar: {\n        sameDay: '오늘 LT',\n        nextDay: '내일 LT',\n        nextWeek: 'dddd LT',\n        lastDay: '어제 LT',\n        lastWeek: '지난주 dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s 후',\n        past: '%s 전',\n        s: '몇 초',\n        ss: '%d초',\n        m: '1분',\n        mm: '%d분',\n        h: '한 시간',\n        hh: '%d시간',\n        d: '하루',\n        dd: '%d일',\n        M: '한 달',\n        MM: '%d달',\n        y: '일 년',\n        yy: '%d년'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n    ordinal: function (num, period) {\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + '일';\n            case 'M':\n                return num + '월';\n            case 'w':\n            case 'W':\n                return num + '주';\n            default:\n                return num.toString(10);\n        }\n    },\n    meridiemParse: /오전|오후/,\n    isPM: function (token) {\n        return token === '오후';\n    },\n    meridiem: function (hour, minute, isUpper) {\n        return hour < 12 ? '오전' : '오후';\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Lithuanian [lt]\n//! author : Stanislavas Guk : https://github.com/ixoster\nconst units = {\n    ss: 'sekundė_sekundžių_sekundes',\n    m: 'minutė_minutės_minutę',\n    mm: 'minutės_minučių_minutes',\n    h: 'valanda_valandos_valandą',\n    hh: 'valandos_valandų_valandas',\n    d: 'diena_dienos_dieną',\n    dd: 'dienos_dienų_dienas',\n    M: 'mėnuo_mėnesio_mėnesį',\n    MM: 'mėnesiai_mėnesių_mėnesius',\n    y: 'metai_metų_metus',\n    yy: 'metai_metų_metus'\n};\nfunction translateSeconds(num, withoutSuffix, key, isFuture) {\n    if (withoutSuffix) {\n        return 'kelios sekundės';\n    }\n    else {\n        return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n    }\n}\nfunction translateSingular(num, withoutSuffix, key, isFuture) {\n    return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n}\nfunction special(num) {\n    return num % 10 === 0 || (num > 10 && num < 20);\n}\nfunction forms(key) {\n    return units[key].split('_');\n}\nfunction translate$3(num, withoutSuffix, key, isFuture) {\n    let result = num + ' ';\n    if (num === 1) {\n        return result + translateSingular(num, withoutSuffix, key[0], isFuture);\n    }\n    else if (withoutSuffix) {\n        return result + (special(num) ? forms(key)[1] : forms(key)[0]);\n    }\n    else {\n        if (isFuture) {\n            return result + forms(key)[1];\n        }\n        else {\n            return result + (special(num) ? forms(key)[1] : forms(key)[2]);\n        }\n    }\n}\nconst ltLocale = {\n    abbr: 'lt',\n    months: {\n        format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n        standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n        isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n    },\n    monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n    weekdays: {\n        format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n        standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n        isFormat: /dddd HH:mm/\n    },\n    weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n    weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY-MM-DD',\n        LL: 'YYYY [m.] MMMM D [d.]',\n        LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n        LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n        l: 'YYYY-MM-DD',\n        ll: 'YYYY [m.] MMMM D [d.]',\n        lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n        llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n    },\n    calendar: {\n        sameDay: '[Šiandien] LT',\n        nextDay: '[Rytoj] LT',\n        nextWeek: 'dddd LT',\n        lastDay: '[Vakar] LT',\n        lastWeek: '[Praėjusį] dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'po %s',\n        past: 'prieš %s',\n        s: translateSeconds,\n        ss: translate$3,\n        m: translateSingular,\n        mm: translate$3,\n        h: translateSingular,\n        hh: translate$3,\n        d: translateSingular,\n        dd: translate$3,\n        M: translateSingular,\n        MM: translate$3,\n        y: translateSingular,\n        yy: translate$3\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n    ordinal(num) {\n        return num + '-oji';\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Latvian [lv]\n//! author : Matiss Janis Aboltins : https://github.com/matissjanis\nconst lvLocale = {\n    abbr: 'lv',\n    months: 'Janvāris_Februāris_Marts_Aprīlis_Maijs_Jūnijs_Jūlijs_Augusts_Septembris_Oktobris_Novembris_Decembris'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_Mai_Jūn_Jūl_Aug_Sep_Okt_Nov_Dec'.split('_'),\n    weekdays: 'Svētdiena_Pirmdiena_Otrdiena_Trešdiena_Ceturtdiena_Piektdiena_Sestdiena'.split('_'),\n    weekdaysShort: 'Svētd_Pirmd_Otrd_Trešd_Ceturtd_Piektd_Sestd'.split('_'),\n    weekdaysMin: 'Sv_Pi_Ot_Tr_Ce_Pk_Se'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'pēc %s',\n        past: 'pirms %s',\n        s: 'dažām sekundēm',\n        ss: '%d sekundēm',\n        m: 'minūtes',\n        mm: '%d minūtēm',\n        h: 'stundas',\n        hh: '%d stundām',\n        d: 'dienas',\n        dd: '%d dienām',\n        M: 'mēneša',\n        MM: '%d mēnešiem',\n        y: 'gada',\n        yy: '%d gadiem'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal(num) {\n        return num + '.';\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Mongolian [mn]\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\nfunction translate$2(num, withoutSuffix, key, isFuture) {\n    switch (key) {\n        case 's':\n            return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n        case 'ss':\n            return num + (withoutSuffix ? ' секунд' : ' секундын');\n        case 'm':\n        case 'mm':\n            return num + (withoutSuffix ? ' минут' : ' минутын');\n        case 'h':\n        case 'hh':\n            return num + (withoutSuffix ? ' цаг' : ' цагийн');\n        case 'd':\n        case 'dd':\n            return num + (withoutSuffix ? ' өдөр' : ' өдрийн');\n        case 'M':\n        case 'MM':\n            return num + (withoutSuffix ? ' сар' : ' сарын');\n        case 'y':\n        case 'yy':\n            return num + (withoutSuffix ? ' жил' : ' жилийн');\n        default:\n            return num.toString(10);\n    }\n}\nconst mnLocale = {\n    abbr: 'mn',\n    months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n    monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n    weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n    weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY-MM-DD',\n        LL: 'YYYY оны MMMMын D',\n        LLL: 'YYYY оны MMMMын D HH:mm',\n        LLLL: 'dddd, YYYY оны MMMMын D HH:mm'\n    },\n    meridiemParse: /ҮӨ|ҮХ/i,\n    isPM: function (input) {\n        return input === 'ҮХ';\n    },\n    meridiem: function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ҮӨ';\n        }\n        else {\n            return 'ҮХ';\n        }\n    },\n    calendar: {\n        sameDay: '[Өнөөдөр] LT',\n        nextDay: '[Маргааш] LT',\n        nextWeek: '[Ирэх] dddd LT',\n        lastDay: '[Өчигдөр] LT',\n        lastWeek: '[Өнгөрсөн] dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s дараа',\n        past: '%s өмнө',\n        s: translate$2,\n        ss: translate$2,\n        m: translate$2,\n        mm: translate$2,\n        h: translate$2,\n        hh: translate$2,\n        d: translate$2,\n        dd: translate$2,\n        M: translate$2,\n        MM: translate$2,\n        y: translate$2,\n        yy: translate$2\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n    ordinal: function (num, period) {\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + ' өдөр';\n            default:\n                return num.toString(10);\n        }\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Norwegian Bokmål [nb]\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\n//!           Sigurd Gartmann : https://github.com/sigurdga\nconst nbLocale = {\n    abbr: 'nb',\n    months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n    monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n    weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n    weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY [kl.] HH:mm',\n        LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\n    },\n    calendar: {\n        sameDay: '[i dag kl.] LT',\n        nextDay: '[i morgen kl.] LT',\n        nextWeek: 'dddd [kl.] LT',\n        lastDay: '[i går kl.] LT',\n        lastWeek: '[forrige] dddd [kl.] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'om %s',\n        past: '%s siden',\n        s: 'noen sekunder',\n        ss: '%d sekunder',\n        m: 'ett minutt',\n        mm: '%d minutter',\n        h: 'en time',\n        hh: '%d timer',\n        d: 'en dag',\n        dd: '%d dager',\n        M: 'en måned',\n        MM: '%d måneder',\n        y: 'ett år',\n        yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\nlet monthsShortWithDots$1 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\nlet monthsShortWithoutDots$1 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\nlet monthsParse$2 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex$1 = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\nconst nlBeLocale = {\n    abbr: 'nl-be',\n    months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortWithDots$1;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShortWithoutDots$1[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortWithDots$1[getMonth(date, isUTC)];\n        }\n    },\n    monthsRegex: monthsRegex$1,\n    monthsShortRegex: monthsRegex$1,\n    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n    monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n    monthsParse: monthsParse$2,\n    longMonthsParse: monthsParse$2,\n    shortMonthsParse: monthsParse$2,\n    weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n    weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n    weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[vandaag om] LT',\n        nextDay: '[morgen om] LT',\n        nextWeek: 'dddd [om] LT',\n        lastDay: '[gisteren om] LT',\n        lastWeek: '[afgelopen] dddd [om] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'over %s',\n        past: '%s geleden',\n        s: 'een paar seconden',\n        ss: '%d seconden',\n        m: 'één minuut',\n        mm: '%d minuten',\n        h: 'één uur',\n        hh: '%d uur',\n        d: 'één dag',\n        dd: '%d dagen',\n        M: 'één maand',\n        MM: '%d maanden',\n        y: 'één jaar',\n        yy: '%d jaar'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    ordinal(_num) {\n        const num = Number(_num);\n        return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'), monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\nlet monthsParse$1 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\nconst nlLocale = {\n    abbr: 'nl',\n    months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortWithDots;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShortWithoutDots[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortWithDots[getMonth(date, isUTC)];\n        }\n    },\n    monthsRegex,\n    monthsShortRegex: monthsRegex,\n    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n    monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n    monthsParse: monthsParse$1,\n    longMonthsParse: monthsParse$1,\n    shortMonthsParse: monthsParse$1,\n    weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n    weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n    weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD-MM-YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[vandaag om] LT',\n        nextDay: '[morgen om] LT',\n        nextWeek: 'dddd [om] LT',\n        lastDay: '[gisteren om] LT',\n        lastWeek: '[afgelopen] dddd [om] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'over %s',\n        past: '%s geleden',\n        s: 'een paar seconden',\n        ss: '%d seconden',\n        m: 'één minuut',\n        mm: '%d minuten',\n        h: 'één uur',\n        hh: '%d uur',\n        d: 'één dag',\n        dd: '%d dagen',\n        M: 'één maand',\n        MM: '%d maanden',\n        y: 'één jaar',\n        yy: '%d jaar'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    ordinal(_num) {\n        const num = Number(_num);\n        return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\nlet monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\nfunction plural$3(num) {\n    return (num % 10 < 5) && (num % 10 > 1) && ((~~(num / 10) % 10) !== 1);\n}\nfunction translate$1(num, withoutSuffix, key) {\n    let result = num + ' ';\n    switch (key) {\n        case 'ss':\n            return result + (plural$3(num) ? 'sekundy' : 'sekund');\n        case 'm':\n            return withoutSuffix ? 'minuta' : 'minutę';\n        case 'mm':\n            return result + (plural$3(num) ? 'minuty' : 'minut');\n        case 'h':\n            return withoutSuffix ? 'godzina' : 'godzinę';\n        case 'hh':\n            return result + (plural$3(num) ? 'godziny' : 'godzin');\n        case 'MM':\n            return result + (plural$3(num) ? 'miesiące' : 'miesięcy');\n        case 'yy':\n            return result + (plural$3(num) ? 'lata' : 'lat');\n    }\n}\nconst plLocale = {\n    abbr: 'pl',\n    months(date, format, isUTC) {\n        if (!date) {\n            return monthsNominative;\n        }\n        else if (format === '') {\n            // Hack: if format empty we know this is used to generate\n            // RegExp by moment. Give then back both valid forms of months\n            // in RegExp ready format.\n            return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\n        }\n        else if (/D MMMM/.test(format)) {\n            return monthsSubjective[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsNominative[getMonth(date, isUTC)];\n        }\n    },\n    monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n    weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n    weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n    weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Dziś o] LT',\n        nextDay: '[Jutro o] LT',\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[W niedzielę o] LT';\n                case 2:\n                    return '[We wtorek o] LT';\n                case 3:\n                    return '[W środę o] LT';\n                case 5:\n                    return '[W piątek o] LT';\n                case 6:\n                    return '[W sobotę o] LT';\n                default:\n                    return '[W] dddd [o] LT';\n            }\n        },\n        lastDay: '[Wczoraj o] LT',\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[W zeszłą niedzielę o] LT';\n                case 3:\n                    return '[W zeszłą środę o] LT';\n                case 4:\n                    return '[W zeszłą czwartek o] LT';\n                case 5:\n                    return '[W zeszłą piątek o] LT';\n                case 6:\n                    return '[W zeszłą sobotę o] LT';\n                default:\n                    return '[W zeszły] dddd [o] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'za %s',\n        past: '%s temu',\n        s: 'kilka sekund',\n        ss: translate$1,\n        m: translate$1,\n        mm: translate$1,\n        h: translate$1,\n        hh: translate$1,\n        d: '1 dzień',\n        dd: '%d dni',\n        M: 'miesiąc',\n        MM: translate$1,\n        y: 'rok',\n        yy: translate$1\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\nconst ptBrLocale = {\n    abbr: 'pt-br',\n    months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n    monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n    weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n    weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n    weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n    },\n    calendar: {\n        sameDay: '[Hoje às] LT',\n        nextDay: '[Amanhã às] LT',\n        nextWeek: 'dddd [às] LT',\n        lastDay: '[Ontem às] LT',\n        lastWeek(date) {\n            return (getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6) ?\n                '[Último] dddd [às] LT' : // Saturday + Sunday\n                '[Última] dddd [às] LT'; // Monday - Friday\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'em %s',\n        past: '%s atrás',\n        s: 'poucos segundos',\n        ss: '%d segundos',\n        m: 'um minuto',\n        mm: '%d minutos',\n        h: 'uma hora',\n        hh: '%d horas',\n        d: 'um dia',\n        dd: '%d dias',\n        M: 'um mês',\n        MM: '%d meses',\n        y: 'um ano',\n        yy: '%d anos'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº'\n};\n\n// ! moment.js locale configuration\n// ! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n// ! author : Earle white: https://github.com/5earle\nfunction relativeTimeWithPlural$2(num, withoutSuffix, key) {\n    let format = {\n        ss: 'secunde',\n        mm: 'minute',\n        hh: 'ore',\n        dd: 'zile',\n        MM: 'luni',\n        yy: 'ani'\n    };\n    let separator = ' ';\n    if (num % 100 >= 20 || (num >= 100 && num % 100 === 0)) {\n        separator = ' de ';\n    }\n    return num + separator + format[key];\n}\nconst roLocale = {\n    abbr: 'ro',\n    months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n    monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n    weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n    weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY H:mm',\n        LLLL: 'dddd, D MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[azi la] LT',\n        nextDay: '[mâine la] LT',\n        nextWeek: 'dddd [la] LT',\n        lastDay: '[ieri la] LT',\n        lastWeek: '[fosta] dddd [la] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'peste %s',\n        past: '%s în urmă',\n        s: 'câteva secunde',\n        ss: relativeTimeWithPlural$2,\n        m: 'un minut',\n        mm: relativeTimeWithPlural$2,\n        h: 'o oră',\n        hh: relativeTimeWithPlural$2,\n        d: 'o zi',\n        dd: relativeTimeWithPlural$2,\n        M: 'o lună',\n        MM: relativeTimeWithPlural$2,\n        y: 'un an',\n        yy: relativeTimeWithPlural$2\n    },\n    week: {\n        dow: 1,\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\nfunction plural$2(word, num) {\n    let forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\nfunction relativeTimeWithPlural$1(num, withoutSuffix, key) {\n    let format = {\n        ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n        mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n        hh: 'час_часа_часов',\n        dd: 'день_дня_дней',\n        MM: 'месяц_месяца_месяцев',\n        yy: 'год_года_лет'\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'минута' : 'минуту';\n    }\n    return num + ' ' + plural$2(format[key], +num);\n}\nlet monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\n// http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\nconst ruLocale = {\n    abbr: 'ru',\n    months: {\n        format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n        standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n    },\n    monthsShort: {\n        // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n        format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n        standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n    },\n    weekdays: {\n        standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n        format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n        isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n    },\n    weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    monthsParse,\n    longMonthsParse: monthsParse,\n    shortMonthsParse: monthsParse,\n    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n    monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n    // копия предыдущего\n    monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n    // полные названия с падежами\n    monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n    // Выражение, которое соотвествует только сокращённым формам\n    monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY г.',\n        LLL: 'D MMMM YYYY г., H:mm',\n        LLLL: 'dddd, D MMMM YYYY г., H:mm'\n    },\n    calendar: {\n        sameDay: '[Сегодня в] LT',\n        nextDay: '[Завтра в] LT',\n        lastDay: '[Вчера в] LT',\n        nextWeek(date, now) {\n            if (getWeek(now) !== getWeek(date)) {\n                switch (getDayOfWeek(date)) {\n                    case 0:\n                        return '[В следующее] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В следующий] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В следующую] dddd [в] LT';\n                }\n            }\n            else {\n                if (getDayOfWeek(date) === 2) {\n                    return '[Во] dddd [в] LT';\n                }\n                else {\n                    return '[В] dddd [в] LT';\n                }\n            }\n        },\n        lastWeek(date, now) {\n            if (getWeek(now) !== getWeek(date)) {\n                switch (getDayOfWeek(date)) {\n                    case 0:\n                        return '[В прошлое] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В прошлый] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В прошлую] dddd [в] LT';\n                }\n            }\n            else {\n                if (getDayOfWeek(date) === 2) {\n                    return '[Во] dddd [в] LT';\n                }\n                else {\n                    return '[В] dddd [в] LT';\n                }\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'через %s',\n        past: '%s назад',\n        s: 'несколько секунд',\n        ss: relativeTimeWithPlural$1,\n        m: relativeTimeWithPlural$1,\n        mm: relativeTimeWithPlural$1,\n        h: 'час',\n        hh: relativeTimeWithPlural$1,\n        d: 'день',\n        dd: relativeTimeWithPlural$1,\n        M: 'месяц',\n        MM: relativeTimeWithPlural$1,\n        y: 'год',\n        yy: relativeTimeWithPlural$1\n    },\n    meridiemParse: /ночи|утра|дня|вечера/i,\n    isPM(input) {\n        return /^(дня|вечера)$/.test(input);\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночи';\n        }\n        else if (hour < 12) {\n            return 'утра';\n        }\n        else if (hour < 17) {\n            return 'дня';\n        }\n        else {\n            return 'вечера';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n    ordinal(_num, period) {\n        const num = Number(_num);\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n                return num + '-й';\n            case 'D':\n                return num + '-го';\n            case 'w':\n            case 'W':\n                return num + '-я';\n            default:\n                return num.toString(10);\n        }\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Slovak [sk]\n//! author : Jozef Pažin : https://github.com/atiris\nconst months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');\nconst monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\nfunction plural$1(num) {\n    return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\nfunction translate(num, withoutSuffix, key, isFuture) {\n    const result = num + ' ';\n    switch (key) {\n        case 's': // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n        case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$1(num) ? 'sekundy' : 'sekúnd');\n            }\n            else {\n                return result + 'sekundami';\n            }\n        // break;\n        case 'm': // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$1(num) ? 'minúty' : 'minút');\n            }\n            else {\n                return result + 'minútami';\n            }\n        // break;\n        case 'h': // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$1(num) ? 'hodiny' : 'hodín');\n            }\n            else {\n                return result + 'hodinami';\n            }\n        // break;\n        case 'd': // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$1(num) ? 'dni' : 'dní');\n            }\n            else {\n                return result + 'dňami';\n            }\n        // break;\n        case 'M': // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$1(num) ? 'mesiace' : 'mesiacov');\n            }\n            else {\n                return result + 'mesiacmi';\n            }\n        // break;\n        case 'y': // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$1(num) ? 'roky' : 'rokov');\n            }\n            else {\n                return result + 'rokmi';\n            }\n        // break;\n    }\n}\nconst skLocale = {\n    abbr: 'sk',\n    months,\n    monthsShort,\n    weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n    weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n    weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd D. MMMM YYYY H:mm',\n        l: 'D. M. YYYY'\n    },\n    calendar: {\n        sameDay: '[dnes o] LT',\n        nextDay: '[zajtra o] LT',\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[v nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [o] LT';\n                case 3:\n                    return '[v stredu o] LT';\n                case 4:\n                    return '[vo štvrtok o] LT';\n                case 5:\n                    return '[v piatok o] LT';\n                case 6:\n                    return '[v sobotu o] LT';\n            }\n        },\n        lastDay: '[včera o] LT',\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[minulú nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[minulý] dddd [o] LT';\n                case 3:\n                    return '[minulú stredu o] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [o] LT';\n                case 6:\n                    return '[minulú sobotu o] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'o %s',\n        past: 'pred %s',\n        s: translate,\n        ss: translate,\n        m: translate,\n        mm: translate,\n        h: translate,\n        hh: translate,\n        d: translate,\n        dd: translate,\n        M: translate,\n        MM: translate,\n        y: translate,\n        yy: translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Slovenian [sl]\n//! author : mihan : https://github.com/mihan\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var result = number + ' ';\n    switch (key) {\n        case 's':\n            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n        case 'ss':\n            if (number === 1) {\n                result += withoutSuffix ? 'sekundo' : 'sekundi';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n            }\n            return result;\n        case 'm':\n            return withoutSuffix ? 'ena minuta' : 'eno minuto';\n        case 'mm':\n            if (number === 1) {\n                result += withoutSuffix ? 'minuta' : 'minuto';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'ena ura' : 'eno uro';\n        case 'hh':\n            if (number === 1) {\n                result += withoutSuffix ? 'ura' : 'uro';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'uri' : 'urama';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'ure' : 'urami';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'ur' : 'urami';\n            }\n            return result;\n        case 'd':\n            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n        case 'dd':\n            if (number === 1) {\n                result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n            }\n            return result;\n        case 'M':\n            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n        case 'MM':\n            if (number === 1) {\n                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n            }\n            return result;\n        case 'y':\n            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n        case 'yy':\n            if (number === 1) {\n                result += withoutSuffix || isFuture ? 'leto' : 'letom';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'leta' : 'leti';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'let' : 'leti';\n            }\n            return result;\n    }\n}\nconst slLocale = {\n    abbr: 'sl',\n    months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n    monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n    weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n    weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[danes ob] LT',\n        nextDay: '[jutri ob] LT',\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[v] [nedeljo] [ob] LT';\n                case 3:\n                    return '[v] [sredo] [ob] LT';\n                case 6:\n                    return '[v] [soboto] [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[v] dddd [ob] LT';\n            }\n        },\n        lastDay: '[včeraj ob] LT',\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[prejšnjo] [nedeljo] [ob] LT';\n                case 3:\n                    return '[prejšnjo] [sredo] [ob] LT';\n                case 6:\n                    return '[prejšnjo] [soboto] [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prejšnji] dddd [ob] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'čez %s',\n        past: 'pred %s',\n        s: processRelativeTime,\n        ss: processRelativeTime,\n        m: processRelativeTime,\n        mm: processRelativeTime,\n        h: processRelativeTime,\n        hh: processRelativeTime,\n        d: processRelativeTime,\n        dd: processRelativeTime,\n        M: processRelativeTime,\n        MM: processRelativeTime,\n        y: processRelativeTime,\n        yy: processRelativeTime\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Albanian [sq]\n//! author : Agon Cecelia : https://github.com/agoncecelia\nconst sqLocale = {\n    abbr: 'sq',\n    months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n    monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n    weekdays: 'E Dielë_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n    weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n    weekdaysMin: 'Di_He_Ma_Me_En_Pr_Sh'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Sot në] LT',\n        nextDay: '[Nesër në] LT',\n        nextWeek: 'dddd [në] LT',\n        lastDay: '[Dje në] LT',\n        lastWeek: 'dddd [e kaluar në] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'në %s',\n        past: 'para %sve',\n        s: 'disa sekonda',\n        ss: '%d sekonda',\n        m: 'një minut',\n        mm: '%d minuta',\n        h: 'një orë',\n        hh: '%d orë',\n        d: 'një ditë',\n        dd: '%d ditë',\n        M: 'një muaj',\n        MM: '%d muaj',\n        y: 'një vit',\n        yy: '%d vite'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\nconst svLocale = {\n    abbr: 'sv',\n    months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n    monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n    weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n    weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n    weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY-MM-DD',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY [kl.] HH:mm',\n        LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n        lll: 'D MMM YYYY HH:mm',\n        llll: 'ddd D MMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Idag] LT',\n        nextDay: '[Imorgon] LT',\n        lastDay: '[Igår] LT',\n        nextWeek: '[På] dddd LT',\n        lastWeek: '[I] dddd[s] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'om %s',\n        past: 'för %s sedan',\n        s: 'några sekunder',\n        ss: '%d sekunder',\n        m: 'en minut',\n        mm: '%d minuter',\n        h: 'en timme',\n        hh: '%d timmar',\n        d: 'en dag',\n        dd: '%d dagar',\n        M: 'en månad',\n        MM: '%d månader',\n        y: 'ett år',\n        yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n    ordinal(_num) {\n        const num = Number(_num);\n        let b = num % 10, output = (~~(num % 100 / 10) === 1) ? 'e' :\n            (b === 1) ? 'a' :\n                (b === 2) ? 'a' :\n                    (b === 3) ? 'e' : 'e';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n// moment.js locale configuration\n// locale : Thai [th]\n// author : Watcharapol Sanitwong : https://github.com/tumit\nconst thLocale = {\n    abbr: 'th',\n    months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n    monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n    weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY เวลา H:mm',\n        LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n    },\n    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n    isPM(input) {\n        return input === 'หลังเที่ยง';\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ก่อนเที่ยง';\n        }\n        else {\n            return 'หลังเที่ยง';\n        }\n    },\n    calendar: {\n        sameDay: '[วันนี้ เวลา] LT',\n        nextDay: '[พรุ่งนี้ เวลา] LT',\n        nextWeek: 'dddd[หน้า เวลา] LT',\n        lastDay: '[เมื่อวานนี้ เวลา] LT',\n        lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'อีก %s',\n        past: '%sที่แล้ว',\n        s: 'ไม่กี่วินาที',\n        ss: '%d วินาที',\n        m: '1 นาที',\n        mm: '%d นาที',\n        h: '1 ชั่วโมง',\n        hh: '%d ชั่วโมง',\n        d: '1 วัน',\n        dd: '%d วัน',\n        M: '1 เดือน',\n        MM: '%d เดือน',\n        y: '1 ปี',\n        yy: '%d ปี'\n    }\n};\n\n// moment.js locale configuration\n// locale : Thai-Buddhist Era [th-be]\n// author : Watcharapol Sanitwong : https://github.com/tumit\nconst thBeLocale = {\n    abbr: 'th-be',\n    months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n    monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n    weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY เวลา H:mm',\n        LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n    },\n    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n    isPM(input) {\n        return input === 'หลังเที่ยง';\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ก่อนเที่ยง';\n        }\n        else {\n            return 'หลังเที่ยง';\n        }\n    },\n    calendar: {\n        sameDay: '[วันนี้ เวลา] LT',\n        nextDay: '[พรุ่งนี้ เวลา] LT',\n        nextWeek: 'dddd[หน้า เวลา] LT',\n        lastDay: '[เมื่อวานนี้ เวลา] LT',\n        lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'อีก %s',\n        past: '%sที่แล้ว',\n        s: 'ไม่กี่วินาที',\n        ss: '%d วินาที',\n        m: '1 นาที',\n        mm: '%d นาที',\n        h: '1 ชั่วโมง',\n        hh: '%d ชั่วโมง',\n        d: '1 วัน',\n        dd: '%d วัน',\n        M: '1 เดือน',\n        MM: '%d เดือน',\n        y: '1 ปี',\n        yy: '%d ปี'\n    },\n    preparse(str, format) {\n        const _format = thBeLocale.longDateFormat[format]\n            ? thBeLocale.longDateFormat[format]\n            : format;\n        // endsWith('YYYY')\n        if (_format.indexOf('YYYY', _format.length - 'YYYY'.length) !== -1) {\n            const ddMM = str.substr(0, str.length - 4);\n            const yyyy = parseInt(str.substr(str.length - 4), 10) - 543;\n            return ddMM + yyyy;\n        }\n        return str;\n    },\n    getFullYear(date, isUTC = false) {\n        return 543 + (isUTC ? date.getUTCFullYear() : date.getFullYear());\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak Yiğit Kaya: https://github.com/BYK\nlet suffixes = {\n    1: '\\'inci',\n    5: '\\'inci',\n    8: '\\'inci',\n    70: '\\'inci',\n    80: '\\'inci',\n    2: '\\'nci',\n    7: '\\'nci',\n    20: '\\'nci',\n    50: '\\'nci',\n    3: '\\'üncü',\n    4: '\\'üncü',\n    100: '\\'üncü',\n    6: '\\'ncı',\n    9: '\\'uncu',\n    10: '\\'uncu',\n    30: '\\'uncu',\n    60: '\\'ıncı',\n    90: '\\'ıncı'\n};\nconst trLocale = {\n    abbr: 'tr',\n    months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n    monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n    weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n    weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n    weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[bugün saat] LT',\n        nextDay: '[yarın saat] LT',\n        nextWeek: '[gelecek] dddd [saat] LT',\n        lastDay: '[dün] LT',\n        lastWeek: '[geçen] dddd [saat] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s sonra',\n        past: '%s önce',\n        s: 'birkaç saniye',\n        ss: '%d saniye',\n        m: 'bir dakika',\n        mm: '%d dakika',\n        h: 'bir saat',\n        hh: '%d saat',\n        d: 'bir gün',\n        dd: '%d gün',\n        M: 'bir ay',\n        MM: '%d ay',\n        y: 'bir yıl',\n        yy: '%d yıl'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n    ordinal(_num) {\n        const num = Number(_num);\n        if (num === 0) { // special case for zero\n            return num + '\\'ıncı';\n        }\n        let a = num % 10, b = num % 100 - a, c = num >= 100 ? 100 : null;\n        return num + (suffixes[a] || suffixes[b] || suffixes[c]);\n    },\n    week: {\n        dow: 1,\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\nfunction plural(word, num) {\n    let forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\nfunction relativeTimeWithPlural(num, withoutSuffix, key) {\n    let format = {\n        ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n        mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n        hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n        dd: 'день_дні_днів',\n        MM: 'місяць_місяці_місяців',\n        yy: 'рік_роки_років'\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'хвилина' : 'хвилину';\n    }\n    if (key === 'h') {\n        return withoutSuffix ? 'година' : 'годину';\n    }\n    return num + ' ' + plural(format[key], +num);\n}\nfunction weekdaysCaseReplace(date, format, isUTC) {\n    let weekdays = {\n        nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n        accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n        genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n    };\n    if (!date) {\n        return weekdays.nominative;\n    }\n    let nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n        'accusative' :\n        ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n            'genitive' :\n            'nominative');\n    return weekdays[nounCase][getDayOfWeek(date, isUTC)];\n}\nfunction processHoursFunction(str) {\n    return function (date) {\n        return str + 'о' + (getHours(date) === 11 ? 'б' : '') + '] LT';\n    };\n}\nconst ukLocale = {\n    abbr: 'uk',\n    months: {\n        format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n        standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n    },\n    monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n    weekdays: weekdaysCaseReplace,\n    weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY р.',\n        LLL: 'D MMMM YYYY р., HH:mm',\n        LLLL: 'dddd, D MMMM YYYY р., HH:mm'\n    },\n    calendar: {\n        sameDay: processHoursFunction('[Сьогодні '),\n        nextDay: processHoursFunction('[Завтра '),\n        lastDay: processHoursFunction('[Вчора '),\n        nextWeek: processHoursFunction('[У] dddd ['),\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                case 3:\n                case 5:\n                case 6:\n                    return processHoursFunction('[Минулої] dddd [')(date);\n                case 1:\n                case 2:\n                case 4:\n                    return processHoursFunction('[Минулого] dddd [')(date);\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'за %s',\n        past: '%s тому',\n        s: 'декілька секунд',\n        ss: relativeTimeWithPlural,\n        m: relativeTimeWithPlural,\n        mm: relativeTimeWithPlural,\n        h: 'годину',\n        hh: relativeTimeWithPlural,\n        d: 'день',\n        dd: relativeTimeWithPlural,\n        M: 'місяць',\n        MM: relativeTimeWithPlural,\n        y: 'рік',\n        yy: relativeTimeWithPlural\n    },\n    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n    meridiemParse: /ночі|ранку|дня|вечора/,\n    isPM(input) {\n        return /^(дня|вечора)$/.test(input);\n    },\n    meridiem(hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночі';\n        }\n        else if (hour < 12) {\n            return 'ранку';\n        }\n        else if (hour < 17) {\n            return 'дня';\n        }\n        else {\n            return 'вечора';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n    ordinal(_num, period) {\n        const num = Number(_num);\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n            case 'w':\n            case 'W':\n                return num + '-й';\n            case 'D':\n                return num + '-го';\n            default:\n                return num.toString();\n        }\n    },\n    week: {\n        dow: 1,\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Việt Nam [vi]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\nconst viLocale = {\n    abbr: 'vi',\n    months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n    monthsShort: 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n    weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n    weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n    weekdaysParseExact: true,\n    meridiemParse: /sa|ch/i,\n    isPM(input) {\n        return /^ch$/i.test(input);\n    },\n    meridiem(hours, minutes, isLower) {\n        if (hours < 12) {\n            return isLower ? 'sa' : 'SA';\n        }\n        else {\n            return isLower ? 'ch' : 'CH';\n        }\n    },\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM [năm] YYYY',\n        LLL: 'D MMMM [năm] YYYY HH:mm',\n        LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',\n        l: 'DD/M/YYYY',\n        ll: 'D MMM YYYY',\n        lll: 'D MMM YYYY HH:mm',\n        llll: 'ddd, D MMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Hôm nay lúc] LT',\n        nextDay: '[Ngày mai lúc] LT',\n        nextWeek: 'dddd [tuần tới lúc] LT',\n        lastDay: '[Hôm qua lúc] LT',\n        lastWeek: 'dddd [tuần trước lúc] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s tới',\n        past: '%s trước',\n        s: 'vài giây',\n        ss: '%d giây',\n        m: 'một phút',\n        mm: '%d phút',\n        h: 'một giờ',\n        hh: '%d giờ',\n        d: 'một ngày',\n        dd: '%d ngày',\n        M: 'một tháng',\n        MM: '%d tháng',\n        y: 'một năm',\n        yy: '%d năm'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}/,\n    ordinal(_num) {\n        return '' + _num;\n    },\n    week: {\n        dow: 1,\n        doy: 4 // Tuần chứa ngày 4 tháng 1 là tuần đầu tiên trong năm.\n    }\n};\n\n//! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\nconst zhCnLocale = {\n    abbr: 'zh-cn',\n    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n    weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY/MM/DD',\n        LL: 'YYYY年M月D日',\n        LLL: 'YYYY年M月D日Ah点mm分',\n        LLLL: 'YYYY年M月D日ddddAh点mm分',\n        l: 'YYYY/M/D',\n        ll: 'YYYY年M月D日',\n        lll: 'YYYY年M月D日 HH:mm',\n        llll: 'YYYY年M月D日dddd HH:mm'\n    },\n    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n    meridiemHour(hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === '凌晨' || meridiem === '早上' ||\n            meridiem === '上午') {\n            return hour;\n        }\n        else if (meridiem === '下午' || meridiem === '晚上') {\n            return hour + 12;\n        }\n        else {\n            // '中午'\n            return hour >= 11 ? hour : hour + 12;\n        }\n    },\n    meridiem(hour, minute, isLower) {\n        let hm = hour * 100 + minute;\n        if (hm < 600) {\n            return '凌晨';\n        }\n        else if (hm < 900) {\n            return '早上';\n        }\n        else if (hm < 1130) {\n            return '上午';\n        }\n        else if (hm < 1230) {\n            return '中午';\n        }\n        else if (hm < 1800) {\n            return '下午';\n        }\n        else {\n            return '晚上';\n        }\n    },\n    calendar: {\n        sameDay: '[今天]LT',\n        nextDay: '[明天]LT',\n        nextWeek: '[下]ddddLT',\n        lastDay: '[昨天]LT',\n        lastWeek: '[上]ddddLT',\n        sameElse: 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n    ordinal(_num, period) {\n        const num = Number(_num);\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + '日';\n            case 'M':\n                return num + '月';\n            case 'w':\n            case 'W':\n                return num + '周';\n            default:\n                return num.toString();\n        }\n    },\n    relativeTime: {\n        future: '%s内',\n        past: '%s前',\n        s: '几秒',\n        ss: '%d 秒',\n        m: '1 分钟',\n        mm: '%d 分钟',\n        h: '1 小时',\n        hh: '%d 小时',\n        d: '1 天',\n        dd: '%d 天',\n        M: '1 个月',\n        MM: '%d 个月',\n        y: '1 年',\n        yy: '%d 年'\n    },\n    week: {\n        // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n        dow: 1,\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { add, arLocale, bgLocale, caLocale, csLocale, daLocale, deLocale, defineLocale, enGbLocale, endOf, esDoLocale, esLocale, esPrLocale, esUsLocale, etLocale, fiLocale, formatDate, frLocale, getDay, getFirstDayOfMonth, getFullYear, getLocale, getMonth, getSetGlobalLocale, glLocale, heLocale, hiLocale, hrLocale, huLocale, idLocale, isAfter, isArray, isBefore, isDate, isDateValid, isDisabledDay, isFirstDayOfWeek, isSame, isSameDay$1 as isSameDay, isSameMonth, isSameYear, itLocale, jaLocale, kaLocale, kkLocale, koLocale, listLocales, ltLocale, lvLocale, mnLocale, nbLocale, nlBeLocale, nlLocale, parseDate, plLocale, ptBrLocale, roLocale, ruLocale, setFullDate, shiftDate, skLocale, slLocale, sqLocale, startOf, subtract, svLocale, thBeLocale, thLocale, trLocale, ukLocale, updateLocale, utcAsLocal, viLocale, zhCnLocale };\n"],"mappings":"AAAA,SAASA,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;EACf,OAAO,CAACD,CAAC,GAAGC,CAAJ,GAAQA,CAAT,IAAcA,CAArB;AACH;;AACD,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;EACnB,OAAOA,GAAG,GAAG,CAAN,GAAUC,IAAI,CAACC,IAAL,CAAUF,GAAV,KAAkB,CAA5B,GAAgCC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAvC;AACH;;AAED,SAASI,QAAT,CAAkBC,GAAlB,EAAuB;EACnB,OAAO,OAAOA,GAAP,KAAe,QAAtB;AACH;;AACD,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;EACnB,OAAOA,KAAK,YAAYC,IAAjB,IAAyBC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,KAA/B,MAA0C,eAA1E;AACH;;AACD,SAASM,SAAT,CAAmBN,KAAnB,EAA0B;EACtB,OAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAnC;AACH;;AACD,SAASO,WAAT,CAAqBC,IAArB,EAA2B;EACvB,OAAOA,IAAI,IAAIA,IAAI,CAACC,OAAb,IAAwB,CAACC,KAAK,CAACF,IAAI,CAACC,OAAL,EAAD,CAArC;AACH,C,CACD;;;AACA,SAASE,UAAT,CAAoBC,EAApB,EAAwB;EACpB,OAAQA,EAAE,YAAYC,QAAd,IACJX,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BO,EAA/B,MAAuC,mBAD3C;AAEH;;AACD,SAASE,QAAT,CAAkBd,KAAlB,EAAyB;EACrB,OAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BE,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,KAA/B,MAA0C,iBAA9E;AACH;;AACD,SAASe,OAAT,CAAiBC,KAAjB,EAAwB;EACpB,OAAQA,KAAK,YAAYC,KAAjB,IACJf,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BW,KAA/B,MAA0C,gBAD9C;AAEH;;AACD,SAASE,UAAT,CAAoBC;AAAE;AAAtB,EAAkCC,CAAlC,EAAqC;EACjC,OAAOlB,MAAM,CAACC,SAAP,CAAiBkB,cAAjB,CAAgChB,IAAhC,CAAqCc,CAArC,EAAwCC,CAAxC,CAAP;AACH;;AACD,SAASE,QAAT,CAAkBN;AAAM;AAAxB,EAAoC;EAChC;EACA;EACA,OAAQA,KAAK,IAAI,IAAT,IAAiBd,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BW,KAA/B,MAA0C,iBAAnE;AACH;;AACD,SAASO,aAAT,CAAuBC,GAAvB,EAA4B;EACxB,IAAItB,MAAM,CAACuB,mBAAX,EAAgC;IAC5B,OAAQvB,MAAM,CAACuB,mBAAP,CAA2BD,GAA3B,EAAgCE,MAAhC,KAA2C,CAAnD;EACH;;EACD,IAAIC,CAAJ;;EACA,KAAKA,CAAL,IAAUH,GAAV,EAAe;IACX;IACA,IAAIA,GAAG,CAACH,cAAJ,CAAmBM,CAAnB,CAAJ,EAA2B;MACvB,OAAO,KAAP;IACH;EACJ;;EACD,OAAO,IAAP;AACH;;AACD,SAASC,WAAT,CAAqBZ,KAArB,EAA4B;EACxB,OAAOA,KAAK,KAAK,KAAK,CAAtB;AACH;;AACD,SAASa,KAAT,CAAeC,mBAAf,EAAoC;EAChC,MAAMC,aAAa,GAAG,CAACD,mBAAvB;EACA,IAAI9B,KAAK,GAAG,CAAZ;;EACA,IAAI+B,aAAa,KAAK,CAAlB,IAAuBC,QAAQ,CAACD,aAAD,CAAnC,EAAoD;IAChD/B,KAAK,GAAGR,QAAQ,CAACuC,aAAD,CAAhB;EACH;;EACD,OAAO/B,KAAP;AACH;;AAED,MAAMiC,OAAO,GAAG,EAAhB;AACA,MAAMC,SAAS,GAAG;EACd1B,IAAI,EAAE,KADQ;EAEd2B,IAAI,EAAE,OAFQ;EAGdC,MAAM,EAAE,SAHM;EAIdC,MAAM,EAAE,SAJM;EAKdC,WAAW,EAAE;AALC,CAAlB;;AAOA,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,SAA5B,EAAuC;EACnC,MAAMC,SAAS,GAAGF,IAAI,CAACG,WAAL,EAAlB;EACA,IAAIC,KAAK,GAAGJ,IAAZ;;EACA,IAAIE,SAAS,IAAIR,SAAjB,EAA4B;IACxBU,KAAK,GAAGV,SAAS,CAACQ,SAAD,CAAjB;EACH;;EACDT,OAAO,CAACS,SAAD,CAAP,GAAqBT,OAAO,CAAE,GAAES,SAAU,GAAd,CAAP,GAA2BT,OAAO,CAACQ,SAAD,CAAP,GAAqBG,KAArE;AACH;;AACD,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAC3B,OAAOjD,QAAQ,CAACiD,KAAD,CAAR,GAAkBb,OAAO,CAACa,KAAD,CAAP,IAAkBb,OAAO,CAACa,KAAK,CAACH,WAAN,EAAD,CAA3C,GAAmEI,SAA1E;AACH;;AACD,SAASC,oBAAT,CAA8BC,WAA9B,EAA2C;EACvC,MAAMC,eAAe,GAAG,EAAxB;EACA,IAAIC,cAAJ;EACA,IAAIC,IAAJ;;EACA,KAAKA,IAAL,IAAaH,WAAb,EAA0B;IACtB,IAAI/B,UAAU,CAAC+B,WAAD,EAAcG,IAAd,CAAd,EAAmC;MAC/BD,cAAc,GAAGN,cAAc,CAACO,IAAD,CAA/B;;MACA,IAAID,cAAJ,EAAoB;QAChBD,eAAe,CAACC,cAAD,CAAf,GAAkCF,WAAW,CAACG,IAAD,CAA7C;MACH;IACJ;EACJ;;EACD,OAAOF,eAAP;AACH,C,CAED;;;AACA,MAAMG,IAAI,GAAG,CAAb;AACA,MAAMC,KAAK,GAAG,CAAd;AACA,MAAMC,IAAI,GAAG,CAAb;AACA,MAAMC,IAAI,GAAG,CAAb;AACA,MAAMC,MAAM,GAAG,CAAf;AACA,MAAMC,MAAM,GAAG,CAAf;AACA,MAAMC,WAAW,GAAG,CAApB;AACA,MAAMC,IAAI,GAAG,CAAb;AACA,MAAMC,OAAO,GAAG,CAAhB;;AAEA,SAASC,QAAT,CAAkBrE,GAAlB,EAAuBsE,YAAvB,EAAqCC,SAArC,EAAgD;EAC5C,MAAMC,SAAS,GAAI,GAAEvE,IAAI,CAACwE,GAAL,CAASzE,GAAT,CAAc,EAAnC;EACA,MAAM0E,WAAW,GAAGJ,YAAY,GAAGE,SAAS,CAACvC,MAA7C;EACA,MAAM0C,IAAI,GAAG3E,GAAG,IAAI,CAApB;;EACA,MAAM4E,KAAK,GAAGD,IAAI,GAAIJ,SAAS,GAAG,GAAH,GAAS,EAAtB,GAA4B,GAA9C,CAJ4C,CAK5C;;;EACA,MAAMM,MAAM,GAAG5E,IAAI,CAAC6E,GAAL,CAAS,EAAT,EAAa7E,IAAI,CAAC8E,GAAL,CAAS,CAAT,EAAYL,WAAZ,CAAb,EAAuC/D,QAAvC,GAAkDqE,MAAlD,CAAyD,CAAzD,CAAf;;EACA,OAAQJ,KAAK,GAAGC,MAAR,GAAiBL,SAAzB;AACH;;AAED,MAAMS,eAAe,GAAG,EAAxB;AACA,MAAMC,oBAAoB,GAAG,EAA7B;AACA,MAAMC,gBAAgB,GAAG,sLAAzB,C,CACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,OAAvC,EAAgDC,QAAhD,EAA0D;EACtD,IAAIH,KAAJ,EAAW;IACPH,oBAAoB,CAACG,KAAD,CAApB,GAA8BG,QAA9B;EACH;;EACD,IAAIF,MAAJ,EAAY;IACRJ,oBAAoB,CAACI,MAAM,CAAC,CAAD,CAAP,CAApB,GAAkC,YAAY;MAC1C,OAAOjB,QAAQ,CAACmB,QAAQ,CAACC,KAAT,CAAe,IAAf,EAAqBC,SAArB,CAAD,EAAkCJ,MAAM,CAAC,CAAD,CAAxC,EAA6CA,MAAM,CAAC,CAAD,CAAnD,CAAf;IACH,CAFD;EAGH;;EACD,IAAIC,OAAJ,EAAa;IACTL,oBAAoB,CAACK,OAAD,CAApB,GAAgC,UAAUxE,IAAV,EAAgB4E,IAAhB,EAAsB;MAClD,OAAOA,IAAI,CAACC,MAAL,CAAYL,OAAZ,CAAoBC,QAAQ,CAACC,KAAT,CAAe,IAAf,EAAqBC,SAArB,CAApB,EAAqDL,KAArD,CAAP;IACH,CAFD;EAGH;AACJ;;AACD,SAASQ,kBAAT,CAA4BC,MAA5B,EAAoC;EAChC,MAAMC,KAAK,GAAGD,MAAM,CAACE,KAAP,CAAab,gBAAb,CAAd;EACA,MAAMlD,MAAM,GAAG8D,KAAK,CAAC9D,MAArB;EACA,MAAMgE,SAAS,GAAG,IAAIzE,KAAJ,CAAUS,MAAV,CAAlB;;EACA,KAAK,IAAIiE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjE,MAApB,EAA4BiE,CAAC,EAA7B,EAAiC;IAC7BD,SAAS,CAACC,CAAD,CAAT,GAAehB,oBAAoB,CAACa,KAAK,CAACG,CAAD,CAAN,CAApB,GACThB,oBAAoB,CAACa,KAAK,CAACG,CAAD,CAAN,CADX,GAETC,sBAAsB,CAACJ,KAAK,CAACG,CAAD,CAAN,CAF5B;EAGH;;EACD,OAAO,UAAUnF,IAAV,EAAgB6E,MAAhB,EAAwBQ,KAAxB,EAA+BC,MAAM,GAAG,CAAxC,EAA2C;IAC9C,IAAIC,MAAM,GAAG,EAAb;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtE,MAApB,EAA4BsE,CAAC,EAA7B,EAAiC;MAC7BD,MAAM,IAAIpF,UAAU,CAAC+E,SAAS,CAACM,CAAD,CAAV,CAAV,GACJN,SAAS,CAACM,CAAD,CAAT,CAAa3F,IAAb,CAAkB,IAAlB,EAAwBG,IAAxB,EAA8B;QAAE+E,MAAF;QAAUF,MAAV;QAAkBQ,KAAlB;QAAyBC;MAAzB,CAA9B,CADI,GAEJJ,SAAS,CAACM,CAAD,CAFf;IAGH;;IACD,OAAOD,MAAP;EACH,CARD;AASH;;AACD,SAASH,sBAAT,CAAgC5E,KAAhC,EAAuC;EACnC,IAAIA,KAAK,CAACyE,KAAN,CAAY,UAAZ,CAAJ,EAA6B;IACzB,OAAOzE,KAAK,CAACiF,OAAN,CAAc,UAAd,EAA0B,EAA1B,CAAP;EACH;;EACD,OAAOjF,KAAK,CAACiF,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAP;AACH,C,CAED;;;AACA,SAASC,aAAT,CAAuBC,CAAvB,EAA0BC,CAA1B,EAA6BC,CAA7B,EAAgC;EAC5B;EACA,MAAM7F,IAAI,GAAG,IAAIP,IAAJ,CAASA,IAAI,CAACqG,GAAL,CAASpB,KAAT,CAAe,IAAf,EAAqBC,SAArB,CAAT,CAAb,CAF4B,CAG5B;;EACA,IAAIgB,CAAC,GAAG,GAAJ,IAAWA,CAAC,IAAI,CAAhB,IAAqBnE,QAAQ,CAACxB,IAAI,CAAC+F,cAAL,EAAD,CAAjC,EAA0D;IACtD/F,IAAI,CAACgG,cAAL,CAAoBL,CAApB;EACH;;EACD,OAAO3F,IAAP;AACH;;AACD,SAASiG,UAAT,CAAoBN,CAApB,EAAuBC,CAAC,GAAG,CAA3B,EAA8BC,CAAC,GAAG,CAAlC,EAAqCK,CAAC,GAAG,CAAzC,EAA4CC,CAAC,GAAG,CAAhD,EAAmDC,CAAC,GAAG,CAAvD,EAA0DC,EAAE,GAAG,CAA/D,EAAkE;EAC9D,MAAMrG,IAAI,GAAG,IAAIP,IAAJ,CAASkG,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBK,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2BC,EAA3B,CAAb,CAD8D,CAE9D;;EACA,IAAIV,CAAC,GAAG,GAAJ,IAAWA,CAAC,IAAI,CAAhB,IAAqBnE,QAAQ,CAACxB,IAAI,CAACsG,WAAL,EAAD,CAAjC,EAAuD;IACnDtG,IAAI,CAACuG,WAAL,CAAiBZ,CAAjB;EACH;;EACD,OAAO3F,IAAP;AACH;;AAED,SAASwG,QAAT,CAAkBxG,IAAlB,EAAwBqF,KAAK,GAAG,KAAhC,EAAuC;EACnC,OAAOA,KAAK,GAAGrF,IAAI,CAACyG,WAAL,EAAH,GAAwBzG,IAAI,CAACwG,QAAL,EAApC;AACH;;AACD,SAASE,UAAT,CAAoB1G,IAApB,EAA0BqF,KAAK,GAAG,KAAlC,EAAyC;EACrC,OAAOA,KAAK,GAAGrF,IAAI,CAAC2G,aAAL,EAAH,GAA0B3G,IAAI,CAAC0G,UAAL,EAAtC;AACH;;AACD,SAASE,UAAT,CAAoB5G,IAApB,EAA0BqF,KAAK,GAAG,KAAlC,EAAyC;EACrC,OAAOA,KAAK,GAAGrF,IAAI,CAAC6G,aAAL,EAAH,GAA0B7G,IAAI,CAAC4G,UAAL,EAAtC;AACH;;AACD,SAASE,eAAT,CAAyB9G,IAAzB,EAA+BqF,KAAK,GAAG,KAAvC,EAA8C;EAC1C,OAAOA,KAAK,GAAGrF,IAAI,CAAC+G,kBAAL,EAAH,GAA+B/G,IAAI,CAAC8G,eAAL,EAA3C;AACH;;AACD,SAAS7G,OAAT,CAAiBD,IAAjB,EAAuB;EACnB,OAAOA,IAAI,CAACC,OAAL,EAAP;AACH;;AACD,SAAS+G,MAAT,CAAgBhH,IAAhB,EAAsBqF,KAAK,GAAG,KAA9B,EAAqC;EACjC,OAAOA,KAAK,GAAGrF,IAAI,CAACiH,SAAL,EAAH,GAAsBjH,IAAI,CAACgH,MAAL,EAAlC;AACH;;AACD,SAASE,OAAT,CAAiBlH,IAAjB,EAAuBqF,KAAK,GAAG,KAA/B,EAAsC;EAClC,OAAOA,KAAK,GAAGrF,IAAI,CAACmH,UAAL,EAAH,GAAuBnH,IAAI,CAACkH,OAAL,EAAnC;AACH;;AACD,SAASE,QAAT,CAAkBpH,IAAlB,EAAwBqF,KAAK,GAAG,KAAhC,EAAuC;EACnC,OAAOA,KAAK,GAAGrF,IAAI,CAACqH,WAAL,EAAH,GAAwBrH,IAAI,CAACoH,QAAL,EAApC;AACH;;AACD,SAASd,WAAT,CAAqBtG,IAArB,EAA2BqF,KAAK,GAAG,KAAnC,EAA0C;EACtC,OAAOA,KAAK,GAAGrF,IAAI,CAAC+F,cAAL,EAAH,GAA2B/F,IAAI,CAACsG,WAAL,EAAvC;AACH;;AACD,SAASgB,WAAT,CAAqBtH,IAArB,EAA2B;EACvB,OAAOd,IAAI,CAACE,KAAL,CAAWY,IAAI,CAACuH,OAAL,KAAiB,IAA5B,CAAP;AACH;;AACD,SAASC,IAAT,CAAcxH,IAAd,EAAoB;EAChB,OAAOd,IAAI,CAACE,KAAL,CAAWY,IAAI,CAACuH,OAAL,KAAiB,IAA5B,CAAP;AACH;;AACD,SAASE,kBAAT,CAA4BzH,IAA5B,EAAkC;EAC9B,OAAOiG,UAAU,CAACjG,IAAI,CAACsG,WAAL,EAAD,EAAqBtG,IAAI,CAACoH,QAAL,EAArB,EAAsC,CAAtC,EAAyCpH,IAAI,CAACwG,QAAL,EAAzC,EAA0DxG,IAAI,CAAC0G,UAAL,EAA1D,EAA6E1G,IAAI,CAAC4G,UAAL,EAA7E,CAAjB;AACH;;AACD,SAASc,aAAT,CAAuB1H,IAAvB,EAA6B;EACzB,OAAO2H,YAAY,CAAC3H,IAAI,CAACsG,WAAL,EAAD,EAAqBtG,IAAI,CAACoH,QAAL,EAArB,CAAnB;AACH;;AACD,SAASO,YAAT,CAAsBC,IAAtB,EAA4BC,KAA5B,EAAmC;EAC/B,OAAO,IAAIpI,IAAJ,CAASA,IAAI,CAACqG,GAAL,CAAS8B,IAAT,EAAeC,KAAK,GAAG,CAAvB,EAA0B,CAA1B,CAAT,EAAuCV,UAAvC,EAAP;AACH;;AACD,SAASW,gBAAT,CAA0B9H,IAA1B,EAAgC+H,cAAhC,EAAgD;EAC5C,OAAO/H,IAAI,CAACgH,MAAL,OAAkBgB,MAAM,CAACD,cAAD,CAA/B;AACH;;AACD,SAASE,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmC;EAC/B,IAAI,CAACD,KAAD,IAAU,CAACC,KAAf,EAAsB;IAClB,OAAO,KAAP;EACH;;EACD,OAAOC,UAAU,CAACF,KAAD,EAAQC,KAAR,CAAV,IAA4Bf,QAAQ,CAACc,KAAD,CAAR,KAAoBd,QAAQ,CAACe,KAAD,CAA/D;AACH;;AACD,SAASC,UAAT,CAAoBF,KAApB,EAA2BC,KAA3B,EAAkC;EAC9B,IAAI,CAACD,KAAD,IAAU,CAACC,KAAf,EAAsB;IAClB,OAAO,KAAP;EACH;;EACD,OAAO7B,WAAW,CAAC4B,KAAD,CAAX,KAAuB5B,WAAW,CAAC6B,KAAD,CAAzC;AACH;;AACD,SAASE,WAAT,CAAqBH,KAArB,EAA4BC,KAA5B,EAAmC;EAC/B,IAAI,CAACD,KAAD,IAAU,CAACC,KAAf,EAAsB;IAClB,OAAO,KAAP;EACH;;EACD,OAAQC,UAAU,CAACF,KAAD,EAAQC,KAAR,CAAV,IACJF,WAAW,CAACC,KAAD,EAAQC,KAAR,CADP,IAEJjB,OAAO,CAACgB,KAAD,CAAP,KAAmBhB,OAAO,CAACiB,KAAD,CAF9B;AAGH;;AAED,MAAMG,MAAM,GAAG,IAAf,C,CAAqB;;AACrB,MAAMC,MAAM,GAAG,MAAf,C,CAAuB;;AACvB,MAAMC,MAAM,GAAG,OAAf,C,CAAwB;;AACxB,MAAMC,MAAM,GAAG,OAAf,C,CAAwB;;AACxB,MAAMC,MAAM,GAAG,YAAf,C,CAA6B;;AAC7B,MAAMC,SAAS,GAAG,OAAlB,C,CAA2B;;AAC3B,MAAMC,SAAS,GAAG,WAAlB,C,CAA+B;;AAC/B,MAAMC,SAAS,GAAG,eAAlB,C,CAAmC;;AACnC,MAAMC,SAAS,GAAG,SAAlB,C,CAA6B;;AAC7B,MAAMC,SAAS,GAAG,SAAlB,C,CAA6B;;AAC7B,MAAMC,SAAS,GAAG,cAAlB,C,CAAkC;;AAClC,MAAMC,aAAa,GAAG,KAAtB,C,CAA6B;;AAC7B,MAAMC,WAAW,GAAG,UAApB,C,CAAgC;;AAChC,MAAMC,WAAW,GAAG,oBAApB,C,CAA0C;;AAC1C,MAAMC,gBAAgB,GAAG,yBAAzB,C,CAAoD;;AACpD,MAAMC,cAAc,GAAG,sBAAvB,C,CAA+C;AAC/C;AACA;;AACA,MAAMC,SAAS,GAAG,0IAAlB;AACA,MAAMC,OAAO,GAAG,EAAhB;;AACA,SAASC,aAAT,CAAuBlF,KAAvB,EAA8BmF,KAA9B,EAAqCC,WAArC,EAAkD;EAC9C,IAAIvJ,UAAU,CAACsJ,KAAD,CAAd,EAAuB;IACnBF,OAAO,CAACjF,KAAD,CAAP,GAAiBmF,KAAjB;IACA;EACH;;EACDF,OAAO,CAACjF,KAAD,CAAP,GAAiB,UAAUqF,QAAV,EAAoB9E,MAApB,EAA4B;IACzC,OAAQ8E,QAAQ,IAAID,WAAb,GAA4BA,WAA5B,GAA0CD,KAAjD;EACH,CAFD;AAGH;;AACD,SAASG,qBAAT,CAA+BtF,KAA/B,EAAsCO,MAAtC,EAA8C;EAC1C,MAAMgF,OAAO,GAAG,KAAhB;;EACA,IAAI,CAACnJ,UAAU,CAAC6I,OAAD,EAAUjF,KAAV,CAAf,EAAiC;IAC7B,OAAO,IAAIwF,MAAJ,CAAWC,cAAc,CAACzF,KAAD,CAAzB,CAAP;EACH;;EACD,OAAOiF,OAAO,CAACjF,KAAD,CAAP,CAAeuF,OAAf,EAAwBhF,MAAxB,CAAP;AACH,C,CACD;;;AACA,SAASkF,cAAT,CAAwBzK,GAAxB,EAA6B;EACzB,OAAO0K,WAAW,CAAC1K,GAAG,CACjBmG,OADc,CACN,IADM,EACA,EADA,EAEdA,OAFc,CAEN,qCAFM,EAEiC,CAACwE,OAAD,EAAUC,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,KAA6BH,EAAE,IAAIC,EAAN,IAAYC,EAAZ,IAAkBC,EAFhF,CAAD,CAAlB;AAGH;;AACD,SAASL,WAAT,CAAqB1K,GAArB,EAA0B;EACtB,OAAOA,GAAG,CAACmG,OAAJ,CAAY,wBAAZ,EAAsC,MAAtC,CAAP;AACH;;AAED,MAAM6E,MAAM,GAAG,EAAf;;AACA,SAASC,aAAT,CAAuBjG,KAAvB,EAA8BG,QAA9B,EAAwC;EACpC,MAAM+F,MAAM,GAAGnL,QAAQ,CAACiF,KAAD,CAAR,GAAkB,CAACA,KAAD,CAAlB,GAA4BA,KAA3C;;EACA,IAAImG,IAAI,GAAGhG,QAAX;;EACA,IAAInE,QAAQ,CAACmE,QAAD,CAAZ,EAAwB;IACpBgG,IAAI,GAAG,UAAUjK,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;MACnC1F,KAAK,CAACP,QAAD,CAAL,GAAkBpD,KAAK,CAACb,KAAD,CAAvB;MACA,OAAOkK,MAAP;IACH,CAHD;EAIH;;EACD,IAAInK,OAAO,CAACiK,MAAD,CAAP,IAAmBrK,UAAU,CAACsK,IAAD,CAAjC,EAAyC;IACrC,IAAItF,CAAJ;;IACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGqF,MAAM,CAACtJ,MAAvB,EAA+BiE,CAAC,EAAhC,EAAoC;MAChCmF,MAAM,CAACE,MAAM,CAACrF,CAAD,CAAP,CAAN,GAAoBsF,IAApB;IACH;EACJ;AACJ;;AACD,SAASE,iBAAT,CAA2BrG,KAA3B,EAAkCG,QAAlC,EAA4C;EACxC8F,aAAa,CAACjG,KAAD,EAAQ,UAAU9D,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgCF,MAAhC,EAAwC;IACzDE,MAAM,CAACE,EAAP,GAAYF,MAAM,CAACE,EAAP,IAAa,EAAzB;IACA,OAAOnG,QAAQ,CAACjE,KAAD,EAAQkK,MAAM,CAACE,EAAf,EAAmBF,MAAnB,EAA2BF,MAA3B,CAAf;EACH,CAHY,CAAb;AAIH;;AACD,SAASK,uBAAT,CAAiCvG,KAAjC,EAAwC9D,KAAxC,EAA+CkK,MAA/C,EAAuD;EACnD,IAAIlK,KAAK,IAAI,IAAT,IAAiBE,UAAU,CAAC4J,MAAD,EAAShG,KAAT,CAA/B,EAAgD;IAC5CgG,MAAM,CAAChG,KAAD,CAAN,CAAc9D,KAAd,EAAqBkK,MAAM,CAACI,EAA5B,EAAgCJ,MAAhC,EAAwCpG,KAAxC;EACH;;EACD,OAAOoG,MAAP;AACH;;AAED,MAAMK,UAAU,GAAG,EAAnB;;AACA,SAASC,eAAT,CAAyBhJ,IAAzB,EAA+BiJ,QAA/B,EAAyC;EACrCF,UAAU,CAAC/I,IAAD,CAAV,GAAmBiJ,QAAnB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,cAAT,GAA0B;EACtB;EACA7G,cAAc,CAAC,GAAD,EAAM,CAAC,IAAD,EAAO,CAAP,EAAU,KAAV,CAAN,EAAwB,IAAxB,EAA8B,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAC9D,OAAOsC,OAAO,CAAClH,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAP,CACFzF,QADE,CACO,EADP,CAAP;EAEH,CAHa,CAAd,CAFsB,CAMtB;;EACAmC,YAAY,CAAC,MAAD,EAAS,GAAT,CAAZ,CAPsB,CAQtB;;EACAiJ,eAAe,CAAC,MAAD,EAAS,CAAT,CAAf,CATsB,CAUtB;;EACAxB,aAAa,CAAC,GAAD,EAAMb,SAAN,CAAb;EACAa,aAAa,CAAC,IAAD,EAAOb,SAAP,EAAkBJ,MAAlB,CAAb;EACAiB,aAAa,CAAC,IAAD,EAAO,UAAUG,QAAV,EAAoB9E,MAApB,EAA4B;IAC5C,OAAOA,MAAM,CAACsG,uBAAP,IAAkCtG,MAAM,CAACuG,aAAhD;EACH,CAFY,CAAb;EAGAb,aAAa,CAAC,CAAC,GAAD,EAAM,IAAN,CAAD,EAAcxH,IAAd,CAAb;EACAwH,aAAa,CAAC,IAAD,EAAO,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IAChD1F,KAAK,CAACjC,IAAD,CAAL,GAAc1B,KAAK,CAACb,KAAK,CAACyE,KAAN,CAAY0D,SAAZ,EAAuB,CAAvB,CAAD,CAAnB;IACA,OAAO+B,MAAP;EACH,CAHY,CAAb;AAIH;;AAED,SAASW,mBAAT,GAA+B;EAC3B;EACA,OAAO;IACHC,KAAK,EAAE,KADJ;IAEHC,YAAY,EAAE,EAFX;IAGHC,WAAW,EAAE,EAHV;IAIHC,QAAQ,EAAE,CAAC,CAJR;IAKHC,aAAa,EAAE,CALZ;IAMHC,SAAS,EAAE,KANR;IAOHC,YAAY,EAAE,IAPX;IAQHC,aAAa,EAAE,KARZ;IASHC,eAAe,EAAE,KATd;IAUHC,GAAG,EAAE,KAVF;IAWHC,eAAe,EAAE,EAXd;IAYHC,QAAQ,EAAE,IAZP;IAaHC,OAAO,EAAE,KAbN;IAcHC,eAAe,EAAE;EAdd,CAAP;AAgBH;;AACD,SAASC,eAAT,CAAyB1B,MAAzB,EAAiC;EAC7B,IAAIA,MAAM,CAAC2B,GAAP,IAAc,IAAlB,EAAwB;IACpB3B,MAAM,CAAC2B,GAAP,GAAahB,mBAAmB,EAAhC;EACH;;EACD,OAAOX,MAAM,CAAC2B,GAAd;AACH,C,CAED;;;AACA,SAASC,OAAT,CAAiBtM,IAAjB,EAAuB4E,IAAvB,EAA6B;EACzB,IAAIA,IAAI,CAACC,MAAL,CAAYyB,WAAhB,EAA6B;IACzB,OAAO1B,IAAI,CAACC,MAAL,CAAYyB,WAAZ,CAAwBtG,IAAxB,EAA8B4E,IAAI,CAACS,KAAnC,EAA0CzF,QAA1C,EAAP;EACH;;EACD,OAAO0G,WAAW,CAACtG,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAX,CAA8BzF,QAA9B,EAAP;AACH;;AACD,SAAS2M,QAAT,GAAoB;EAChBlI,cAAc,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAClD,MAAMe,CAAC,GAAGW,WAAW,CAACtG,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAArB;IACA,OAAOM,CAAC,IAAI,IAAL,GAAYA,CAAC,CAAC/F,QAAF,CAAW,EAAX,CAAZ,GAA8B,IAAG+F,CAAE,EAA1C;EACH,CAHa,CAAd;EAIAtB,cAAc,CAAC,IAAD,EAAO,CAAC,IAAD,EAAO,CAAP,EAAU,KAAV,CAAP,EAAyB,IAAzB,EAA+B,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAC/D,OAAO,CAAC0B,WAAW,CAACtG,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAX,GAAgC,GAAjC,EAAsCzF,QAAtC,CAA+C,EAA/C,CAAP;EACH,CAFa,CAAd;EAGAyE,cAAc,CAAC,IAAD,EAAO,CAAC,MAAD,EAAS,CAAT,EAAY,KAAZ,CAAP,EAA2B,IAA3B,EAAiCiI,OAAjC,CAAd;EACAjI,cAAc,CAAC,IAAD,EAAO,CAAC,OAAD,EAAU,CAAV,EAAa,KAAb,CAAP,EAA4B,IAA5B,EAAkCiI,OAAlC,CAAd;EACAjI,cAAc,CAAC,IAAD,EAAO,CAAC,QAAD,EAAW,CAAX,EAAc,IAAd,CAAP,EAA4B,IAA5B,EAAkCiI,OAAlC,CAAd,CAVgB,CAWhB;;EACAvK,YAAY,CAAC,MAAD,EAAS,GAAT,CAAZ,CAZgB,CAahB;;EACAiJ,eAAe,CAAC,MAAD,EAAS,CAAT,CAAf,CAdgB,CAehB;;EACAxB,aAAa,CAAC,GAAD,EAAMN,WAAN,CAAb;EACAM,aAAa,CAAC,IAAD,EAAOb,SAAP,EAAkBJ,MAAlB,CAAb;EACAiB,aAAa,CAAC,MAAD,EAAST,SAAT,EAAoBN,MAApB,CAAb;EACAe,aAAa,CAAC,OAAD,EAAUR,SAAV,EAAqBN,MAArB,CAAb;EACAc,aAAa,CAAC,QAAD,EAAWR,SAAX,EAAsBN,MAAtB,CAAb;EACA6B,aAAa,CAAC,CAAC,OAAD,EAAU,QAAV,CAAD,EAAsB1H,IAAtB,CAAb;EACA0H,aAAa,CAAC,MAAD,EAAS,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IAClD1F,KAAK,CAACnC,IAAD,CAAL,GAAcrC,KAAK,CAACU,MAAN,KAAiB,CAAjB,GAAqBsL,iBAAiB,CAAChM,KAAD,CAAtC,GAAgDa,KAAK,CAACb,KAAD,CAAnE;IACA,OAAOkK,MAAP;EACH,CAHY,CAAb;EAIAH,aAAa,CAAC,IAAD,EAAO,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IAChD1F,KAAK,CAACnC,IAAD,CAAL,GAAc2J,iBAAiB,CAAChM,KAAD,CAA/B;IACA,OAAOkK,MAAP;EACH,CAHY,CAAb;EAIAH,aAAa,CAAC,GAAD,EAAM,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IAC/C1F,KAAK,CAACnC,IAAD,CAAL,GAAc4J,QAAQ,CAACjM,KAAD,EAAQ,EAAR,CAAtB;IACA,OAAOkK,MAAP;EACH,CAHY,CAAb;AAIH;;AACD,SAAS8B,iBAAT,CAA2BhM,KAA3B,EAAkC;EAC9B,OAAOa,KAAK,CAACb,KAAD,CAAL,IAAgBa,KAAK,CAACb,KAAD,CAAL,GAAe,EAAf,GAAoB,IAApB,GAA2B,IAA3C,CAAP;AACH;;AACD,SAASkM,UAAT,CAAoB9E,IAApB,EAA0B;EACtB,OAAO+E,UAAU,CAAC/E,IAAD,CAAV,GAAmB,GAAnB,GAAyB,GAAhC;AACH;;AACD,SAAS+E,UAAT,CAAoB/E,IAApB,EAA0B;EACtB,OAAQA,IAAI,GAAG,CAAP,KAAa,CAAb,IAAkBA,IAAI,GAAG,GAAP,KAAe,CAAlC,IAAwCA,IAAI,GAAG,GAAP,KAAe,CAA9D;AACH,C,CAED;;;AACA,SAASgF,WAAT,CAAqBhF,IAArB,EAA2BC,KAA3B,EAAkC;EAC9B,IAAI3H,KAAK,CAAC0H,IAAD,CAAL,IAAe1H,KAAK,CAAC2H,KAAD,CAAxB,EAAiC;IAC7B,OAAOgF,GAAP;EACH;;EACD,MAAMC,QAAQ,GAAGjO,GAAG,CAACgJ,KAAD,EAAQ,EAAR,CAApB;;EACA,MAAMkF,KAAK,GAAGnF,IAAI,GAAG,CAACC,KAAK,GAAGiF,QAAT,IAAqB,EAA1C;;EACA,OAAOA,QAAQ,KAAK,CAAb,GACDH,UAAU,CAACI,KAAD,CAAV,GAAoB,EAApB,GAAyB,EADxB,GAEA,KAAKD,QAAQ,GAAG,CAAX,GAAe,CAF3B;AAGH;;AACD,SAASE,SAAT,GAAqB;EACjB;EACA3I,cAAc,CAAC,GAAD,EAAM,CAAC,IAAD,EAAO,CAAP,EAAU,KAAV,CAAN,EAAwB,IAAxB,EAA8B,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAC9D,OAAO,CAACwC,QAAQ,CAACpH,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAR,GAA6B,CAA9B,EAAiCzF,QAAjC,CAA0C,EAA1C,CAAP;EACH,CAFa,CAAd;EAGAyE,cAAc,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IACpD,OAAOA,IAAI,CAACC,MAAL,CAAYoI,WAAZ,CAAwBjN,IAAxB,EAA8B4E,IAAI,CAACG,MAAnC,EAA2CH,IAAI,CAACS,KAAhD,CAAP;EACH,CAFa,CAAd;EAGAhB,cAAc,CAAC,MAAD,EAAS,IAAT,EAAe,IAAf,EAAqB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IACrD,OAAOA,IAAI,CAACC,MAAL,CAAYqI,MAAZ,CAAmBlN,IAAnB,EAAyB4E,IAAI,CAACG,MAA9B,EAAsCH,IAAI,CAACS,KAA3C,CAAP;EACH,CAFa,CAAd,CARiB,CAWjB;;EACAtD,YAAY,CAAC,OAAD,EAAU,GAAV,CAAZ,CAZiB,CAajB;;EACAiJ,eAAe,CAAC,OAAD,EAAU,CAAV,CAAf,CAdiB,CAejB;;EACAxB,aAAa,CAAC,GAAD,EAAMb,SAAN,CAAb;EACAa,aAAa,CAAC,IAAD,EAAOb,SAAP,EAAkBJ,MAAlB,CAAb;EACAiB,aAAa,CAAC,KAAD,EAAQ,UAAUG,QAAV,EAAoB9E,MAApB,EAA4B;IAC7C,OAAOA,MAAM,CAACsI,gBAAP,CAAwBxD,QAAxB,CAAP;EACH,CAFY,CAAb;EAGAH,aAAa,CAAC,MAAD,EAAS,UAAUG,QAAV,EAAoB9E,MAApB,EAA4B;IAC9C,OAAOA,MAAM,CAACuI,WAAP,CAAmBzD,QAAnB,CAAP;EACH,CAFY,CAAb;EAGAY,aAAa,CAAC,CAAC,GAAD,EAAM,IAAN,CAAD,EAAc,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IACvD1F,KAAK,CAAClC,KAAD,CAAL,GAAezB,KAAK,CAACb,KAAD,CAAL,GAAe,CAA9B;IACA,OAAOkK,MAAP;EACH,CAHY,CAAb;EAIAH,aAAa,CAAC,CAAC,KAAD,EAAQ,MAAR,CAAD,EAAkB,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgCpG,KAAhC,EAAuC;IAClE,MAAMuD,KAAK,GAAG6C,MAAM,CAAC2C,OAAP,CAAeC,WAAf,CAA2B9M,KAA3B,EAAkC8D,KAAlC,EAAyCoG,MAAM,CAACb,OAAhD,CAAd,CADkE,CAElE;;;IACA,IAAIhC,KAAK,IAAI,IAAb,EAAmB;MACf7C,KAAK,CAAClC,KAAD,CAAL,GAAe+E,KAAf;IACH,CAFD,MAGK;MACDuE,eAAe,CAAC1B,MAAD,CAAf,CAAwBkB,YAAxB,GAAuC,CAAC,CAACpL,KAAzC;IACH;;IACD,OAAOkK,MAAP;EACH,CAVY,CAAb;AAWH;;AAED,MAAM6C,eAAe,GAAG;EACpB3F,IAAI,EAAE,CADc;EAEpBC,KAAK,EAAE,CAFa;EAGpB2F,GAAG,EAAE,CAHe;EAIpB7L,IAAI,EAAE,CAJc;EAKpBC,MAAM,EAAE,CALY;EAMpB6L,OAAO,EAAE;AANW,CAAxB;;AAQA,SAASC,SAAT,CAAmB1N,IAAnB,EAAyBgC,IAAzB,EAA+B;EAC3B,MAAMI,KAAK,GAAG1C,MAAM,CAACiO,MAAP,CAAc,EAAd,EAAkBJ,eAAlB,EAAmCvL,IAAnC,CAAd;;EACA,MAAM4F,IAAI,GAAG5H,IAAI,CAACsG,WAAL,MAAsBlE,KAAK,CAACwF,IAAN,IAAc,CAApC,CAAb;EACA,MAAMC,KAAK,GAAG7H,IAAI,CAACoH,QAAL,MAAmBhF,KAAK,CAACyF,KAAN,IAAe,CAAlC,CAAd;EACA,IAAI2F,GAAG,GAAGxN,IAAI,CAACkH,OAAL,MAAkB9E,KAAK,CAACoL,GAAN,IAAa,CAA/B,CAAV;;EACA,IAAIpL,KAAK,CAACyF,KAAN,IAAe,CAACzF,KAAK,CAACoL,GAA1B,EAA+B;IAC3BA,GAAG,GAAGtO,IAAI,CAAC0O,GAAL,CAASJ,GAAT,EAAcZ,WAAW,CAAChF,IAAD,EAAOC,KAAP,CAAzB,CAAN;EACH;;EACD,OAAO5B,UAAU,CAAC2B,IAAD,EAAOC,KAAP,EAAc2F,GAAd,EAAmBxN,IAAI,CAACwG,QAAL,MAAmBpE,KAAK,CAACT,IAAN,IAAc,CAAjC,CAAnB,EAAwD3B,IAAI,CAAC0G,UAAL,MAAqBtE,KAAK,CAACR,MAAN,IAAgB,CAArC,CAAxD,EAAiG5B,IAAI,CAAC4G,UAAL,MAAqBxE,KAAK,CAACqL,OAAN,IAAiB,CAAtC,CAAjG,CAAjB;AACH;;AACD,SAASI,WAAT,CAAqB7N,IAArB,EAA2BgC,IAA3B,EAAiC;EAC7B,OAAOiE,UAAU,CAAC6H,MAAM,CAAC9N,IAAI,CAACsG,WAAL,EAAD,EAAqBtE,IAAI,CAAC4F,IAA1B,CAAP,EAAwCkG,MAAM,CAAC9N,IAAI,CAACoH,QAAL,EAAD,EAAkBpF,IAAI,CAAC6F,KAAvB,CAA9C,EAA6E,CAA7E,EAAgF;EACjGiG,MAAM,CAAC9N,IAAI,CAACwG,QAAL,EAAD,EAAkBxE,IAAI,CAACL,IAAvB,CADW,EACmBmM,MAAM,CAAC9N,IAAI,CAAC0G,UAAL,EAAD,EAAoB1E,IAAI,CAACJ,MAAzB,CADzB,EAC2DkM,MAAM,CAAC9N,IAAI,CAAC4G,UAAL,EAAD,EAAoB5E,IAAI,CAACyL,OAAzB,CADjE,EACoGK,MAAM,CAAC9N,IAAI,CAAC8G,eAAL,EAAD,EAAyB9E,IAAI,CAAC+L,YAA9B,CAD1G,CAAjB;AAEH;;AACD,SAASD,MAAT,CAAgBE,GAAhB,EAAqB/O,GAArB,EAA0B;EACtB,OAAOqB,QAAQ,CAACrB,GAAD,CAAR,GAAgBA,GAAhB,GAAsB+O,GAA7B;AACH;;AACD,SAASzH,WAAT,CAAqBvG,IAArB,EAA2BR,KAA3B,EAAkC6F,KAAlC,EAAyC;EACrC,MAAM4I,MAAM,GAAG7G,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAvB;;EACA,MAAM6I,KAAK,GAAGhH,OAAO,CAAClH,IAAD,EAAOqF,KAAP,CAArB;;EACA,MAAM0H,KAAK,GAAGzG,WAAW,CAACtG,IAAD,EAAOqF,KAAP,CAAzB;;EACA,IAAIsH,UAAU,CAACI,KAAD,CAAV,IAAqBkB,MAAM,KAAK,CAAhC,IAAqCC,KAAK,KAAK,EAAnD,EAAuD;IACnD,MAAMvG,YAAY,GAAGiF,WAAW,CAACpN,KAAD,EAAQyO,MAAR,CAAhC;;IACA5I,KAAK,GAAGrF,IAAI,CAACgG,cAAL,CAAoBxG,KAApB,EAA2ByO,MAA3B,EAAmCtG,YAAnC,CAAH,GAAsD3H,IAAI,CAACuG,WAAL,CAAiB/G,KAAjB,EAAwByO,MAAxB,EAAgCtG,YAAhC,CAA3D;EACH;;EACDtC,KAAK,GAAGrF,IAAI,CAACgG,cAAL,CAAoBxG,KAApB,CAAH,GAAgCQ,IAAI,CAACuG,WAAL,CAAiB/G,KAAjB,CAArC;EACA,OAAOQ,IAAP;AACH;;AACD,SAASmO,QAAT,CAAkBnO,IAAlB,EAAwBR,KAAxB,EAA+B6F,KAA/B,EAAsC;EAClC,MAAM+I,UAAU,GAAGlP,IAAI,CAAC0O,GAAL,CAAS1G,OAAO,CAAClH,IAAD,CAAhB,EAAwB4M,WAAW,CAACtG,WAAW,CAACtG,IAAD,CAAZ,EAAoBR,KAApB,CAAnC,CAAnB;EACA6F,KAAK,GAAGrF,IAAI,CAACqO,WAAL,CAAiB7O,KAAjB,EAAwB4O,UAAxB,CAAH,GAAyCpO,IAAI,CAACmO,QAAL,CAAc3O,KAAd,EAAqB4O,UAArB,CAA9C;EACA,OAAOpO,IAAP;AACH;;AACD,SAASsO,MAAT,CAAgBtO,IAAhB,EAAsBR,KAAtB,EAA6B6F,KAA7B,EAAoC;EAChCA,KAAK,GAAGrF,IAAI,CAACuO,UAAL,CAAgB/O,KAAhB,CAAH,GAA4BQ,IAAI,CAACwO,OAAL,CAAahP,KAAb,CAAjC;EACA,OAAOQ,IAAP;AACH;;AACD,SAASyO,QAAT,CAAkBzO,IAAlB,EAAwBR,KAAxB,EAA+B6F,KAA/B,EAAsC;EAClCA,KAAK,GAAGrF,IAAI,CAAC0O,WAAL,CAAiBlP,KAAjB,CAAH,GAA6BQ,IAAI,CAACyO,QAAL,CAAcjP,KAAd,CAAlC;EACA,OAAOQ,IAAP;AACH;;AACD,SAAS2O,UAAT,CAAoB3O,IAApB,EAA0BR,KAA1B,EAAiC6F,KAAjC,EAAwC;EACpCA,KAAK,GAAGrF,IAAI,CAAC4O,aAAL,CAAmBpP,KAAnB,CAAH,GAA+BQ,IAAI,CAAC2O,UAAL,CAAgBnP,KAAhB,CAApC;EACA,OAAOQ,IAAP;AACH;;AACD,SAAS6O,UAAT,CAAoB7O,IAApB,EAA0BR,KAA1B,EAAiC6F,KAAjC,EAAwC;EACpCA,KAAK,GAAGrF,IAAI,CAAC8O,aAAL,CAAmBtP,KAAnB,CAAH,GAA+BQ,IAAI,CAAC6O,UAAL,CAAgBrP,KAAhB,CAApC;EACA,OAAOQ,IAAP;AACH;;AACD,SAAS+O,eAAT,CAAyB/O,IAAzB,EAA+BR,KAA/B,EAAsC6F,KAAtC,EAA6C;EACzCA,KAAK,GAAGrF,IAAI,CAACgP,kBAAL,CAAwBxP,KAAxB,CAAH,GAAoCQ,IAAI,CAAC+O,eAAL,CAAqBvP,KAArB,CAAzC;EACA,OAAOQ,IAAP;AACH;;AACD,SAASwO,OAAT,CAAiBxO,IAAjB,EAAuBR,KAAvB,EAA8B6F,KAA9B,EAAqC;EACjCA,KAAK,GAAGrF,IAAI,CAACuO,UAAL,CAAgB/O,KAAhB,CAAH,GAA4BQ,IAAI,CAACwO,OAAL,CAAahP,KAAb,CAAjC;EACA,OAAOQ,IAAP;AACH;;AACD,SAASiP,OAAT,CAAiBjP,IAAjB,EAAuBR,KAAvB,EAA8B;EAC1BQ,IAAI,CAACiP,OAAL,CAAazP,KAAb;EACA,OAAOQ,IAAP;AACH,C,CAED;AACA;;;AACA,SAASkP,SAAT,CAAmBlP,IAAnB,EAAyB;EACrB,OAAO,IAAIP,IAAJ,CAASO,IAAI,CAACC,OAAL,EAAT,CAAP;AACH;;AAED,SAASkP,OAAT,CAAiBnP,IAAjB,EAAuBgC,IAAvB,EAA6BqD,KAA7B,EAAoC;EAChC,MAAM6I,KAAK,GAAGgB,SAAS,CAAClP,IAAD,CAAvB,CADgC,CAEhC;EACA;;;EACA,QAAQgC,IAAR;IACI,KAAK,MAAL;MACImM,QAAQ,CAACD,KAAD,EAAQ,CAAR,EAAW7I,KAAX,CAAR;;IACJ;;IACA,KAAK,SAAL;IACA,KAAK,OAAL;MACImJ,OAAO,CAACN,KAAD,EAAQ,CAAR,EAAW7I,KAAX,CAAP;;IACJ;;IACA,KAAK,MAAL;IACA,KAAK,SAAL;IACA,KAAK,KAAL;IACA,KAAK,MAAL;MACIoJ,QAAQ,CAACP,KAAD,EAAQ,CAAR,EAAW7I,KAAX,CAAR;;IACJ;;IACA,KAAK,OAAL;MACIsJ,UAAU,CAACT,KAAD,EAAQ,CAAR,EAAW7I,KAAX,CAAV;;IACJ;;IACA,KAAK,SAAL;MACIwJ,UAAU,CAACX,KAAD,EAAQ,CAAR,EAAW7I,KAAX,CAAV;;IACJ;;IACA,KAAK,SAAL;MACI0J,eAAe,CAACb,KAAD,EAAQ,CAAR,EAAW7I,KAAX,CAAf;EArBR,CAJgC,CA2BhC;;;EACA,IAAIrD,IAAI,KAAK,MAAb,EAAqB;IACjBoN,kBAAkB,CAAClB,KAAD,EAAQ,CAAR,EAAW;MAAE7I;IAAF,CAAX,CAAlB;EACH;;EACD,IAAIrD,IAAI,KAAK,SAAb,EAAwB;IACpBqN,eAAe,CAACnB,KAAD,EAAQ,CAAR,CAAf;EACH,CAjC+B,CAkChC;;;EACA,IAAIlM,IAAI,KAAK,SAAb,EAAwB;IACpBmM,QAAQ,CAACD,KAAD,EAAQhP,IAAI,CAACE,KAAL,CAAWgI,QAAQ,CAAC8G,KAAD,EAAQ7I,KAAR,CAAR,GAAyB,CAApC,IAAyC,CAAjD,EAAoDA,KAApD,CAAR;EACH;;EACD,OAAO6I,KAAP;AACH;;AACD,SAASoB,KAAT,CAAetP,IAAf,EAAqBgC,IAArB,EAA2BqD,KAA3B,EAAkC;EAC9B,IAAIjD,KAAK,GAAGJ,IAAZ,CAD8B,CAE9B;;EACA,IAAII,KAAK,KAAK,MAAd,EAAsB;IAClBA,KAAK,GAAG,KAAR;EACH;;EACD,MAAMmN,KAAK,GAAGJ,OAAO,CAACnP,IAAD,EAAOoC,KAAP,EAAciD,KAAd,CAArB;;EACA,MAAMmK,KAAK,GAAGC,GAAG,CAACF,KAAD,EAAQ,CAAR,EAAWnN,KAAK,KAAK,SAAV,GAAsB,MAAtB,GAA+BA,KAA1C,EAAiDiD,KAAjD,CAAjB;;EACA,MAAMqK,GAAG,GAAGC,QAAQ,CAACH,KAAD,EAAQ,CAAR,EAAW,cAAX,EAA2BnK,KAA3B,CAApB;EACA,OAAOqK,GAAP;AACH;;AAED,SAASE,aAAT,GAAyB;EACrB;EACAvL,cAAc,CAAC,KAAD,EAAQ,CAAC,MAAD,EAAS,CAAT,EAAY,KAAZ,CAAR,EAA4B,MAA5B,EAAoC,UAAUrE,IAAV,EAAgB;IAC9D,OAAO6P,YAAY,CAAC7P,IAAD,CAAZ,CACFJ,QADE,CACO,EADP,CAAP;EAEH,CAHa,CAAd,CAFqB,CAMrB;;EACAmC,YAAY,CAAC,WAAD,EAAc,KAAd,CAAZ,CAPqB,CAQrB;;EACAiJ,eAAe,CAAC,WAAD,EAAc,CAAd,CAAf;EACAxB,aAAa,CAAC,KAAD,EAAQV,SAAR,CAAb;EACAU,aAAa,CAAC,MAAD,EAAShB,MAAT,CAAb;EACA+B,aAAa,CAAC,CAAC,KAAD,EAAQ,MAAR,CAAD,EAAkB,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IAC3DA,MAAM,CAACoF,UAAP,GAAoBzO,KAAK,CAACb,KAAD,CAAzB;IACA,OAAOkK,MAAP;EACH,CAHY,CAAb;AAIH;;AACD,SAASmF,YAAT,CAAsB7P,IAAtB,EAA4BqF,KAA5B,EAAmC;EAC/B,MAAM6C,KAAK,GAAG,CAACiH,OAAO,CAACnP,IAAD,EAAO,KAAP,EAAcqF,KAAd,CAAtB;EACA,MAAM8C,KAAK,GAAG,CAACgH,OAAO,CAACnP,IAAD,EAAO,MAAP,EAAeqF,KAAf,CAAtB;EACA,MAAM0K,QAAQ,GAAG7H,KAAK,GAAGC,KAAzB;EACA,MAAM6H,MAAM,GAAG,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAhC;EACA,OAAO9Q,IAAI,CAAC+Q,KAAL,CAAWF,QAAQ,GAAGC,MAAtB,IAAgC,CAAvC;AACH;;AACD,SAASE,YAAT,CAAsBlQ,IAAtB,EAA4BQ,KAA5B,EAAmC;EAC/B,MAAM2P,SAAS,GAAGN,YAAY,CAAC7P,IAAD,CAA9B;EACA,OAAOyP,GAAG,CAACzP,IAAD,EAAQQ,KAAK,GAAG2P,SAAhB,EAA4B,KAA5B,CAAV;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,eAAT,CAAyBxI,IAAzB,EAA+ByI,GAA/B,EAAoCC,GAApC,EAAyC;EACrC;EACA,MAAMC,GAAG,GAAGF,GAAG,GAAGC,GAAN,GAAY,CAAxB,CAFqC,CAGrC;;EACA,MAAME,KAAK,GAAG,CAAC9K,aAAa,CAACkC,IAAD,EAAO,CAAP,EAAU2I,GAAV,CAAb,CAA4BtJ,SAA5B,KAA0CoJ,GAA1C,GAAgD,CAAjD,IAAsD,CAApE;EACA,OAAO,CAACG,KAAD,GAASD,GAAT,GAAe,CAAtB;AACH,C,CACD;;;AACA,SAASE,kBAAT,CAA4B7I,IAA5B,EAAkC8I,IAAlC,EAAwCC,OAAxC,EAAiDN,GAAjD,EAAsDC,GAAtD,EAA2D;EACvD,MAAMM,YAAY,GAAG,CAAC,IAAID,OAAJ,GAAcN,GAAf,IAAsB,CAA3C;EACA,MAAMQ,UAAU,GAAGT,eAAe,CAACxI,IAAD,EAAOyI,GAAP,EAAYC,GAAZ,CAAlC;EACA,MAAMH,SAAS,GAAG,IAAI,KAAKO,IAAI,GAAG,CAAZ,CAAJ,GAAqBE,YAArB,GAAoCC,UAAtD;EACA,IAAIC,OAAJ;EACA,IAAIC,YAAJ;;EACA,IAAIZ,SAAS,IAAI,CAAjB,EAAoB;IAChBW,OAAO,GAAGlJ,IAAI,GAAG,CAAjB;IACAmJ,YAAY,GAAGrE,UAAU,CAACoE,OAAD,CAAV,GAAsBX,SAArC;EACH,CAHD,MAIK,IAAIA,SAAS,GAAGzD,UAAU,CAAC9E,IAAD,CAA1B,EAAkC;IACnCkJ,OAAO,GAAGlJ,IAAI,GAAG,CAAjB;IACAmJ,YAAY,GAAGZ,SAAS,GAAGzD,UAAU,CAAC9E,IAAD,CAArC;EACH,CAHI,MAIA;IACDkJ,OAAO,GAAGlJ,IAAV;IACAmJ,YAAY,GAAGZ,SAAf;EACH;;EACD,OAAO;IACHvI,IAAI,EAAEkJ,OADH;IAEHX,SAAS,EAAEY;EAFR,CAAP;AAIH;;AACD,SAASC,UAAT,CAAoBhR,IAApB,EAA0BqQ,GAA1B,EAA+BC,GAA/B,EAAoCjL,KAApC,EAA2C;EACvC,MAAMwL,UAAU,GAAGT,eAAe,CAAC9J,WAAW,CAACtG,IAAD,EAAOqF,KAAP,CAAZ,EAA2BgL,GAA3B,EAAgCC,GAAhC,CAAlC;EACA,MAAMI,IAAI,GAAGxR,IAAI,CAACE,KAAL,CAAW,CAACyQ,YAAY,CAAC7P,IAAD,EAAOqF,KAAP,CAAZ,GAA4BwL,UAA5B,GAAyC,CAA1C,IAA+C,CAA1D,IAA+D,CAA5E;EACA,IAAII,OAAJ;EACA,IAAIH,OAAJ;;EACA,IAAIJ,IAAI,GAAG,CAAX,EAAc;IACVI,OAAO,GAAGxK,WAAW,CAACtG,IAAD,EAAOqF,KAAP,CAAX,GAA2B,CAArC;IACA4L,OAAO,GAAGP,IAAI,GAAGQ,WAAW,CAACJ,OAAD,EAAUT,GAAV,EAAeC,GAAf,CAA5B;EACH,CAHD,MAIK,IAAII,IAAI,GAAGQ,WAAW,CAAC5K,WAAW,CAACtG,IAAD,EAAOqF,KAAP,CAAZ,EAA2BgL,GAA3B,EAAgCC,GAAhC,CAAtB,EAA4D;IAC7DW,OAAO,GAAGP,IAAI,GAAGQ,WAAW,CAAC5K,WAAW,CAACtG,IAAD,EAAOqF,KAAP,CAAZ,EAA2BgL,GAA3B,EAAgCC,GAAhC,CAA5B;IACAQ,OAAO,GAAGxK,WAAW,CAACtG,IAAD,EAAOqF,KAAP,CAAX,GAA2B,CAArC;EACH,CAHI,MAIA;IACDyL,OAAO,GAAGxK,WAAW,CAACtG,IAAD,EAAOqF,KAAP,CAArB;IACA4L,OAAO,GAAGP,IAAV;EACH;;EACD,OAAO;IACHA,IAAI,EAAEO,OADH;IAEHrJ,IAAI,EAAEkJ;EAFH,CAAP;AAIH;;AACD,SAASI,WAAT,CAAqBtJ,IAArB,EAA2ByI,GAA3B,EAAgCC,GAAhC,EAAqC;EACjC,MAAMO,UAAU,GAAGT,eAAe,CAACxI,IAAD,EAAOyI,GAAP,EAAYC,GAAZ,CAAlC;EACA,MAAMa,cAAc,GAAGf,eAAe,CAACxI,IAAI,GAAG,CAAR,EAAWyI,GAAX,EAAgBC,GAAhB,CAAtC;EACA,OAAO,CAAC5D,UAAU,CAAC9E,IAAD,CAAV,GAAmBiJ,UAAnB,GAAgCM,cAAjC,IAAmD,CAA1D;AACH;;AAED,MAAMC,gBAAgB,GAAG,+BAAzB;AACA,MAAMC,mBAAmB,GAAG,wFAAwFC,KAAxF,CAA8F,GAA9F,CAA5B;AACA,MAAMC,wBAAwB,GAAG,kDAAkDD,KAAlD,CAAwD,GAAxD,CAAjC;AACA,MAAME,qBAAqB,GAAG,2DAA2DF,KAA3D,CAAiE,GAAjE,CAA9B;AACA,MAAMG,0BAA0B,GAAG,8BAA8BH,KAA9B,CAAoC,GAApC,CAAnC;AACA,MAAMI,wBAAwB,GAAG,uBAAuBJ,KAAvB,CAA6B,GAA7B,CAAjC;AACA,MAAMK,qBAAqB,GAAG;EAC1BC,GAAG,EAAE,WADqB;EAE1BC,EAAE,EAAE,QAFsB;EAG1BC,CAAC,EAAE,YAHuB;EAI1BC,EAAE,EAAE,cAJsB;EAK1BC,GAAG,EAAE,qBALqB;EAM1BC,IAAI,EAAE;AANoB,CAA9B;AAQA,MAAMC,cAAc,GAAG,IAAvB;AACA,MAAMC,6BAA6B,GAAG,SAAtC;AACA,MAAMC,uBAAuB,GAAG9I,SAAhC;AACA,MAAM+I,kBAAkB,GAAG/I,SAA3B;;AACA,MAAMgJ,MAAN,CAAa;EACTC,WAAW,CAAC7H,MAAD,EAAS;IAChB,IAAIA,MAAJ,EAAY;MACR,KAAK8H,GAAL,CAAS9H,MAAT;IACH;EACJ;;EACD8H,GAAG,CAAC9H,MAAD,EAAS;IACR,IAAI+H,OAAJ;;IACA,KAAKA,OAAL,IAAgB/H,MAAhB,EAAwB;MACpB;MACA,IAAI,CAACA,MAAM,CAAC7J,cAAP,CAAsB4R,OAAtB,CAAL,EAAqC;QACjC;MACH;;MACD,MAAM7P,IAAI,GAAG8H,MAAM,CAAC+H,OAAD,CAAnB;MACA,MAAMC,GAAG,GAAIvS,UAAU,CAACyC,IAAD,CAAV,GAAmB6P,OAAnB,GAA8B,IAAGA,OAAQ,EAAtD;MACA,KAAKC,GAAL,IAAY9P,IAAZ;IACH;;IACD,KAAK+P,OAAL,GAAejI,MAAf;EACH;;EACDkI,QAAQ,CAACF,GAAD,EAAM1S,IAAN,EAAY6S,GAAZ,EAAiB;IACrB,MAAMtN,MAAM,GAAG,KAAKuN,SAAL,CAAeJ,GAAf,KAAuB,KAAKI,SAAL,CAAe,UAAf,CAAtC;IACA,OAAO3S,UAAU,CAACoF,MAAD,CAAV,GAAqBA,MAAM,CAAC1F,IAAP,CAAY,IAAZ,EAAkBG,IAAlB,EAAwB6S,GAAxB,CAArB,GAAoDtN,MAA3D;EACH;;EACDwN,cAAc,CAACL,GAAD,EAAM;IAChB,MAAM3N,MAAM,GAAG,KAAKiO,eAAL,CAAqBN,GAArB,CAAf;;IACA,MAAMO,WAAW,GAAG,KAAKD,eAAL,CAAqBN,GAAG,CAACQ,WAAJ,EAArB,CAApB;;IACA,IAAInO,MAAM,IAAI,CAACkO,WAAf,EAA4B;MACxB,OAAOlO,MAAP;IACH;;IACD,KAAKiO,eAAL,CAAqBN,GAArB,IAA4BO,WAAW,CAACxN,OAAZ,CAAoB,kBAApB,EAAwC,UAAU0N,GAAV,EAAe;MAC/E,OAAOA,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAP;IACH,CAF2B,CAA5B;IAGA,OAAO,KAAKJ,eAAL,CAAqBN,GAArB,CAAP;EACH;;EACc,IAAXW,WAAW,GAAG;IACd,OAAO,KAAKC,YAAZ;EACH;;EACc,IAAXD,WAAW,CAACF,GAAD,EAAM;IACjB,KAAKG,YAAL,GAAoBH,GAApB;EACH;;EACD3O,OAAO,CAACvF,GAAD,EAAMqF,KAAN,EAAa;IAChB,OAAO,KAAKiP,QAAL,CAAc9N,OAAd,CAAsB,IAAtB,EAA4BxG,GAAG,CAACW,QAAJ,CAAa,EAAb,CAA5B,CAAP;EACH;;EACD4T,QAAQ,CAAClU,GAAD,EAAMyF,MAAN,EAAc;IAClB,OAAOzF,GAAP;EACH;;EACDgH,WAAW,CAACtG,IAAD,EAAOqF,KAAK,GAAG,KAAf,EAAsB;IAC7B,OAAOiB,WAAW,CAACtG,IAAD,EAAOqF,KAAP,CAAlB;EACH;;EACDoO,UAAU,CAACnU,GAAD,EAAM;IACZ,OAAOA,GAAP;EACH;;EACDoU,YAAY,CAACzU,GAAD,EAAM0U,aAAN,EAAqBrU,GAArB,EAA0BsU,QAA1B,EAAoC;IAC5C,MAAMrO,MAAM,GAAG,KAAKsO,aAAL,CAAmBvU,GAAnB,CAAf;IACA,OAAQa,UAAU,CAACoF,MAAD,CAAX,GACHA,MAAM,CAACtG,GAAD,EAAM0U,aAAN,EAAqBrU,GAArB,EAA0BsU,QAA1B,CADH,GAEHrO,MAAM,CAACE,OAAP,CAAe,KAAf,EAAsBxG,GAAG,CAACW,QAAJ,CAAa,EAAb,CAAtB,CAFJ;EAGH;;EACDkU,UAAU,CAACC,IAAD,EAAOxO,MAAP,EAAe;IACrB,MAAMR,MAAM,GAAG,KAAK8O,aAAL,CAAmBE,IAAI,GAAG,CAAP,GAAW,QAAX,GAAsB,MAAzC,CAAf;IACA,OAAO5T,UAAU,CAAC4E,MAAD,CAAV,GAAqBA,MAAM,CAACQ,MAAD,CAA3B,GAAsCR,MAAM,CAACU,OAAP,CAAe,KAAf,EAAsBF,MAAtB,CAA7C;EACH;;EACD2H,MAAM,CAAClN,IAAD,EAAO+E,MAAP,EAAeM,KAAK,GAAG,KAAvB,EAA8B;IAChC,IAAI,CAACrF,IAAL,EAAW;MACP,OAAOO,OAAO,CAAC,KAAKyT,OAAN,CAAP,GACD,KAAKA,OADJ,GAED,KAAKA,OAAL,CAAaC,UAFnB;IAGH;;IACD,IAAI1T,OAAO,CAAC,KAAKyT,OAAN,CAAX,EAA2B;MACvB,OAAO,KAAKA,OAAL,CAAa5M,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAArB,CAAP;IACH;;IACD,MAAMqN,GAAG,GAAG,CAAC,KAAKsB,OAAL,CAAaE,QAAb,IAAyB9C,gBAA1B,EAA4C+C,IAA5C,CAAiDpP,MAAjD,IACN,QADM,GAEN,YAFN;IAGA,OAAO,KAAKiP,OAAL,CAAatB,GAAb,EAAkBtL,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAA1B,CAAP;EACH;;EACD4H,WAAW,CAACjN,IAAD,EAAO+E,MAAP,EAAeM,KAAK,GAAG,KAAvB,EAA8B;IACrC,IAAI,CAACrF,IAAL,EAAW;MACP,OAAOO,OAAO,CAAC,KAAK6T,YAAN,CAAP,GACD,KAAKA,YADJ,GAED,KAAKA,YAAL,CAAkBH,UAFxB;IAGH;;IACD,IAAI1T,OAAO,CAAC,KAAK6T,YAAN,CAAX,EAAgC;MAC5B,OAAO,KAAKA,YAAL,CAAkBhN,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAA1B,CAAP;IACH;;IACD,MAAMqN,GAAG,GAAGtB,gBAAgB,CAAC+C,IAAjB,CAAsBpP,MAAtB,IAAgC,QAAhC,GAA2C,YAAvD;IACA,OAAO,KAAKqP,YAAL,CAAkB1B,GAAlB,EAAuBtL,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAA/B,CAAP;EACH;;EACDiI,WAAW,CAAC+G,SAAD,EAAYtP,MAAZ,EAAoBuP,MAApB,EAA4B;IACnC,IAAItU,IAAJ;IACA,IAAIyJ,KAAJ;;IACA,IAAI,KAAK8K,iBAAT,EAA4B;MACxB,OAAO,KAAKC,sBAAL,CAA4BH,SAA5B,EAAuCtP,MAAvC,EAA+CuP,MAA/C,CAAP;IACH;;IACD,IAAI,CAAC,KAAKG,YAAV,EAAwB;MACpB,KAAKA,YAAL,GAAoB,EAApB;MACA,KAAKC,gBAAL,GAAwB,EAAxB;MACA,KAAKC,iBAAL,GAAyB,EAAzB;IACH,CAVkC,CAWnC;IACA;IACA;;;IACA,IAAIxP,CAAJ;;IACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;MACrB;MACAnF,IAAI,GAAG,IAAIP,IAAJ,CAASA,IAAI,CAACqG,GAAL,CAAS,IAAT,EAAeX,CAAf,CAAT,CAAP;;MACA,IAAImP,MAAM,IAAI,CAAC,KAAKI,gBAAL,CAAsBvP,CAAtB,CAAf,EAAyC;QACrC,MAAM6O,OAAO,GAAG,KAAK9G,MAAL,CAAYlN,IAAZ,EAAkB,EAAlB,EAAsB,IAAtB,EAA4ByF,OAA5B,CAAoC,GAApC,EAAyC,EAAzC,CAAhB;;QACA,MAAMmP,YAAY,GAAG,KAAK3H,WAAL,CAAiBjN,IAAjB,EAAuB,EAAvB,EAA2B,IAA3B,EAAiCyF,OAAjC,CAAyC,GAAzC,EAA8C,EAA9C,CAArB;;QACA,KAAKiP,gBAAL,CAAsBvP,CAAtB,IAA2B,IAAI2E,MAAJ,CAAY,IAAGkK,OAAQ,GAAvB,EAA2B,GAA3B,CAA3B;QACA,KAAKW,iBAAL,CAAuBxP,CAAvB,IAA4B,IAAI2E,MAAJ,CAAY,IAAG8K,YAAa,GAA5B,EAAgC,GAAhC,CAA5B;MACH;;MACD,IAAI,CAACN,MAAD,IAAW,CAAC,KAAKG,YAAL,CAAkBtP,CAAlB,CAAhB,EAAsC;QAClCsE,KAAK,GAAI,IAAG,KAAKyD,MAAL,CAAYlN,IAAZ,EAAkB,EAAlB,EAAsB,IAAtB,CAA4B,KAAI,KAAKiN,WAAL,CAAiBjN,IAAjB,EAAuB,EAAvB,EAA2B,IAA3B,CAAiC,EAA7E;QACA,KAAKyU,YAAL,CAAkBtP,CAAlB,IAAuB,IAAI2E,MAAJ,CAAWL,KAAK,CAAChE,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAX,EAAmC,GAAnC,CAAvB;MACH,CAZoB,CAarB;;;MACA,IAAI6O,MAAM,IAAIvP,MAAM,KAAK,MAArB,IAA+B,KAAK2P,gBAAL,CAAsBvP,CAAtB,EAAyBgP,IAAzB,CAA8BE,SAA9B,CAAnC,EAA6E;QACzE,OAAOlP,CAAP;MACH;;MACD,IAAImP,MAAM,IAAIvP,MAAM,KAAK,KAArB,IAA8B,KAAK4P,iBAAL,CAAuBxP,CAAvB,EAA0BgP,IAA1B,CAA+BE,SAA/B,CAAlC,EAA6E;QACzE,OAAOlP,CAAP;MACH;;MACD,IAAI,CAACmP,MAAD,IAAW,KAAKG,YAAL,CAAkBtP,CAAlB,EAAqBgP,IAArB,CAA0BE,SAA1B,CAAf,EAAqD;QACjD,OAAOlP,CAAP;MACH;IACJ;EACJ;;EACDiI,WAAW,CAACzD,QAAD,EAAW;IAClB,IAAI,KAAK4K,iBAAT,EAA4B;MACxB,IAAI,CAAC7T,UAAU,CAAC,IAAD,EAAO,cAAP,CAAf,EAAuC;QACnC,KAAKmU,kBAAL;MACH;;MACD,IAAIlL,QAAJ,EAAc;QACV,OAAO,KAAKmL,kBAAZ;MACH;;MACD,OAAO,KAAKC,YAAZ;IACH;;IACD,IAAI,CAACrU,UAAU,CAAC,IAAD,EAAO,cAAP,CAAf,EAAuC;MACnC,KAAKqU,YAAL,GAAoB1C,kBAApB;IACH;;IACD,OAAO,KAAKyC,kBAAL,IAA2BnL,QAA3B,GACH,KAAKmL,kBADF,GACuB,KAAKC,YADnC;EAEH;;EACD5H,gBAAgB,CAACxD,QAAD,EAAW;IACvB,IAAI,KAAK4K,iBAAT,EAA4B;MACxB,IAAI,CAAC7T,UAAU,CAAC,IAAD,EAAO,cAAP,CAAf,EAAuC;QACnC,KAAKmU,kBAAL;MACH;;MACD,IAAIlL,QAAJ,EAAc;QACV,OAAO,KAAKqL,uBAAZ;MACH;;MACD,OAAO,KAAKC,iBAAZ;IACH;;IACD,IAAI,CAACvU,UAAU,CAAC,IAAD,EAAO,mBAAP,CAAf,EAA4C;MACxC,KAAKuU,iBAAL,GAAyB7C,uBAAzB;IACH;;IACD,OAAO,KAAK4C,uBAAL,IAAgCrL,QAAhC,GACH,KAAKqL,uBADF,GAC4B,KAAKC,iBADxC;EAEH;EACD;;;EACAvE,IAAI,CAAC1Q,IAAD,EAAOqF,KAAP,EAAc;IACd,OAAO2L,UAAU,CAAChR,IAAD,EAAO,KAAKkV,KAAL,CAAW7E,GAAlB,EAAuB,KAAK6E,KAAL,CAAW5E,GAAlC,EAAuCjL,KAAvC,CAAV,CAAwDqL,IAA/D;EACH;;EACD3I,cAAc,GAAG;IACb,OAAO,KAAKmN,KAAL,CAAW7E,GAAlB;EACH;;EACD8E,cAAc,GAAG;IACb,OAAO,KAAKD,KAAL,CAAW5E,GAAlB;EACH;;EACD8E,QAAQ,CAACpV,IAAD,EAAO+E,MAAP,EAAeM,KAAf,EAAsB;IAC1B,IAAI,CAACrF,IAAL,EAAW;MACP,OAAOO,OAAO,CAAC,KAAK8U,SAAN,CAAP,GACD,KAAKA,SADJ,GAED,KAAKA,SAAL,CAAepB,UAFrB;IAGH;;IACD,IAAI1T,OAAO,CAAC,KAAK8U,SAAN,CAAX,EAA6B;MACzB,OAAO,KAAKA,SAAL,CAAerO,MAAM,CAAChH,IAAD,EAAOqF,KAAP,CAArB,CAAP;IACH;;IACD,MAAMiQ,IAAI,GAAG,KAAKD,SAAL,CAAenB,QAAf,CAAwBC,IAAxB,CAA6BpP,MAA7B,IACP,QADO,GAEP,YAFN;;IAGA,OAAO,KAAKsQ,SAAL,CAAeC,IAAf,EAAqBtO,MAAM,CAAChH,IAAD,EAAOqF,KAAP,CAA3B,CAAP;EACH;;EACDkQ,WAAW,CAACvV,IAAD,EAAO+E,MAAP,EAAeM,KAAf,EAAsB;IAC7B,OAAOrF,IAAI,GAAG,KAAKwV,YAAL,CAAkBxO,MAAM,CAAChH,IAAD,EAAOqF,KAAP,CAAxB,CAAH,GAA4C,KAAKmQ,YAA5D;EACH;;EACDC,aAAa,CAACzV,IAAD,EAAO+E,MAAP,EAAeM,KAAf,EAAsB;IAC/B,OAAOrF,IAAI,GAAG,KAAK0V,cAAL,CAAoB1O,MAAM,CAAChH,IAAD,EAAOqF,KAAP,CAA1B,CAAH,GAA8C,KAAKqQ,cAA9D;EACH,CA7LQ,CA8LT;;;EACAC,aAAa,CAACC,WAAD,EAAc7Q,MAAd,EAAsBuP,MAAtB,EAA8B;IACvC,IAAInP,CAAJ;IACA,IAAIsE,KAAJ;;IACA,IAAI,KAAKoM,mBAAT,EAA8B;MAC1B,OAAO,KAAKC,qBAAL,CAA2BF,WAA3B,EAAwC7Q,MAAxC,EAAgDuP,MAAhD,CAAP;IACH;;IACD,IAAI,CAAC,KAAKyB,cAAV,EAA0B;MACtB,KAAKA,cAAL,GAAsB,EAAtB;MACA,KAAKC,iBAAL,GAAyB,EAAzB;MACA,KAAKC,mBAAL,GAA2B,EAA3B;MACA,KAAKC,kBAAL,GAA0B,EAA1B;IACH;;IACD,KAAK/Q,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;MACpB;MACA;MACA,MAAMnF,IAAI,GAAGmW,YAAY,CAAC,IAAI1W,IAAJ,CAASA,IAAI,CAACqG,GAAL,CAAS,IAAT,EAAe,CAAf,CAAT,CAAD,EAA8BX,CAA9B,EAAiC,IAAjC,EAAuC,IAAvC,CAAzB;;MACA,IAAImP,MAAM,IAAI,CAAC,KAAK4B,kBAAL,CAAwB/Q,CAAxB,CAAf,EAA2C;QACvC,KAAK+Q,kBAAL,CAAwB/Q,CAAxB,IAA6B,IAAI2E,MAAJ,CAAY,IAAG,KAAKsL,QAAL,CAAcpV,IAAd,EAAoB,EAApB,EAAwB,IAAxB,EAA8ByF,OAA9B,CAAsC,GAAtC,EAA2C,KAA3C,CAAkD,GAAjE,EAAqE,GAArE,CAA7B;QACA,KAAKwQ,mBAAL,CAAyB9Q,CAAzB,IAA8B,IAAI2E,MAAJ,CAAY,IAAG,KAAK2L,aAAL,CAAmBzV,IAAnB,EAAyB,EAAzB,EAA6B,IAA7B,EAAmCyF,OAAnC,CAA2C,GAA3C,EAAgD,KAAhD,CAAuD,GAAtE,EAA0E,GAA1E,CAA9B;QACA,KAAKuQ,iBAAL,CAAuB7Q,CAAvB,IAA4B,IAAI2E,MAAJ,CAAY,IAAG,KAAKyL,WAAL,CAAiBvV,IAAjB,EAAuB,EAAvB,EAA2B,IAA3B,EAAiCyF,OAAjC,CAAyC,GAAzC,EAA8C,KAA9C,CAAqD,GAApE,EAAwE,GAAxE,CAA5B;MACH;;MACD,IAAI,CAAC,KAAKsQ,cAAL,CAAoB5Q,CAApB,CAAL,EAA6B;QACzBsE,KAAK,GAAI,IAAG,KAAK2L,QAAL,CAAcpV,IAAd,EAAoB,EAApB,EAAwB,IAAxB,CAA8B,KAAI,KAAKyV,aAAL,CAAmBzV,IAAnB,EAAyB,EAAzB,EAA6B,IAA7B,CAAmC,KAAI,KAAKuV,WAAL,CAAiBvV,IAAjB,EAAuB,EAAvB,EAA2B,IAA3B,CAAiC,EAAtH;QACA,KAAK+V,cAAL,CAAoB5Q,CAApB,IAAyB,IAAI2E,MAAJ,CAAWL,KAAK,CAAChE,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAX,EAAmC,GAAnC,CAAzB;MACH;;MACD,IAAI,CAAClF,OAAO,CAAC,KAAK2V,kBAAN,CAAR,IACG,CAAC3V,OAAO,CAAC,KAAK0V,mBAAN,CADX,IAEG,CAAC1V,OAAO,CAAC,KAAKyV,iBAAN,CAFX,IAGG,CAACzV,OAAO,CAAC,KAAKwV,cAAN,CAHf,EAGsC;QAClC;MACH,CAlBmB,CAmBpB;;;MACA,IAAIzB,MAAM,IAAIvP,MAAM,KAAK,MAArB,IAA+B,KAAKmR,kBAAL,CAAwB/Q,CAAxB,EAA2BgP,IAA3B,CAAgCyB,WAAhC,CAAnC,EAAiF;QAC7E,OAAOzQ,CAAP;MACH,CAFD,MAGK,IAAImP,MAAM,IAAIvP,MAAM,KAAK,KAArB,IAA8B,KAAKkR,mBAAL,CAAyB9Q,CAAzB,EAA4BgP,IAA5B,CAAiCyB,WAAjC,CAAlC,EAAiF;QAClF,OAAOzQ,CAAP;MACH,CAFI,MAGA,IAAImP,MAAM,IAAIvP,MAAM,KAAK,IAArB,IAA6B,KAAKiR,iBAAL,CAAuB7Q,CAAvB,EAA0BgP,IAA1B,CAA+ByB,WAA/B,CAAjC,EAA8E;QAC/E,OAAOzQ,CAAP;MACH,CAFI,MAGA,IAAI,CAACmP,MAAD,IAAW,KAAKyB,cAAL,CAAoB5Q,CAApB,EAAuBgP,IAAvB,CAA4ByB,WAA5B,CAAf,EAAyD;QAC1D,OAAOzQ,CAAP;MACH;IACJ;EACJ,CA5OQ,CA6OT;;;EACAiR,aAAa,CAACzM,QAAD,EAAW;IACpB,IAAI,KAAKkM,mBAAT,EAA8B;MAC1B,IAAI,CAACnV,UAAU,CAAC,IAAD,EAAO,gBAAP,CAAf,EAAyC;QACrC,KAAK2V,oBAAL;MACH;;MACD,IAAI1M,QAAJ,EAAc;QACV,OAAO,KAAK2M,oBAAZ;MACH,CAFD,MAGK;QACD,OAAO,KAAKC,cAAZ;MACH;IACJ,CAVD,MAWK;MACD,IAAI,CAAC7V,UAAU,CAAC,IAAD,EAAO,gBAAP,CAAf,EAAyC;QACrC,KAAK6V,cAAL,GAAsBjN,SAAtB;MACH;;MACD,OAAO,KAAKgN,oBAAL,IAA6B3M,QAA7B,GACH,KAAK2M,oBADF,GACyB,KAAKC,cADrC;IAEH;EACJ,CAjQQ,CAkQT;EACA;;;EACAC,kBAAkB,CAAC7M,QAAD,EAAW;IACzB,IAAI,KAAKkM,mBAAT,EAA8B;MAC1B,IAAI,CAACnV,UAAU,CAAC,IAAD,EAAO,gBAAP,CAAf,EAAyC;QACrC,KAAK2V,oBAAL;MACH;;MACD,IAAI1M,QAAJ,EAAc;QACV,OAAO,KAAK8M,yBAAZ;MACH,CAFD,MAGK;QACD,OAAO,KAAKC,mBAAZ;MACH;IACJ,CAVD,MAWK;MACD,IAAI,CAAChW,UAAU,CAAC,IAAD,EAAO,qBAAP,CAAf,EAA8C;QAC1C,KAAKgW,mBAAL,GAA2BpN,SAA3B;MACH;;MACD,OAAO,KAAKmN,yBAAL,IAAkC9M,QAAlC,GACH,KAAK8M,yBADF,GAC8B,KAAKC,mBAD1C;IAEH;EACJ;;EACDC,gBAAgB,CAAChN,QAAD,EAAW;IACvB,IAAI,KAAKkM,mBAAT,EAA8B;MAC1B,IAAI,CAACnV,UAAU,CAAC,IAAD,EAAO,gBAAP,CAAf,EAAyC;QACrC,KAAK2V,oBAAL;MACH;;MACD,IAAI1M,QAAJ,EAAc;QACV,OAAO,KAAKiN,uBAAZ;MACH,CAFD,MAGK;QACD,OAAO,KAAKC,iBAAZ;MACH;IACJ,CAVD,MAWK;MACD,IAAI,CAACnW,UAAU,CAAC,IAAD,EAAO,mBAAP,CAAf,EAA4C;QACxC,KAAKmW,iBAAL,GAAyBvN,SAAzB;MACH;;MACD,OAAO,KAAKsN,uBAAL,IAAgCjN,QAAhC,GACH,KAAKiN,uBADF,GAC4B,KAAKC,iBADxC;IAEH;EACJ;;EACDC,IAAI,CAACtW,KAAD,EAAQ;IACR;IACA;IACA,OAAOA,KAAK,CAAC2B,WAAN,GAAoB4U,MAApB,CAA2B,CAA3B,MAAkC,GAAzC;EACH;;EACD9K,QAAQ,CAAC+K,KAAD,EAAQC,OAAR,EAAiBC,OAAjB,EAA0B;IAC9B,IAAIF,KAAK,GAAG,EAAZ,EAAgB;MACZ,OAAOE,OAAO,GAAG,IAAH,GAAU,IAAxB;IACH;;IACD,OAAOA,OAAO,GAAG,IAAH,GAAU,IAAxB;EACH;;EACDC,cAAc,CAACzE,GAAD,EAAM;IAChB,KAAKM,eAAL,GAAuB,KAAKA,eAAL,GAAuB,KAAKA,eAA5B,GAA8CrB,qBAArE;IACA,MAAM5M,MAAM,GAAG,KAAKiO,eAAL,CAAqBN,GAArB,CAAf;;IACA,MAAMO,WAAW,GAAG,KAAKD,eAAL,CAAqBN,GAAG,CAACQ,WAAJ,EAArB,CAApB;;IACA,IAAInO,MAAM,IAAI,CAACkO,WAAf,EAA4B;MACxB,OAAOlO,MAAP;IACH;;IACD,KAAKiO,eAAL,CAAqBN,GAArB,IAA4BO,WAAW,CAACxN,OAAZ,CAAoB,kBAApB,EAAyC0N,GAAD,IAAS;MACzE,OAAOA,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAP;IACH,CAF2B,CAA5B;IAGA,OAAO,KAAKJ,eAAL,CAAqBN,GAArB,CAAP;EACH;;EACD8B,sBAAsB,CAACH,SAAD,EAAYtP,MAAZ,EAAoBuP,MAApB,EAA4B;IAC9C,MAAM8C,GAAG,GAAG/C,SAAS,CAACgD,iBAAV,EAAZ;IACA,IAAIlS,CAAJ;IACA,IAAImS,EAAJ;IACA,IAAIC,GAAJ;;IACA,IAAI,CAAC,KAAK9C,YAAV,EAAwB;MACpB;MACA,KAAKA,YAAL,GAAoB,EAApB;MACA,KAAKC,gBAAL,GAAwB,EAAxB;MACA,KAAKC,iBAAL,GAAyB,EAAzB;;MACA,KAAKxP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoB,EAAEA,CAAtB,EAAyB;QACrBoS,GAAG,GAAG,IAAI9X,IAAJ,CAAS,IAAT,EAAe0F,CAAf,CAAN;QACA,KAAKwP,iBAAL,CAAuBxP,CAAvB,IAA4B,KAAK8H,WAAL,CAAiBsK,GAAjB,EAAsB,EAAtB,EAA0BF,iBAA1B,EAA5B;QACA,KAAK3C,gBAAL,CAAsBvP,CAAtB,IAA2B,KAAK+H,MAAL,CAAYqK,GAAZ,EAAiB,EAAjB,EAAqBF,iBAArB,EAA3B;MACH;IACJ;;IACD,IAAI/C,MAAJ,EAAY;MACR,IAAIvP,MAAM,KAAK,KAAf,EAAsB;QAClBuS,EAAE,GAAG,KAAK3C,iBAAL,CAAuB6C,OAAvB,CAA+BJ,GAA/B,CAAL;QACA,OAAOE,EAAE,KAAK,CAAC,CAAR,GAAYA,EAAZ,GAAiB,IAAxB;MACH;;MACDA,EAAE,GAAG,KAAK5C,gBAAL,CAAsB8C,OAAtB,CAA8BJ,GAA9B,CAAL;MACA,OAAOE,EAAE,KAAK,CAAC,CAAR,GAAYA,EAAZ,GAAiB,IAAxB;IACH;;IACD,IAAIvS,MAAM,KAAK,KAAf,EAAsB;MAClBuS,EAAE,GAAG,KAAK3C,iBAAL,CAAuB6C,OAAvB,CAA+BJ,GAA/B,CAAL;;MACA,IAAIE,EAAE,KAAK,CAAC,CAAZ,EAAe;QACX,OAAOA,EAAP;MACH;;MACDA,EAAE,GAAG,KAAK5C,gBAAL,CAAsB8C,OAAtB,CAA8BJ,GAA9B,CAAL;MACA,OAAOE,EAAE,KAAK,CAAC,CAAR,GAAYA,EAAZ,GAAiB,IAAxB;IACH;;IACDA,EAAE,GAAG,KAAK5C,gBAAL,CAAsB8C,OAAtB,CAA8BJ,GAA9B,CAAL;;IACA,IAAIE,EAAE,KAAK,CAAC,CAAZ,EAAe;MACX,OAAOA,EAAP;IACH;;IACDA,EAAE,GAAG,KAAK3C,iBAAL,CAAuB6C,OAAvB,CAA+BJ,GAA/B,CAAL;IACA,OAAOE,EAAE,KAAK,CAAC,CAAR,GAAYA,EAAZ,GAAiB,IAAxB;EACH;;EACDxB,qBAAqB,CAACF,WAAD,EAAc7Q,MAAd,EAAsBuP,MAAtB,EAA8B;IAC/C,IAAIgD,EAAJ;IACA,MAAMF,GAAG,GAAGxB,WAAW,CAACyB,iBAAZ,EAAZ;;IACA,IAAI,CAAC,KAAKtB,cAAV,EAA0B;MACtB,KAAKA,cAAL,GAAsB,EAAtB;MACA,KAAKE,mBAAL,GAA2B,EAA3B;MACA,KAAKD,iBAAL,GAAyB,EAAzB;MACA,IAAI7Q,CAAJ;;MACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmB,EAAEA,CAArB,EAAwB;QACpB,MAAMnF,IAAI,GAAGmW,YAAY,CAAC,IAAI1W,IAAJ,CAASA,IAAI,CAACqG,GAAL,CAAS,IAAT,EAAe,CAAf,CAAT,CAAD,EAA8BX,CAA9B,EAAiC,IAAjC,EAAuC,IAAvC,CAAzB;QACA,KAAK6Q,iBAAL,CAAuB7Q,CAAvB,IAA4B,KAAKoQ,WAAL,CAAiBvV,IAAjB,EAAuBqX,iBAAvB,EAA5B;QACA,KAAKpB,mBAAL,CAAyB9Q,CAAzB,IAA8B,KAAKsQ,aAAL,CAAmBzV,IAAnB,EAAyBqX,iBAAzB,EAA9B;QACA,KAAKtB,cAAL,CAAoB5Q,CAApB,IAAyB,KAAKiQ,QAAL,CAAcpV,IAAd,EAAoB,EAApB,EAAwBqX,iBAAxB,EAAzB;MACH;IACJ;;IACD,IAAI,CAAC9W,OAAO,CAAC,KAAKwV,cAAN,CAAR,IACG,CAACxV,OAAO,CAAC,KAAK0V,mBAAN,CADX,IAEG,CAAC1V,OAAO,CAAC,KAAKyV,iBAAN,CAFf,EAEyC;MACrC;IACH;;IACD,IAAI1B,MAAJ,EAAY;MACR,IAAIvP,MAAM,KAAK,MAAf,EAAuB;QACnBuS,EAAE,GAAG,KAAKvB,cAAL,CAAoByB,OAApB,CAA4BJ,GAA5B,CAAL;QACA,OAAOE,EAAE,KAAK,CAAC,CAAR,GAAYA,EAAZ,GAAiB,IAAxB;MACH,CAHD,MAIK,IAAIvS,MAAM,KAAK,KAAf,EAAsB;QACvBuS,EAAE,GAAG,KAAKrB,mBAAL,CAAyBuB,OAAzB,CAAiCJ,GAAjC,CAAL;QACA,OAAOE,EAAE,KAAK,CAAC,CAAR,GAAYA,EAAZ,GAAiB,IAAxB;MACH,CAHI,MAIA;QACDA,EAAE,GAAG,KAAKtB,iBAAL,CAAuBwB,OAAvB,CAA+BJ,GAA/B,CAAL;QACA,OAAOE,EAAE,KAAK,CAAC,CAAR,GAAYA,EAAZ,GAAiB,IAAxB;MACH;IACJ,CAbD,MAcK;MACD,IAAIvS,MAAM,KAAK,MAAf,EAAuB;QACnBuS,EAAE,GAAG,KAAKvB,cAAL,CAAoByB,OAApB,CAA4BJ,GAA5B,CAAL;;QACA,IAAIE,EAAE,KAAK,CAAC,CAAZ,EAAe;UACX,OAAOA,EAAP;QACH;;QACDA,EAAE,GAAG,KAAKrB,mBAAL,CAAyBuB,OAAzB,CAAiCJ,GAAjC,CAAL;;QACA,IAAIE,EAAE,KAAK,CAAC,CAAZ,EAAe;UACX,OAAOA,EAAP;QACH;;QACDA,EAAE,GAAG,KAAKtB,iBAAL,CAAuBwB,OAAvB,CAA+BJ,GAA/B,CAAL;QACA,OAAOE,EAAE,KAAK,CAAC,CAAR,GAAYA,EAAZ,GAAiB,IAAxB;MACH,CAXD,MAYK,IAAIvS,MAAM,KAAK,KAAf,EAAsB;QACvBuS,EAAE,GAAG,KAAKrB,mBAAL,CAAyBuB,OAAzB,CAAiCJ,GAAjC,CAAL;;QACA,IAAIE,EAAE,KAAK,CAAC,CAAZ,EAAe;UACX,OAAOA,EAAP;QACH;;QACDA,EAAE,GAAG,KAAKvB,cAAL,CAAoByB,OAApB,CAA4BJ,GAA5B,CAAL;;QACA,IAAIE,EAAE,KAAK,CAAC,CAAZ,EAAe;UACX,OAAOA,EAAP;QACH;;QACDA,EAAE,GAAG,KAAKtB,iBAAL,CAAuBwB,OAAvB,CAA+BJ,GAA/B,CAAL;QACA,OAAOE,EAAE,KAAK,CAAC,CAAR,GAAYA,EAAZ,GAAiB,IAAxB;MACH,CAXI,MAYA;QACDA,EAAE,GAAG,KAAKtB,iBAAL,CAAuBwB,OAAvB,CAA+BJ,GAA/B,CAAL;;QACA,IAAIE,EAAE,KAAK,CAAC,CAAZ,EAAe;UACX,OAAOA,EAAP;QACH;;QACDA,EAAE,GAAG,KAAKvB,cAAL,CAAoByB,OAApB,CAA4BJ,GAA5B,CAAL;;QACA,IAAIE,EAAE,KAAK,CAAC,CAAZ,EAAe;UACX,OAAOA,EAAP;QACH;;QACDA,EAAE,GAAG,KAAKrB,mBAAL,CAAyBuB,OAAzB,CAAiCJ,GAAjC,CAAL;QACA,OAAOE,EAAE,KAAK,CAAC,CAAR,GAAYA,EAAZ,GAAiB,IAAxB;MACH;IACJ;EACJ;;EACDzC,kBAAkB,GAAG;IACjB,MAAM4C,WAAW,GAAG,EAApB;IACA,MAAMC,UAAU,GAAG,EAAnB;IACA,MAAMC,WAAW,GAAG,EAApB;IACA,IAAI3X,IAAJ;IACA,IAAImF,CAAJ;;IACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;MACrB;MACAnF,IAAI,GAAG,IAAIP,IAAJ,CAAS,IAAT,EAAe0F,CAAf,CAAP;MACAsS,WAAW,CAACG,IAAZ,CAAiB,KAAK3K,WAAL,CAAiBjN,IAAjB,EAAuB,EAAvB,CAAjB;MACA0X,UAAU,CAACE,IAAX,CAAgB,KAAK1K,MAAL,CAAYlN,IAAZ,EAAkB,EAAlB,CAAhB;MACA2X,WAAW,CAACC,IAAZ,CAAiB,KAAK1K,MAAL,CAAYlN,IAAZ,EAAkB,EAAlB,CAAjB;MACA2X,WAAW,CAACC,IAAZ,CAAiB,KAAK3K,WAAL,CAAiBjN,IAAjB,EAAuB,EAAvB,CAAjB;IACH,CAbgB,CAcjB;IACA;;;IACAyX,WAAW,CAACI,IAAZ,CAAiBC,SAAjB;IACAJ,UAAU,CAACG,IAAX,CAAgBC,SAAhB;IACAH,WAAW,CAACE,IAAZ,CAAiBC,SAAjB;;IACA,KAAK3S,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;MACrBsS,WAAW,CAACtS,CAAD,CAAX,GAAiB6E,WAAW,CAACyN,WAAW,CAACtS,CAAD,CAAZ,CAA5B;MACAuS,UAAU,CAACvS,CAAD,CAAV,GAAgB6E,WAAW,CAAC0N,UAAU,CAACvS,CAAD,CAAX,CAA3B;IACH;;IACD,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;MACrBwS,WAAW,CAACxS,CAAD,CAAX,GAAiB6E,WAAW,CAAC2N,WAAW,CAACxS,CAAD,CAAZ,CAA5B;IACH;;IACD,KAAK4P,YAAL,GAAoB,IAAIjL,MAAJ,CAAY,KAAI6N,WAAW,CAACI,IAAZ,CAAiB,GAAjB,CAAsB,GAAtC,EAA0C,GAA1C,CAApB;IACA,KAAK9C,iBAAL,GAAyB,KAAKF,YAA9B;IACA,KAAKD,kBAAL,GAA0B,IAAIhL,MAAJ,CAAY,KAAI4N,UAAU,CAACK,IAAX,CAAgB,GAAhB,CAAqB,GAArC,EAAyC,GAAzC,CAA1B;IACA,KAAK/C,uBAAL,GAA+B,IAAIlL,MAAJ,CAAY,KAAI2N,WAAW,CAACM,IAAZ,CAAiB,GAAjB,CAAsB,GAAtC,EAA0C,GAA1C,CAA/B;EACH;;EACD1B,oBAAoB,GAAG;IACnB,MAAM2B,SAAS,GAAG,EAAlB;IACA,MAAMP,WAAW,GAAG,EAApB;IACA,MAAMC,UAAU,GAAG,EAAnB;IACA,MAAMC,WAAW,GAAG,EAApB;IACA,IAAIxS,CAAJ;;IACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;MACpB;MACA;MACA,MAAMnF,IAAI,GAAGmW,YAAY,CAAC,IAAI1W,IAAJ,CAASA,IAAI,CAACqG,GAAL,CAAS,IAAT,EAAe,CAAf,CAAT,CAAD,EAA8BX,CAA9B,EAAiC,IAAjC,EAAuC,IAAvC,CAAzB;MACA,MAAM8S,IAAI,GAAG,KAAK1C,WAAL,CAAiBvV,IAAjB,CAAb;MACA,MAAMkY,MAAM,GAAG,KAAKzC,aAAL,CAAmBzV,IAAnB,CAAf;MACA,MAAMmY,KAAK,GAAG,KAAK/C,QAAL,CAAcpV,IAAd,CAAd;MACAgY,SAAS,CAACJ,IAAV,CAAeK,IAAf;MACAR,WAAW,CAACG,IAAZ,CAAiBM,MAAjB;MACAR,UAAU,CAACE,IAAX,CAAgBO,KAAhB;MACAR,WAAW,CAACC,IAAZ,CAAiBK,IAAjB;MACAN,WAAW,CAACC,IAAZ,CAAiBM,MAAjB;MACAP,WAAW,CAACC,IAAZ,CAAiBO,KAAjB;IACH,CAnBkB,CAoBnB;IACA;;;IACAH,SAAS,CAACH,IAAV,CAAeC,SAAf;IACAL,WAAW,CAACI,IAAZ,CAAiBC,SAAjB;IACAJ,UAAU,CAACG,IAAX,CAAgBC,SAAhB;IACAH,WAAW,CAACE,IAAZ,CAAiBC,SAAjB;;IACA,KAAK3S,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;MACpBsS,WAAW,CAACtS,CAAD,CAAX,GAAiB6E,WAAW,CAACyN,WAAW,CAACtS,CAAD,CAAZ,CAA5B;MACAuS,UAAU,CAACvS,CAAD,CAAV,GAAgB6E,WAAW,CAAC0N,UAAU,CAACvS,CAAD,CAAX,CAA3B;MACAwS,WAAW,CAACxS,CAAD,CAAX,GAAiB6E,WAAW,CAAC2N,WAAW,CAACxS,CAAD,CAAZ,CAA5B;IACH;;IACD,KAAKoR,cAAL,GAAsB,IAAIzM,MAAJ,CAAY,KAAI6N,WAAW,CAACI,IAAZ,CAAiB,GAAjB,CAAsB,GAAtC,EAA0C,GAA1C,CAAtB;IACA,KAAKrB,mBAAL,GAA2B,KAAKH,cAAhC;IACA,KAAKM,iBAAL,GAAyB,KAAKN,cAA9B;IACA,KAAKD,oBAAL,GAA4B,IAAIxM,MAAJ,CAAY,KAAI4N,UAAU,CAACK,IAAX,CAAgB,GAAhB,CAAqB,GAArC,EAAyC,GAAzC,CAA5B;IACA,KAAKtB,yBAAL,GAAiC,IAAI3M,MAAJ,CAAY,KAAI2N,WAAW,CAACM,IAAZ,CAAiB,GAAjB,CAAsB,GAAtC,EAA0C,GAA1C,CAAjC;IACA,KAAKnB,uBAAL,GAA+B,IAAI9M,MAAJ,CAAY,KAAIkO,SAAS,CAACD,IAAV,CAAe,GAAf,CAAoB,GAApC,EAAwC,GAAxC,CAA/B;EACH;;AAvfQ;;AAyfb,SAASD,SAAT,CAAmBnX,CAAnB,EAAsBC,CAAtB,EAAyB;EACrB,OAAOA,CAAC,CAACM,MAAF,GAAWP,CAAC,CAACO,MAApB;AACH;;AAED,MAAMkX,eAAe,GAAG;EACpBC,OAAO,EAAE,eADW;EAEpBC,OAAO,EAAE,kBAFW;EAGpBC,QAAQ,EAAE,cAHU;EAIpBC,OAAO,EAAE,mBAJW;EAKpBC,QAAQ,EAAE,qBALU;EAMpBC,QAAQ,EAAE;AANU,CAAxB;AASA,MAAMC,kBAAkB,GAAG,cAA3B;AACA,MAAMC,iBAAiB,GAAG;EACtBvI,GAAG,EAAE,CADiB;EAEtBC,GAAG,EAAE,CAFiB,CAEf;;AAFe,CAA1B;AAIA,MAAMuI,0BAA0B,GAAG,eAAnC;AACA,MAAMC,mBAAmB,GAAG;EACxBC,MAAM,EAAE,OADgB;EAExBC,IAAI,EAAE,QAFkB;EAGxB5S,CAAC,EAAE,eAHqB;EAIxB6S,EAAE,EAAE,YAJoB;EAKxBrT,CAAC,EAAE,UALqB;EAMxBsT,EAAE,EAAE,YANoB;EAOxBhT,CAAC,EAAE,SAPqB;EAQxBiT,EAAE,EAAE,UARoB;EASxBtT,CAAC,EAAE,OATqB;EAUxBuT,EAAE,EAAE,SAVoB;EAWxBjT,CAAC,EAAE,SAXqB;EAYxBkT,EAAE,EAAE,WAZoB;EAaxB1T,CAAC,EAAE,QAbqB;EAcxB2T,EAAE,EAAE;AAdoB,CAA5B;AAgBA,MAAMC,UAAU,GAAG;EACf3G,QAAQ,EAAEwF,eADK;EAEfrF,cAAc,EAAEpB,qBAFD;EAGf0B,WAAW,EAAEsF,kBAHE;EAIfnU,OAAO,EAAE0N,cAJM;EAKfsH,sBAAsB,EAAErH,6BALT;EAMfuB,YAAY,EAAEoF,mBANC;EAOf5L,MAAM,EAAEmE,mBAPO;EAQfpE,WAAW,EAAEsE,wBARE;EASfb,IAAI,EAAEkI,iBATS;EAUfxD,QAAQ,EAAE5D,qBAVK;EAWf+D,WAAW,EAAE7D,wBAXE;EAYf+D,aAAa,EAAEhE,0BAZA;EAafgI,aAAa,EAAEZ;AAbA,CAAnB,C,CAgBA;;AACA,SAASa,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,WAAvC,EAAoD;EAChD,MAAMC,GAAG,GAAG5a,IAAI,CAAC0O,GAAL,CAAS+L,MAAM,CAACzY,MAAhB,EAAwB0Y,MAAM,CAAC1Y,MAA/B,CAAZ;EACA,MAAM6Y,UAAU,GAAG7a,IAAI,CAACwE,GAAL,CAASiW,MAAM,CAACzY,MAAP,GAAgB0Y,MAAM,CAAC1Y,MAAhC,CAAnB;EACA,IAAI8Y,KAAK,GAAG,CAAZ;EACA,IAAI7U,CAAJ;;EACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG2U,GAAhB,EAAqB3U,CAAC,EAAtB,EAA0B;IACtB,IAAK0U,WAAW,IAAIF,MAAM,CAACxU,CAAD,CAAN,KAAcyU,MAAM,CAACzU,CAAD,CAApC,IACI,CAAC0U,WAAD,IAAgBxY,KAAK,CAACsY,MAAM,CAACxU,CAAD,CAAP,CAAL,KAAqB9D,KAAK,CAACuY,MAAM,CAACzU,CAAD,CAAP,CADlD,EACgE;MAC5D6U,KAAK;IACR;EACJ;;EACD,OAAOA,KAAK,GAAGD,UAAf;AACH,C,CAED;;;AACA,SAASE,QAAT,GAAoB;EAChB5V,cAAc,CAAC,GAAD,EAAM,CAAC,IAAD,EAAO,CAAP,EAAU,KAAV,CAAN,EAAwB,IAAxB,EAA8B,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAC9D,OAAOsV,OAAO,CAACla,IAAD,EAAO4E,IAAI,CAACC,MAAZ,CAAP,CACFjF,QADE,CACO,EADP,CAAP;EAEH,CAHa,CAAd;EAIAyE,cAAc,CAAC,GAAD,EAAM,CAAC,IAAD,EAAO,CAAP,EAAU,KAAV,CAAN,EAAwB,IAAxB,EAA8B,UAAUrE,IAAV,EAAgB;IACxD,OAAOma,UAAU,CAACna,IAAD,CAAV,CACFJ,QADE,CACO,EADP,CAAP;EAEH,CAHa,CAAd,CALgB,CAShB;;EACAmC,YAAY,CAAC,MAAD,EAAS,GAAT,CAAZ;EACAA,YAAY,CAAC,SAAD,EAAY,GAAZ,CAAZ,CAXgB,CAYhB;;EACAiJ,eAAe,CAAC,MAAD,EAAS,CAAT,CAAf;EACAA,eAAe,CAAC,SAAD,EAAY,CAAZ,CAAf,CAdgB,CAehB;;EACAxB,aAAa,CAAC,GAAD,EAAMb,SAAN,CAAb;EACAa,aAAa,CAAC,IAAD,EAAOb,SAAP,EAAkBJ,MAAlB,CAAb;EACAiB,aAAa,CAAC,GAAD,EAAMb,SAAN,CAAb;EACAa,aAAa,CAAC,IAAD,EAAOb,SAAP,EAAkBJ,MAAlB,CAAb;EACAoC,iBAAiB,CAAC,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,IAAjB,CAAD,EAAyB,UAAUnK,KAAV,EAAiBkQ,IAAjB,EAAuBhG,MAAvB,EAA+BpG,KAA/B,EAAsC;IAC5EoM,IAAI,CAACpM,KAAK,CAACL,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAD,CAAJ,GAA2B5C,KAAK,CAACb,KAAD,CAAhC;IACA,OAAOkK,MAAP;EACH,CAHgB,CAAjB,CApBgB,CAwBhB;EACA;EACA;EACA;AACH;;AACD,SAAS0P,OAAT,CAAiBpa,IAAjB,EAAuBQ,KAAvB,EAA8BqE,MAAM,GAAGwV,SAAS,EAAhD,EAAoD;EAChD,MAAM3J,IAAI,GAAGwJ,OAAO,CAACla,IAAD,EAAO6E,MAAP,CAApB;EACA,OAAO4K,GAAG,CAACzP,IAAD,EAAO,CAACQ,KAAK,GAAGkQ,IAAT,IAAiB,CAAxB,EAA2B,KAA3B,CAAV;AACH;;AACD,SAASwJ,OAAT,CAAiBla,IAAjB,EAAuB6E,MAAM,GAAGwV,SAAS,EAAzC,EAA6ChV,KAA7C,EAAoD;EAChD,OAAOR,MAAM,CAAC6L,IAAP,CAAY1Q,IAAZ,EAAkBqF,KAAlB,CAAP;AACH,C,CACD;AACA;AACA;AACA;;;AACA,SAASiV,UAAT,CAAoBta,IAApB,EAA0BQ,KAA1B,EAAiC;EAC7B,MAAMkQ,IAAI,GAAGyJ,UAAU,CAACna,IAAD,CAAvB;EACA,OAAOyP,GAAG,CAACzP,IAAD,EAAO,CAACQ,KAAK,GAAGkQ,IAAT,IAAiB,CAAxB,EAA2B,KAA3B,CAAV;AACH;;AACD,SAASyJ,UAAT,CAAoBna,IAApB,EAA0BqF,KAA1B,EAAiC;EAC7B,OAAO2L,UAAU,CAAChR,IAAD,EAAO,CAAP,EAAU,CAAV,EAAaqF,KAAb,CAAV,CAA8BqL,IAArC;AACH,C,CAED;;;AACA,SAAS6J,YAAT,GAAwB;EACpBlW,cAAc,CAAC,IAAD,EAAO,CAAC,IAAD,EAAO,CAAP,EAAU,KAAV,CAAP,EAAyB,IAAzB,EAA+B,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAC/D;IACA,OAAO,CAAC4V,WAAW,CAACxa,IAAD,EAAO4E,IAAI,CAACC,MAAZ,CAAX,GAAiC,GAAlC,EAAuCjF,QAAvC,EAAP;EACH,CAHa,CAAd;EAIAyE,cAAc,CAAC,IAAD,EAAO,CAAC,IAAD,EAAO,CAAP,EAAU,KAAV,CAAP,EAAyB,IAAzB,EAA+B,UAAUrE,IAAV,EAAgB;IACzD;IACA,OAAO,CAACya,cAAc,CAACza,IAAD,CAAd,GAAuB,GAAxB,EAA6BJ,QAA7B,EAAP;EACH,CAHa,CAAd;EAIA8a,sBAAsB,CAAC,MAAD,EAASC,oBAAT,CAAtB;EACAD,sBAAsB,CAAC,OAAD,EAAUC,oBAAV,CAAtB;EACAD,sBAAsB,CAAC,MAAD,EAASE,uBAAT,CAAtB;EACAF,sBAAsB,CAAC,OAAD,EAAUE,uBAAV,CAAtB,CAZoB,CAapB;;EACA7Y,YAAY,CAAC,UAAD,EAAa,IAAb,CAAZ;EACAA,YAAY,CAAC,aAAD,EAAgB,IAAhB,CAAZ,CAfoB,CAgBpB;;EACAiJ,eAAe,CAAC,UAAD,EAAa,CAAb,CAAf;EACAA,eAAe,CAAC,aAAD,EAAgB,CAAhB,CAAf,CAlBoB,CAmBpB;;EACAxB,aAAa,CAAC,GAAD,EAAMN,WAAN,CAAb;EACAM,aAAa,CAAC,GAAD,EAAMN,WAAN,CAAb;EACAM,aAAa,CAAC,IAAD,EAAOb,SAAP,EAAkBJ,MAAlB,CAAb;EACAiB,aAAa,CAAC,IAAD,EAAOb,SAAP,EAAkBJ,MAAlB,CAAb;EACAiB,aAAa,CAAC,MAAD,EAAST,SAAT,EAAoBN,MAApB,CAAb;EACAe,aAAa,CAAC,MAAD,EAAST,SAAT,EAAoBN,MAApB,CAAb;EACAe,aAAa,CAAC,OAAD,EAAUR,SAAV,EAAqBN,MAArB,CAAb;EACAc,aAAa,CAAC,OAAD,EAAUR,SAAV,EAAqBN,MAArB,CAAb;EACAiC,iBAAiB,CAAC,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA0B,OAA1B,CAAD,EAAqC,UAAUnK,KAAV,EAAiBkQ,IAAjB,EAAuBhG,MAAvB,EAA+BpG,KAA/B,EAAsC;IACxFoM,IAAI,CAACpM,KAAK,CAACL,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAD,CAAJ,GAA2B5C,KAAK,CAACb,KAAD,CAAhC;IACA,OAAOkK,MAAP;EACH,CAHgB,CAAjB;EAIAC,iBAAiB,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,EAAe,UAAUnK,KAAV,EAAiBkQ,IAAjB,EAAuBhG,MAAvB,EAA+BpG,KAA/B,EAAsC;IAClEoM,IAAI,CAACpM,KAAD,CAAJ,GAAckI,iBAAiB,CAAChM,KAAD,CAA/B;IACA,OAAOkK,MAAP;EACH,CAHgB,CAAjB;AAIH;;AACD,SAASgQ,sBAAT,CAAgCpW,KAAhC,EAAuCuW,MAAvC,EAA+C;EAC3CxW,cAAc,CAAC,IAAD,EAAO,CAACC,KAAD,EAAQA,KAAK,CAACpD,MAAd,EAAsB,KAAtB,CAAP,EAAqC,IAArC,EAA2C2Z,MAA3C,CAAd;AACH;;AACD,SAASF,oBAAT,CAA8B3a,IAA9B,EAAoC4E,IAApC,EAA0C;EACtC,OAAO4V,WAAW,CAACxa,IAAD,EAAO4E,IAAI,CAACC,MAAZ,CAAX,CAA+BjF,QAA/B,EAAP;AACH;;AACD,SAASgb,uBAAT,CAAiC5a,IAAjC,EAAuC;EACnC,OAAOya,cAAc,CAACza,IAAD,CAAd,CAAqBJ,QAArB,EAAP;AACH,C,CACD;;;AACA,SAASkb,cAAT,CAAwB9a,IAAxB,EAA8BQ,KAA9B,EAAqCqE,MAAM,GAAGwV,SAAS,EAAvD,EAA2DhV,KAA3D,EAAkE;EAC9D,OAAO0V,oBAAoB,CAAC/a,IAAD,EAAOQ,KAAP,EAC3B;EACA0Z,OAAO,CAACla,IAAD,EAAO6E,MAAP,EAAeQ,KAAf,CAFoB,EAG3B;EACA2V,kBAAkB,CAAChb,IAAD,EAAO6E,MAAP,EAAeQ,KAAf,CAJS,EAIcR,MAAM,CAACkD,cAAP,EAJd,EAIuClD,MAAM,CAACsQ,cAAP,EAJvC,EAIgE9P,KAJhE,CAA3B;AAKH;;AACD,SAASmV,WAAT,CAAqBxa,IAArB,EAA2B6E,MAAM,GAAGwV,SAAS,EAA7C,EAAiDhV,KAAjD,EAAwD;EACpD,OAAO2L,UAAU,CAAChR,IAAD,EAAO6E,MAAM,CAACkD,cAAP,EAAP,EAAgClD,MAAM,CAACsQ,cAAP,EAAhC,EAAyD9P,KAAzD,CAAV,CAA0EuC,IAAjF;AACH;;AACD,SAASqT,iBAAT,CAA2Bjb,IAA3B,EAAiCQ,KAAjC,EAAwC6E,KAAxC,EAA+C;EAC3C,OAAO0V,oBAAoB,CAAC/a,IAAD,EAAOQ,KAAP,EAAc2Z,UAAU,CAACna,IAAD,EAAOqF,KAAP,CAAxB,EAAuC6V,eAAe,CAAClb,IAAD,EAAOqF,KAAP,CAAtD,EAAqE,CAArE,EAAwE,CAAxE,CAA3B;AACH;;AACD,SAASoV,cAAT,CAAwBza,IAAxB,EAA8BqF,KAA9B,EAAqC;EACjC,OAAO2L,UAAU,CAAChR,IAAD,EAAO,CAAP,EAAU,CAAV,EAAaqF,KAAb,CAAV,CAA8BuC,IAArC;AACH;;AACD,SAASuT,iBAAT,CAA2Bnb,IAA3B,EAAiCqF,KAAjC,EAAwC;EACpC,OAAO6L,WAAW,CAAC5K,WAAW,CAACtG,IAAD,EAAOqF,KAAP,CAAZ,EAA2B,CAA3B,EAA8B,CAA9B,CAAlB;AACH;;AACD,SAAS+V,cAAT,CAAwBpb,IAAxB,EAA8BqF,KAA9B,EAAqCR,MAAM,GAAGwV,SAAS,EAAvD,EAA2D;EACvD,OAAOnJ,WAAW,CAAC5K,WAAW,CAACtG,IAAD,EAAOqF,KAAP,CAAZ,EAA2BR,MAAM,CAACkD,cAAP,EAA3B,EAAoDlD,MAAM,CAACsQ,cAAP,EAApD,CAAlB;AACH;;AACD,SAAS4F,oBAAT,CAA8B/a,IAA9B,EAAoCQ,KAApC,EAA2CkQ,IAA3C,EAAiDC,OAAjD,EAA0DN,GAA1D,EAA+DC,GAA/D,EAAoEjL,KAApE,EAA2E;EACvE,IAAI,CAAC7E,KAAL,EAAY;IACR,OAAOga,WAAW,CAACxa,IAAD,EAAO,KAAK,CAAZ,EAAeqF,KAAf,CAAlB;EACH;;EACD,MAAMgW,WAAW,GAAGnK,WAAW,CAAC1Q,KAAD,EAAQ6P,GAAR,EAAaC,GAAb,CAA/B;;EACA,MAAM4E,KAAK,GAAGxE,IAAI,GAAG2K,WAAP,GAAqBA,WAArB,GAAmC3K,IAAjD;;EACA,OAAO4K,UAAU,CAACtb,IAAD,EAAOQ,KAAP,EAAc0U,KAAd,EAAqBvE,OAArB,EAA8BN,GAA9B,EAAmCC,GAAnC,CAAjB;AACH;;AACD,SAASgL,UAAT,CAAoBtb,IAApB,EAA0Bub,QAA1B,EAAoC7K,IAApC,EAA0CC,OAA1C,EAAmDN,GAAnD,EAAwDC,GAAxD,EAA6D;EACzD,MAAMkL,aAAa,GAAG/K,kBAAkB,CAAC8K,QAAD,EAAW7K,IAAX,EAAiBC,OAAjB,EAA0BN,GAA1B,EAA+BC,GAA/B,CAAxC;;EACA,MAAMpC,KAAK,GAAGxI,aAAa,CAAC8V,aAAa,CAAC5T,IAAf,EAAqB,CAArB,EAAwB4T,aAAa,CAACrL,SAAtC,CAA3B;;EACA5J,WAAW,CAACvG,IAAD,EAAOsG,WAAW,CAAC4H,KAAD,EAAQ,IAAR,CAAlB,EAAiC,IAAjC,CAAX;EACAC,QAAQ,CAACnO,IAAD,EAAOoH,QAAQ,CAAC8G,KAAD,EAAQ,IAAR,CAAf,EAA8B,IAA9B,CAAR;EACAM,OAAO,CAACxO,IAAD,EAAOkH,OAAO,CAACgH,KAAD,EAAQ,IAAR,CAAd,EAA6B,IAA7B,CAAP;EACA,OAAOlO,IAAP;AACH,C,CAED;;;AACA,SAASyb,YAAT,GAAwB;EACpB;EACApX,cAAc,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAClD,OAAOA,IAAI,CAACS,KAAL,GAAa,KAAb,GAAqB,EAA5B;EACH,CAFa,CAAd;EAGAhB,cAAc,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IACnD,OAAOA,IAAI,CAACS,KAAL,GAAa,4BAAb,GAA4C,EAAnD;EACH,CAFa,CAAd;AAGH,C,CACD;;;AACA,SAASqW,WAAT,CAAqBrW,KAArB,EAA4B;EACxB,OAAOA,KAAK,GAAG,KAAH,GAAW,EAAvB;AACH;;AACD,SAASsW,WAAT,CAAqBtW,KAArB,EAA4B;EACxB,OAAOA,KAAK,GAAG,4BAAH,GAAkC,EAA9C;AACH;;AAED,SAASuW,aAAT,GAAyB;EACrB;EACAvX,cAAc,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,UAAUrE,IAAV,EAAgB;IAC5C,OAAOwH,IAAI,CAACxH,IAAD,CAAJ,CACFJ,QADE,CACO,EADP,CAAP;EAEH,CAHa,CAAd;EAIAyE,cAAc,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,UAAUrE,IAAV,EAAgB;IAC5C,OAAOA,IAAI,CAACuH,OAAL,GACF3H,QADE,CACO,EADP,CAAP;EAEH,CAHa,CAAd,CANqB,CAUrB;;EACA4J,aAAa,CAAC,GAAD,EAAMN,WAAN,CAAb;EACAM,aAAa,CAAC,GAAD,EAAMH,cAAN,CAAb;EACAkB,aAAa,CAAC,GAAD,EAAM,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IAC/CA,MAAM,CAACmR,EAAP,GAAY,IAAIpc,IAAJ,CAASqc,UAAU,CAACtb,KAAD,CAAV,GAAoB,IAA7B,CAAZ;IACA,OAAOkK,MAAP;EACH,CAHY,CAAb;EAIAH,aAAa,CAAC,GAAD,EAAM,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IAC/CA,MAAM,CAACmR,EAAP,GAAY,IAAIpc,IAAJ,CAAS4B,KAAK,CAACb,KAAD,CAAd,CAAZ;IACA,OAAOkK,MAAP;EACH,CAHY,CAAb;AAIH;;AAED,SAASqR,UAAT,GAAsB;EAClB;EACA1X,cAAc,CAAC,GAAD,EAAM,CAAC,IAAD,EAAO,CAAP,EAAU,KAAV,CAAN,EAAwB,IAAxB,EAA8B,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAC9D,OAAOgC,UAAU,CAAC5G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAV,CACFzF,QADE,CACO,EADP,CAAP;EAEH,CAHa,CAAd,CAFkB,CAMlB;;EACAmC,YAAY,CAAC,QAAD,EAAW,GAAX,CAAZ,CAPkB,CAQlB;;EACAiJ,eAAe,CAAC,QAAD,EAAW,EAAX,CAAf,CATkB,CAUlB;;EACAxB,aAAa,CAAC,GAAD,EAAMb,SAAN,CAAb;EACAa,aAAa,CAAC,IAAD,EAAOb,SAAP,EAAkBJ,MAAlB,CAAb;EACAgC,aAAa,CAAC,CAAC,GAAD,EAAM,IAAN,CAAD,EAAcrH,MAAd,CAAb;AACH;;AAED,SAAS8Y,WAAT,GAAuB;EACnB;EACA3X,cAAc,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAClD,OAAOqX,UAAU,CAACjc,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAV,CACFzF,QADE,CACO,EADP,CAAP;EAEH,CAHa,CAAd,CAFmB,CAMnB;;EACAmC,YAAY,CAAC,SAAD,EAAY,GAAZ,CAAZ,CAPmB,CAQnB;;EACAiJ,eAAe,CAAC,SAAD,EAAY,CAAZ,CAAf,CATmB,CAUnB;;EACAxB,aAAa,CAAC,GAAD,EAAMlB,MAAN,CAAb;EACAiC,aAAa,CAAC,GAAD,EAAM,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IAC/C1F,KAAK,CAAClC,KAAD,CAAL,GAAe,CAACzB,KAAK,CAACb,KAAD,CAAL,GAAe,CAAhB,IAAqB,CAApC;IACA,OAAOkK,MAAP;EACH,CAHY,CAAb;AAIH,C,CACD;;;AACA,SAASuR,UAAT,CAAoBjc,IAApB,EAA0BqF,KAAK,GAAG,KAAlC,EAAyC;EACrC,OAAOnG,IAAI,CAACC,IAAL,CAAU,CAACiI,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAR,GAAwB,CAAzB,IAA8B,CAAxC,CAAP;AACH;;AACD,SAAS6W,UAAT,CAAoBlc,IAApB,EAA0Bmc,OAA1B,EAAmC9W,KAAnC,EAA0C;EACtC,OAAO8I,QAAQ,CAACnO,IAAD,EAAO,CAACmc,OAAO,GAAG,CAAX,IAAgB,CAAhB,GAAoB/U,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAR,GAAwB,CAAnD,EAAsDA,KAAtD,CAAf;AACH,C,CACD;AACA;AACA;AACA;AACA;AAEA;;;AACA,SAAS+W,oBAAT,CAA8B9X,KAA9B,EAAqC+X,SAArC,EAAgD;EAC5ChY,cAAc,CAACC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,UAAUtE,IAAV,EAAgB0K,MAAhB,EAAwB;IACtD,IAAIpF,MAAM,GAAGgX,YAAY,CAACtc,IAAD,EAAO;MAAEuc,MAAM,EAAE7R,MAAM,CAACrF,KAAjB;MAAwBmX,OAAO,EAAE9R,MAAM,CAACpF;IAAxC,CAAP,CAAzB;IACA,IAAI1B,IAAI,GAAG,GAAX;;IACA,IAAI0B,MAAM,GAAG,CAAb,EAAgB;MACZA,MAAM,GAAG,CAACA,MAAV;MACA1B,IAAI,GAAG,GAAP;IACH;;IACD,OAAOA,IAAI,GAAGN,QAAQ,CAAC,CAAC,EAAEgC,MAAM,GAAG,EAAX,CAAF,EAAkB,CAAlB,CAAf,GAAsC+W,SAAtC,GAAkD/Y,QAAQ,CAAC,CAAC,CAAEgC,MAAH,GAAa,EAAd,EAAkB,CAAlB,CAAjE;EACH,CARa,CAAd;AASH;;AACD,SAASmX,UAAT,GAAsB;EAClBL,oBAAoB,CAAC,GAAD,EAAM,GAAN,CAApB;EACAA,oBAAoB,CAAC,IAAD,EAAO,EAAP,CAApB,CAFkB,CAGlB;;EACA5S,aAAa,CAAC,GAAD,EAAMJ,gBAAN,CAAb;EACAI,aAAa,CAAC,IAAD,EAAOJ,gBAAP,CAAb;EACAmB,aAAa,CAAC,CAAC,GAAD,EAAM,IAAN,CAAD,EAAc,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IACvDA,MAAM,CAACgS,OAAP,GAAiB,IAAjB;IACAhS,MAAM,CAACiS,IAAP,GAAcC,gBAAgB,CAACxT,gBAAD,EAAmB5I,KAAnB,CAA9B;IACA,OAAOkK,MAAP;EACH,CAJY,CAAb;AAKH,C,CACD;AACA;AACA;AACA;;;AACA,MAAMmS,WAAW,GAAG,iBAApB;;AACA,SAASD,gBAAT,CAA0BE,OAA1B,EAAmCxd,GAAnC,EAAwC;EACpC,MAAMyd,OAAO,GAAG,CAACzd,GAAG,IAAI,EAAR,EAAY2F,KAAZ,CAAkB6X,OAAlB,CAAhB;;EACA,IAAIC,OAAO,KAAK,IAAhB,EAAsB;IAClB,OAAO,IAAP;EACH;;EACD,MAAMC,KAAK,GAAGD,OAAO,CAACA,OAAO,CAAC7b,MAAR,GAAiB,CAAlB,CAArB;EACA,MAAM+b,KAAK,GAAGD,KAAK,CAAC/X,KAAN,CAAY4X,WAAZ,KAA4B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA1C;EACA,MAAM5F,OAAO,GAAGxK,QAAQ,CAACwQ,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAR,GAAyB,EAAzB,GAA8B5b,KAAK,CAAC4b,KAAK,CAAC,CAAD,CAAN,CAAnD;;EACA,MAAMC,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,GAAmBhG,OAAnB,GAA6B,CAACA,OAA3C;;EACA,OAAOA,OAAO,KAAK,CAAZ,GAAgB,CAAhB,GAAoBiG,IAA3B;AACH,C,CACD;;;AACA,SAASC,eAAT,CAAyB3c,KAAzB,EAAgCR,IAAhC,EAAsC0K,MAAM,GAAG,EAA/C,EAAmD;EAC/C,IAAI,CAACA,MAAM,CAAC6R,MAAZ,EAAoB;IAChB,OAAO/b,KAAP;EACH;;EACD,MAAMkP,GAAG,GAAGR,SAAS,CAAClP,IAAD,CAArB,CAJ+C,CAK/C;;EACA,MAAMod,UAAU,GAAG,CAAC1S,MAAM,CAAC8R,OAAP,IAAkB,CAAnB,IAAwB,KAA3C;EACA,MAAMzI,IAAI,GAAGvT,KAAK,CAAC+G,OAAN,KAAkBmI,GAAG,CAACnI,OAAJ,EAAlB,GAAkC6V,UAA/C,CAP+C,CAQ/C;;EACA1N,GAAG,CAACT,OAAJ,CAAYS,GAAG,CAACnI,OAAJ,KAAgBwM,IAA5B,EAT+C,CAU/C;EACA;;EACA,OAAOrE,GAAP;AACH;;AACD,SAAS2N,aAAT,CAAuBrd,IAAvB,EAA6B;EACzB;EACA;EACA,OAAO,CAACd,IAAI,CAAC+Q,KAAL,CAAWjQ,IAAI,CAACsd,iBAAL,KAA2B,EAAtC,CAAD,GAA6C,EAApD;AACH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAShB,YAAT,CAAsBtc,IAAtB,EAA4B0K,MAAM,GAAG,EAArC,EAAyC;EACrC,MAAM8R,OAAO,GAAG9R,MAAM,CAAC8R,OAAP,IAAkB,CAAlC;;EACA,OAAO9R,MAAM,CAAC6R,MAAP,GAAgBC,OAAhB,GAA0Ba,aAAa,CAACrd,IAAD,CAA9C;AACH;;AACD,SAASud,YAAT,CAAsBvd,IAAtB,EAA4BQ,KAA5B,EAAmCgd,aAAnC,EAAkDC,WAAlD,EAA+D/S,MAAM,GAAG,EAAxE,EAA4E;EACxE,MAAMpF,MAAM,GAAGoF,MAAM,CAAC8R,OAAP,IAAkB,CAAjC;EACA,IAAIkB,WAAJ;EACA,IAAIC,MAAM,GAAGnd,KAAb;EACA,IAAI0N,KAAK,GAAGlO,IAAZ;;EACA,IAAIX,QAAQ,CAACse,MAAD,CAAZ,EAAsB;IAClBA,MAAM,GAAGf,gBAAgB,CAACxT,gBAAD,EAAmBuU,MAAnB,CAAzB;;IACA,IAAIA,MAAM,KAAK,IAAf,EAAqB;MACjB,OAAOzP,KAAP;IACH;EACJ,CALD,MAMK,IAAI5N,QAAQ,CAACqd,MAAD,CAAR,IAAoBze,IAAI,CAACwE,GAAL,CAASia,MAAT,IAAmB,EAAvC,IAA6C,CAACF,WAAlD,EAA+D;IAChEE,MAAM,GAAGA,MAAM,GAAG,EAAlB;EACH;;EACD,IAAI,CAACjT,MAAM,CAAC6R,MAAR,IAAkBiB,aAAtB,EAAqC;IACjCE,WAAW,GAAGL,aAAa,CAACnP,KAAD,CAA3B;EACH;;EACDxD,MAAM,CAAC8R,OAAP,GAAiBmB,MAAjB;EACAjT,MAAM,CAAC6R,MAAP,GAAgB,IAAhB;;EACA,IAAImB,WAAW,IAAI,IAAnB,EAAyB;IACrBxP,KAAK,GAAGuB,GAAG,CAACvB,KAAD,EAAQwP,WAAR,EAAqB,SAArB,CAAX;EACH;;EACD,IAAIpY,MAAM,KAAKqY,MAAf,EAAuB;IACnB,IAAI,CAACH,aAAD,IAAkB9S,MAAM,CAACkT,iBAA7B,EAAgD;MAC5C1P,KAAK,GAAGuB,GAAG,CAACvB,KAAD,EAAQyP,MAAM,GAAGrY,MAAjB,EAAyB,SAAzB,EAAoCoF,MAAM,CAAC6R,MAA3C,CAAX,CAD4C,CAE5C;IACH,CAHD,MAIK,IAAI,CAAC7R,MAAM,CAACkT,iBAAZ,EAA+B;MAChClT,MAAM,CAACkT,iBAAP,GAA2B,IAA3B,CADgC,CAEhC;MACA;;MACAlT,MAAM,CAACkT,iBAAP,GAA2B,IAA3B;IACH;EACJ;;EACD,OAAO1P,KAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS2P,cAAT,CAAwB7d,IAAxB,EAA8Bwd,aAA9B,EAA6C;EACzC,OAAOD,YAAY,CAACvd,IAAD,EAAO,CAAP,EAAUwd,aAAV,CAAnB;AACH;;AACD,SAASM,oBAAT,CAA8B9d,IAA9B,EAAoC;EAChC,OAAQsc,YAAY,CAACtc,IAAD,CAAZ,GAAqBsc,YAAY,CAACnO,QAAQ,CAACe,SAAS,CAAClP,IAAD,CAAV,EAAkB,CAAlB,CAAT,CAAjC,IACDsc,YAAY,CAACtc,IAAD,CAAZ,GAAqBsc,YAAY,CAACnO,QAAQ,CAACe,SAAS,CAAClP,IAAD,CAAV,EAAkB,CAAlB,CAAT,CADxC;AAEH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS+d,uBAAT,CAAiC/d,IAAjC,EAAuCQ,KAAvC,EAA8CkK,MAAM,GAAG,EAAvD,EAA2D;EACvD,IAAIA,MAAM,CAACiS,IAAP,IAAe,IAAnB,EAAyB;IACrB,OAAOY,YAAY,CAACvd,IAAD,EAAO0K,MAAM,CAACiS,IAAd,EAAoB,KAApB,EAA2B,IAA3B,EAAiCjS,MAAjC,CAAnB;EACH;;EACD,IAAIrL,QAAQ,CAACmB,KAAD,CAAZ,EAAqB;IACjB,MAAMwd,KAAK,GAAGpB,gBAAgB,CAACzT,WAAD,EAAc3I,KAAd,CAA9B;;IACA,IAAIwd,KAAK,IAAI,IAAb,EAAmB;MACf,OAAOT,YAAY,CAACvd,IAAD,EAAOge,KAAP,EAAc,KAAd,EAAqB,KAArB,EAA4BtT,MAA5B,CAAnB;IACH;;IACD,OAAO6S,YAAY,CAACvd,IAAD,EAAO,CAAP,EAAU,IAAV,EAAgB,KAAhB,EAAuB0K,MAAvB,CAAnB;EACH;;EACD,OAAO1K,IAAP;AACH;;AACD,SAASie,oBAAT,CAA8Bje,IAA9B,EAAoCQ,KAApC,EAA2C;EACvC,MAAMmd,MAAM,GAAGnd,KAAK,GAAG8b,YAAY,CAAC9b,KAAD,EAAQ;IAAE+b,MAAM,EAAE;EAAV,CAAR,CAAf,GAA4C,CAAhE;;EACA,OAAO,CAACD,YAAY,CAACtc,IAAD,CAAZ,GAAqB2d,MAAtB,IAAgC,EAAhC,KAAuC,CAA9C;AACH,C,CACD;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASO,UAAT,GAAsB;EAClB;EACA7Z,cAAc,CAAC,GAAD,EAAM,CAAC,IAAD,EAAO,CAAP,EAAU,KAAV,CAAN,EAAwB,IAAxB,EAA8B,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAC9D,OAAO8B,UAAU,CAAC1G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAV,CACFzF,QADE,CACO,EADP,CAAP;EAEH,CAHa,CAAd,CAFkB,CAMlB;;EACAmC,YAAY,CAAC,QAAD,EAAW,GAAX,CAAZ,CAPkB,CAQlB;;EACAiJ,eAAe,CAAC,QAAD,EAAW,EAAX,CAAf,CATkB,CAUlB;;EACAxB,aAAa,CAAC,GAAD,EAAMb,SAAN,CAAb;EACAa,aAAa,CAAC,IAAD,EAAOb,SAAP,EAAkBJ,MAAlB,CAAb;EACAgC,aAAa,CAAC,CAAC,GAAD,EAAM,IAAN,CAAD,EAActH,MAAd,CAAb;AACH,C,CAED;;;AACA,SAASkb,eAAT,GAA2B;EACvB9Z,cAAc,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAClD,OAAO,CAAC,CAAC,EAAEkC,eAAe,CAAC9G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAf,GAAoC,GAAtC,CAAF,EAA8CzF,QAA9C,CAAuD,EAAvD,CAAP;EACH,CAFa,CAAd;EAGAyE,cAAc,CAAC,IAAD,EAAO,CAAC,IAAD,EAAO,CAAP,EAAU,KAAV,CAAP,EAAyB,IAAzB,EAA+B,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAC/D,OAAO,CAAC,CAAC,EAAEkC,eAAe,CAAC9G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAf,GAAoC,EAAtC,CAAF,EAA6CzF,QAA7C,CAAsD,EAAtD,CAAP;EACH,CAFa,CAAd;EAGAyE,cAAc,CAAC,IAAD,EAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,KAAX,CAAP,EAA0B,IAA1B,EAAgC,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAChE,OAAQkC,eAAe,CAAC9G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAhB,CAAoCzF,QAApC,CAA6C,EAA7C,CAAP;EACH,CAFa,CAAd;EAGAyE,cAAc,CAAC,IAAD,EAAO,CAAC,MAAD,EAAS,CAAT,EAAY,KAAZ,CAAP,EAA2B,IAA3B,EAAiC,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IACjE,OAAO,CAACkC,eAAe,CAAC9G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAf,GAAoC,EAArC,EAAyCzF,QAAzC,CAAkD,EAAlD,CAAP;EACH,CAFa,CAAd;EAGAyE,cAAc,CAAC,IAAD,EAAO,CAAC,OAAD,EAAU,CAAV,EAAa,KAAb,CAAP,EAA4B,IAA5B,EAAkC,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAClE,OAAO,CAACkC,eAAe,CAAC9G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAf,GAAoC,GAArC,EAA0CzF,QAA1C,CAAmD,EAAnD,CAAP;EACH,CAFa,CAAd;EAGAyE,cAAc,CAAC,IAAD,EAAO,CAAC,QAAD,EAAW,CAAX,EAAc,KAAd,CAAP,EAA6B,IAA7B,EAAmC,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IACnE,OAAO,CAACkC,eAAe,CAAC9G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAf,GAAoC,IAArC,EAA2CzF,QAA3C,CAAoD,EAApD,CAAP;EACH,CAFa,CAAd;EAGAyE,cAAc,CAAC,IAAD,EAAO,CAAC,SAAD,EAAY,CAAZ,EAAe,KAAf,CAAP,EAA8B,IAA9B,EAAoC,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IACpE,OAAO,CAACkC,eAAe,CAAC9G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAf,GAAoC,KAArC,EAA4CzF,QAA5C,CAAqD,EAArD,CAAP;EACH,CAFa,CAAd;EAGAyE,cAAc,CAAC,IAAD,EAAO,CAAC,UAAD,EAAa,CAAb,EAAgB,KAAhB,CAAP,EAA+B,IAA/B,EAAqC,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IACrE,OAAO,CAACkC,eAAe,CAAC9G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAf,GAAoC,MAArC,EAA6CzF,QAA7C,CAAsD,EAAtD,CAAP;EACH,CAFa,CAAd;EAGAyE,cAAc,CAAC,IAAD,EAAO,CAAC,WAAD,EAAc,CAAd,EAAiB,KAAjB,CAAP,EAAgC,IAAhC,EAAsC,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IACtE,OAAO,CAACkC,eAAe,CAAC9G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAf,GAAoC,OAArC,EAA8CzF,QAA9C,CAAuD,EAAvD,CAAP;EACH,CAFa,CAAd,CAzBuB,CA4BvB;;EACAmC,YAAY,CAAC,aAAD,EAAgB,IAAhB,CAAZ,CA7BuB,CA8BvB;;EACAiJ,eAAe,CAAC,aAAD,EAAgB,EAAhB,CAAf,CA/BuB,CAgCvB;;EACAxB,aAAa,CAAC,GAAD,EAAMV,SAAN,EAAiBR,MAAjB,CAAb;EACAkB,aAAa,CAAC,IAAD,EAAOV,SAAP,EAAkBP,MAAlB,CAAb;EACAiB,aAAa,CAAC,KAAD,EAAQV,SAAR,EAAmBN,MAAnB,CAAb;EACA,IAAIlE,KAAJ;;EACA,KAAKA,KAAK,GAAG,MAAb,EAAqBA,KAAK,CAACpD,MAAN,IAAgB,CAArC,EAAwCoD,KAAK,IAAI,GAAjD,EAAsD;IAClDkF,aAAa,CAAClF,KAAD,EAAQ2E,aAAR,CAAb;EACH;;EACD,SAASmV,OAAT,CAAiB5d,KAAjB,EAAwBwE,KAAxB,EAA+B0F,MAA/B,EAAuC;IACnC1F,KAAK,CAAC7B,WAAD,CAAL,GAAqB9B,KAAK,CAACya,UAAU,CAAE,KAAItb,KAAM,EAAZ,CAAV,GAA2B,IAA5B,CAA1B;IACA,OAAOkK,MAAP;EACH;;EACD,KAAKpG,KAAK,GAAG,GAAb,EAAkBA,KAAK,CAACpD,MAAN,IAAgB,CAAlC,EAAqCoD,KAAK,IAAI,GAA9C,EAAmD;IAC/CiG,aAAa,CAACjG,KAAD,EAAQ8Z,OAAR,CAAb;EACH,CA9CsB,CA+CvB;;AACH;;AAED,SAASC,QAAT,GAAoB;EAChB;EACA,SAASC,OAAT,CAAiBte,IAAjB,EAAuBqF,KAAvB,EAA8B;IAC1B,OAAOmB,QAAQ,CAACxG,IAAD,EAAOqF,KAAP,CAAR,GAAwB,EAAxB,IAA8B,EAArC;EACH;;EACD,SAASkZ,OAAT,CAAiBve,IAAjB,EAAuBqF,KAAvB,EAA8B;IAC1B,OAAOmB,QAAQ,CAACxG,IAAD,EAAOqF,KAAP,CAAR,IAAyB,EAAhC;EACH;;EACDhB,cAAc,CAAC,GAAD,EAAM,CAAC,IAAD,EAAO,CAAP,EAAU,KAAV,CAAN,EAAwB,IAAxB,EAA8B,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAC9D,OAAO4B,QAAQ,CAACxG,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAR,CACFzF,QADE,CACO,EADP,CAAP;EAEH,CAHa,CAAd;EAIAyE,cAAc,CAAC,GAAD,EAAM,CAAC,IAAD,EAAO,CAAP,EAAU,KAAV,CAAN,EAAwB,IAAxB,EAA8B,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAC9D,OAAO0Z,OAAO,CAACte,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAP,CACFzF,QADE,CACO,EADP,CAAP;EAEH,CAHa,CAAd;EAIAyE,cAAc,CAAC,GAAD,EAAM,CAAC,IAAD,EAAO,CAAP,EAAU,KAAV,CAAN,EAAwB,IAAxB,EAA8B,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAC9D,OAAO2Z,OAAO,CAACve,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAP,CACFzF,QADE,CACO,EADP,CAAP;EAEH,CAHa,CAAd;EAIAyE,cAAc,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IACpD,MAAM4Z,EAAE,GAAGF,OAAO,CAACte,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAlB;;IACA,MAAMoZ,GAAG,GAAGnb,QAAQ,CAACoD,UAAU,CAAC1G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAX,EAA+B,CAA/B,CAApB;;IACA,OAAQ,GAAEmZ,EAAG,GAAEC,GAAI,EAAnB;EACH,CAJa,CAAd;EAKApa,cAAc,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IACtD,MAAM4Z,EAAE,GAAGF,OAAO,CAACte,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAlB;;IACA,MAAMoZ,GAAG,GAAGnb,QAAQ,CAACoD,UAAU,CAAC1G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAX,EAA+B,CAA/B,CAApB;;IACA,MAAMqZ,GAAG,GAAGpb,QAAQ,CAACsD,UAAU,CAAC5G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAX,EAA+B,CAA/B,CAApB;;IACA,OAAQ,GAAEmZ,EAAG,GAAEC,GAAI,GAAEC,GAAI,EAAzB;EACH,CALa,CAAd;EAMAra,cAAc,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IACpD,MAAM+Z,EAAE,GAAGnY,QAAQ,CAACxG,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAnB;;IACA,MAAMoZ,GAAG,GAAGnb,QAAQ,CAACoD,UAAU,CAAC1G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAX,EAA+B,CAA/B,CAApB;;IACA,OAAQ,GAAEsZ,EAAG,GAAEF,GAAI,EAAnB;EACH,CAJa,CAAd;EAKApa,cAAc,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IACtD,MAAM+Z,EAAE,GAAGnY,QAAQ,CAACxG,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAnB;;IACA,MAAMoZ,GAAG,GAAGnb,QAAQ,CAACoD,UAAU,CAAC1G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAX,EAA+B,CAA/B,CAApB;;IACA,MAAMqZ,GAAG,GAAGpb,QAAQ,CAACsD,UAAU,CAAC5G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAX,EAA+B,CAA/B,CAApB;;IACA,OAAQ,GAAEsZ,EAAG,GAAEF,GAAI,GAAEC,GAAI,EAAzB;EACH,CALa,CAAd;;EAMA,SAASzS,QAAT,CAAkB3H,KAAlB,EAAyBsa,SAAzB,EAAoC;IAChCva,cAAc,CAACC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,UAAUtE,IAAV,EAAgB4E,IAAhB,EAAsB;MACpD,OAAOA,IAAI,CAACC,MAAL,CAAYoH,QAAZ,CAAqBzF,QAAQ,CAACxG,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAA7B,EAAiDqB,UAAU,CAAC1G,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAA3D,EAA+EuZ,SAA/E,CAAP;IACH,CAFa,CAAd;EAGH;;EACD3S,QAAQ,CAAC,GAAD,EAAM,IAAN,CAAR;EACAA,QAAQ,CAAC,GAAD,EAAM,KAAN,CAAR,CAhDgB,CAiDhB;;EACAlK,YAAY,CAAC,MAAD,EAAS,GAAT,CAAZ,CAlDgB,CAmDhB;;EACAiJ,eAAe,CAAC,MAAD,EAAS,EAAT,CAAf,CApDgB,CAqDhB;;EACA,SAAS6T,aAAT,CAAuBlV,QAAvB,EAAiC9E,MAAjC,EAAyC;IACrC,OAAOA,MAAM,CAACia,cAAd;EACH;;EACDtV,aAAa,CAAC,GAAD,EAAMqV,aAAN,CAAb;EACArV,aAAa,CAAC,GAAD,EAAMqV,aAAN,CAAb;EACArV,aAAa,CAAC,GAAD,EAAMb,SAAN,CAAb;EACAa,aAAa,CAAC,GAAD,EAAMb,SAAN,CAAb;EACAa,aAAa,CAAC,GAAD,EAAMb,SAAN,CAAb;EACAa,aAAa,CAAC,IAAD,EAAOb,SAAP,EAAkBJ,MAAlB,CAAb;EACAiB,aAAa,CAAC,IAAD,EAAOb,SAAP,EAAkBJ,MAAlB,CAAb;EACAiB,aAAa,CAAC,IAAD,EAAOb,SAAP,EAAkBJ,MAAlB,CAAb;EACAiB,aAAa,CAAC,KAAD,EAAQZ,SAAR,CAAb;EACAY,aAAa,CAAC,OAAD,EAAUX,SAAV,CAAb;EACAW,aAAa,CAAC,KAAD,EAAQZ,SAAR,CAAb;EACAY,aAAa,CAAC,OAAD,EAAUX,SAAV,CAAb;EACA0B,aAAa,CAAC,CAAC,GAAD,EAAM,IAAN,CAAD,EAAcvH,IAAd,CAAb;EACAuH,aAAa,CAAC,CAAC,GAAD,EAAM,IAAN,CAAD,EAAc,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IACvD,MAAMqU,MAAM,GAAG1d,KAAK,CAACb,KAAD,CAApB;IACAwE,KAAK,CAAChC,IAAD,CAAL,GAAc+b,MAAM,KAAK,EAAX,GAAgB,CAAhB,GAAoBA,MAAlC;IACA,OAAOrU,MAAP;EACH,CAJY,CAAb;EAKAH,aAAa,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IACtDA,MAAM,CAACsU,KAAP,GAAetU,MAAM,CAAC2C,OAAP,CAAeyJ,IAAf,CAAoBtW,KAApB,CAAf;IACAkK,MAAM,CAACuU,SAAP,GAAmBze,KAAnB;IACA,OAAOkK,MAAP;EACH,CAJY,CAAb;EAKAH,aAAa,CAAC,CAAC,GAAD,EAAM,IAAN,CAAD,EAAc,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IACvD1F,KAAK,CAAChC,IAAD,CAAL,GAAc3B,KAAK,CAACb,KAAD,CAAnB;IACA4L,eAAe,CAAC1B,MAAD,CAAf,CAAwBwU,OAAxB,GAAkC,IAAlC;IACA,OAAOxU,MAAP;EACH,CAJY,CAAb;EAKAH,aAAa,CAAC,KAAD,EAAQ,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IACjD,MAAMyU,GAAG,GAAG3e,KAAK,CAACU,MAAN,GAAe,CAA3B;IACA8D,KAAK,CAAChC,IAAD,CAAL,GAAc3B,KAAK,CAACb,KAAK,CAACyD,MAAN,CAAa,CAAb,EAAgBkb,GAAhB,CAAD,CAAnB;IACAna,KAAK,CAAC/B,MAAD,CAAL,GAAgB5B,KAAK,CAACb,KAAK,CAACyD,MAAN,CAAakb,GAAb,CAAD,CAArB;IACA/S,eAAe,CAAC1B,MAAD,CAAf,CAAwBwU,OAAxB,GAAkC,IAAlC;IACA,OAAOxU,MAAP;EACH,CANY,CAAb;EAOAH,aAAa,CAAC,OAAD,EAAU,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IACnD,MAAM0U,IAAI,GAAG5e,KAAK,CAACU,MAAN,GAAe,CAA5B;IACA,MAAMme,IAAI,GAAG7e,KAAK,CAACU,MAAN,GAAe,CAA5B;IACA8D,KAAK,CAAChC,IAAD,CAAL,GAAc3B,KAAK,CAACb,KAAK,CAACyD,MAAN,CAAa,CAAb,EAAgBmb,IAAhB,CAAD,CAAnB;IACApa,KAAK,CAAC/B,MAAD,CAAL,GAAgB5B,KAAK,CAACb,KAAK,CAACyD,MAAN,CAAamb,IAAb,EAAmB,CAAnB,CAAD,CAArB;IACApa,KAAK,CAAC9B,MAAD,CAAL,GAAgB7B,KAAK,CAACb,KAAK,CAACyD,MAAN,CAAaob,IAAb,CAAD,CAArB;IACAjT,eAAe,CAAC1B,MAAD,CAAf,CAAwBwU,OAAxB,GAAkC,IAAlC;IACA,OAAOxU,MAAP;EACH,CARY,CAAb;EASAH,aAAa,CAAC,KAAD,EAAQ,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IACjD,MAAMyU,GAAG,GAAG3e,KAAK,CAACU,MAAN,GAAe,CAA3B;IACA8D,KAAK,CAAChC,IAAD,CAAL,GAAc3B,KAAK,CAACb,KAAK,CAACyD,MAAN,CAAa,CAAb,EAAgBkb,GAAhB,CAAD,CAAnB;IACAna,KAAK,CAAC/B,MAAD,CAAL,GAAgB5B,KAAK,CAACb,KAAK,CAACyD,MAAN,CAAakb,GAAb,CAAD,CAArB;IACA,OAAOzU,MAAP;EACH,CALY,CAAb;EAMAH,aAAa,CAAC,OAAD,EAAU,UAAU/J,KAAV,EAAiBwE,KAAjB,EAAwB0F,MAAxB,EAAgC;IACnD,MAAM0U,IAAI,GAAG5e,KAAK,CAACU,MAAN,GAAe,CAA5B;IACA,MAAMme,IAAI,GAAG7e,KAAK,CAACU,MAAN,GAAe,CAA5B;IACA8D,KAAK,CAAChC,IAAD,CAAL,GAAc3B,KAAK,CAACb,KAAK,CAACyD,MAAN,CAAa,CAAb,EAAgBmb,IAAhB,CAAD,CAAnB;IACApa,KAAK,CAAC/B,MAAD,CAAL,GAAgB5B,KAAK,CAACb,KAAK,CAACyD,MAAN,CAAamb,IAAb,EAAmB,CAAnB,CAAD,CAArB;IACApa,KAAK,CAAC9B,MAAD,CAAL,GAAgB7B,KAAK,CAACb,KAAK,CAACyD,MAAN,CAAaob,IAAb,CAAD,CAArB;IACA,OAAO3U,MAAP;EACH,CAPY,CAAb;AAQH,C,CAED;;;AACA,MAAM4U,OAAO,GAAG,EAAhB;AACA,MAAMC,cAAc,GAAG,EAAvB;AACA,IAAIC,YAAJ;;AACA,SAASC,eAAT,CAAyB/M,GAAzB,EAA8B;EAC1B,OAAOA,GAAG,GAAGA,GAAG,CAACvQ,WAAJ,GAAkBsD,OAAlB,CAA0B,GAA1B,EAA+B,GAA/B,CAAH,GAAyCiN,GAAnD;AACH,C,CACD;AACA;AACA;AACA;;;AACA,SAASgN,YAAT,CAAsBC,KAAtB,EAA6B;EACzB,IAAIC,IAAJ;EACA,IAAI/a,MAAJ;EACA,IAAIM,CAAC,GAAG,CAAR;;EACA,OAAOA,CAAC,GAAGwa,KAAK,CAACze,MAAjB,EAAyB;IACrB,MAAMoQ,KAAK,GAAGmO,eAAe,CAACE,KAAK,CAACxa,CAAD,CAAN,CAAf,CAA0BmM,KAA1B,CAAgC,GAAhC,CAAd;IACA,IAAI9L,CAAC,GAAG8L,KAAK,CAACpQ,MAAd;IACA0e,IAAI,GAAGH,eAAe,CAACE,KAAK,CAACxa,CAAC,GAAG,CAAL,CAAN,CAAtB;IACAya,IAAI,GAAGA,IAAI,GAAGA,IAAI,CAACtO,KAAL,CAAW,GAAX,CAAH,GAAqB,IAAhC;;IACA,OAAO9L,CAAC,GAAG,CAAX,EAAc;MACVX,MAAM,GAAGgb,UAAU,CAACvO,KAAK,CAAC8B,KAAN,CAAY,CAAZ,EAAe5N,CAAf,EAAkBuS,IAAlB,CAAuB,GAAvB,CAAD,CAAnB;;MACA,IAAIlT,MAAJ,EAAY;QACR,OAAOA,MAAP;MACH;;MACD,IAAI+a,IAAI,IAAIA,IAAI,CAAC1e,MAAL,IAAesE,CAAvB,IAA4BkU,aAAa,CAACpI,KAAD,EAAQsO,IAAR,EAAc,IAAd,CAAb,IAAoCpa,CAAC,GAAG,CAAxE,EAA2E;QACvE;QACA;MACH;;MACDA,CAAC;IACJ;;IACDL,CAAC;EACJ;;EACD,OAAO,IAAP;AACH;;AACD,SAAS2a,YAAT,CAAsBC,YAAtB,EAAoCC,WAApC,EAAiD;EAC7C,MAAMtQ,GAAG,GAAGhQ,MAAM,CAACiO,MAAP,CAAc,EAAd,EAAkBoS,YAAlB,CAAZ;;EACA,KAAK,MAAME,SAAX,IAAwBD,WAAxB,EAAqC;IACjC,IAAI,CAACtf,UAAU,CAACsf,WAAD,EAAcC,SAAd,CAAf,EAAyC;MACrC;IACH;;IACD,IAAInf,QAAQ,CAACif,YAAY,CAACE,SAAD,CAAb,CAAR,IAAqCnf,QAAQ,CAACkf,WAAW,CAACC,SAAD,CAAZ,CAAjD,EAA2E;MACvEvQ,GAAG,CAACuQ,SAAD,CAAH,GAAiB,EAAjB;MACAvgB,MAAM,CAACiO,MAAP,CAAc+B,GAAG,CAACuQ,SAAD,CAAjB,EAA8BF,YAAY,CAACE,SAAD,CAA1C;MACAvgB,MAAM,CAACiO,MAAP,CAAc+B,GAAG,CAACuQ,SAAD,CAAjB,EAA8BD,WAAW,CAACC,SAAD,CAAzC;IACH,CAJD,MAKK,IAAID,WAAW,CAACC,SAAD,CAAX,IAA0B,IAA9B,EAAoC;MACrCvQ,GAAG,CAACuQ,SAAD,CAAH,GAAiBD,WAAW,CAACC,SAAD,CAA5B;IACH,CAFI,MAGA;MACD,OAAOvQ,GAAG,CAACuQ,SAAD,CAAV;IACH;EACJ;;EACD,KAAK,MAAMC,UAAX,IAAyBH,YAAzB,EAAuC;IACnC,IAAIrf,UAAU,CAACqf,YAAD,EAAeG,UAAf,CAAV,IACA,CAACxf,UAAU,CAACsf,WAAD,EAAcE,UAAd,CADX,IAEApf,QAAQ,CAACif,YAAY,CAACG,UAAD,CAAb,CAFZ,EAEwC;MACpC;MACAxQ,GAAG,CAACwQ,UAAD,CAAH,GAAkBxgB,MAAM,CAACiO,MAAP,CAAc,EAAd,EAAkB+B,GAAG,CAACwQ,UAAD,CAArB,CAAlB;IACH;EACJ;;EACD,OAAOxQ,GAAP;AACH;;AACD,SAASmQ,UAAT,CAAoBM,IAApB,EAA0B;EACtB;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAI,CAACb,OAAO,CAACa,IAAD,CAAZ,EAAoB;IAChBC,OAAO,CAACC,KAAR,CAAe,6CAA4CF,IAAK,mBAAhE,EADgB,CAEhB;EACH;;EACD,OAAOb,OAAO,CAACa,IAAD,CAAd;AACH,C,CACD;AACA;AACA;;;AACA,SAASG,kBAAT,CAA4B5N,GAA5B,EAAiC6N,MAAjC,EAAyC;EACrC,IAAIC,IAAJ;;EACA,IAAI9N,GAAJ,EAAS;IACL,IAAItR,WAAW,CAACmf,MAAD,CAAf,EAAyB;MACrBC,IAAI,GAAGnG,SAAS,CAAC3H,GAAD,CAAhB;IACH,CAFD,MAGK,IAAIrT,QAAQ,CAACqT,GAAD,CAAZ,EAAmB;MACpB8N,IAAI,GAAGC,YAAY,CAAC/N,GAAD,EAAM6N,MAAN,CAAnB;IACH;;IACD,IAAIC,IAAJ,EAAU;MACNhB,YAAY,GAAGgB,IAAf;IACH;EACJ;;EACD,OAAOhB,YAAY,IAAIA,YAAY,CAACkB,KAApC;AACH;;AACD,SAASD,YAAT,CAAsBN,IAAtB,EAA4BzV,MAA5B,EAAoC;EAChC,IAAIA,MAAM,KAAK,IAAf,EAAqB;IACjB;IACA,OAAO4U,OAAO,CAACa,IAAD,CAAd;IACAX,YAAY,GAAGnF,SAAS,CAAC,IAAD,CAAxB;IACA,OAAO,IAAP;EACH;;EACD,IAAI,CAAC3P,MAAL,EAAa;IACT;EACH;;EACD,IAAIqV,YAAY,GAAGxG,UAAnB;EACA7O,MAAM,CAACiW,IAAP,GAAcR,IAAd;;EACA,IAAIzV,MAAM,CAACkW,YAAP,IAAuB,IAA3B,EAAiC;IAC7B,IAAItB,OAAO,CAAC5U,MAAM,CAACkW,YAAR,CAAP,IAAgC,IAApC,EAA0C;MACtCb,YAAY,GAAGT,OAAO,CAAC5U,MAAM,CAACkW,YAAR,CAAP,CAA6BjO,OAA5C;IACH,CAFD,MAGK;MACD,IAAI,CAAC4M,cAAc,CAAC7U,MAAM,CAACkW,YAAR,CAAnB,EAA0C;QACtCrB,cAAc,CAAC7U,MAAM,CAACkW,YAAR,CAAd,GAAsC,EAAtC;MACH;;MACDrB,cAAc,CAAC7U,MAAM,CAACkW,YAAR,CAAd,CAAoChJ,IAApC,CAAyC;QAAEuI,IAAF;QAAQzV;MAAR,CAAzC;MACA,OAAO,IAAP;IACH;EACJ;;EACD4U,OAAO,CAACa,IAAD,CAAP,GAAgB,IAAI7N,MAAJ,CAAWwN,YAAY,CAACC,YAAD,EAAerV,MAAf,CAAvB,CAAhB;;EACA,IAAI6U,cAAc,CAACY,IAAD,CAAlB,EAA0B;IACtBZ,cAAc,CAACY,IAAD,CAAd,CAAqBU,OAArB,CAA6B,UAAU9hB,CAAV,EAAa;MACtC0hB,YAAY,CAAC1hB,CAAC,CAACohB,IAAH,EAASphB,CAAC,CAAC2L,MAAX,CAAZ;IACH,CAFD;EAGH,CA7B+B,CA8BhC;EACA;EACA;;;EACA4V,kBAAkB,CAACH,IAAD,CAAlB;EACA,OAAOb,OAAO,CAACa,IAAD,CAAd;AACH;;AACD,SAASW,YAAT,CAAsBX,IAAtB,EAA4BzV,MAA5B,EAAoC;EAChC,IAAIiI,OAAO,GAAGjI,MAAd;;EACA,IAAIiI,OAAO,IAAI,IAAf,EAAqB;IACjB,IAAIoN,YAAY,GAAGxG,UAAnB,CADiB,CAEjB;;IACA,MAAMwH,SAAS,GAAGlB,UAAU,CAACM,IAAD,CAA5B;;IACA,IAAIY,SAAS,IAAI,IAAjB,EAAuB;MACnBhB,YAAY,GAAGgB,SAAS,CAACpO,OAAzB;IACH;;IACDA,OAAO,GAAGmN,YAAY,CAACC,YAAD,EAAepN,OAAf,CAAtB;IACA,MAAM9N,MAAM,GAAG,IAAIyN,MAAJ,CAAWK,OAAX,CAAf;IACA9N,MAAM,CAAC+b,YAAP,GAAsBtB,OAAO,CAACa,IAAD,CAA7B;IACAb,OAAO,CAACa,IAAD,CAAP,GAAgBtb,MAAhB,CAViB,CAWjB;;IACAyb,kBAAkB,CAACH,IAAD,CAAlB;EACH,CAbD,MAcK;IACD;IACA,IAAIb,OAAO,CAACa,IAAD,CAAP,IAAiB,IAArB,EAA2B;MACvB,IAAIb,OAAO,CAACa,IAAD,CAAP,CAAcS,YAAd,IAA8B,IAAlC,EAAwC;QACpCtB,OAAO,CAACa,IAAD,CAAP,GAAgBb,OAAO,CAACa,IAAD,CAAP,CAAcS,YAA9B;MACH,CAFD,MAGK,IAAItB,OAAO,CAACa,IAAD,CAAP,IAAiB,IAArB,EAA2B;QAC5B,OAAOb,OAAO,CAACa,IAAD,CAAd;MACH;IACJ;EACJ;;EACD,OAAOb,OAAO,CAACa,IAAD,CAAd;AACH,C,CACD;;;AACA,SAAS9F,SAAT,CAAmB3H,GAAnB,EAAwB;EACpBsO,gBAAgB;;EAChB,IAAI,CAACtO,GAAL,EAAU;IACN,OAAO8M,YAAP;EACH,CAJmB,CAKpB;;;EACA,MAAMlK,IAAI,GAAG/U,OAAO,CAACmS,GAAD,CAAP,GAAeA,GAAf,GAAqB,CAACA,GAAD,CAAlC;;EACA,OAAOgN,YAAY,CAACpK,IAAD,CAAnB;AACH;;AACD,SAAS2L,WAAT,GAAuB;EACnB,OAAOvhB,MAAM,CAACwhB,IAAP,CAAY5B,OAAZ,CAAP;AACH;;AACD,SAAS0B,gBAAT,GAA4B;EACxB,IAAI1B,OAAO,CAAE,IAAF,CAAX,EAAmB;IACf,OAAO/c,SAAP;EACH;;EACD+d,kBAAkB,CAAC,IAAD,EAAO;IACrB9G,sBAAsB,EAAE,sBADH;;IAErBhV,OAAO,CAACvF,GAAD,EAAM;MACT,MAAM2B,CAAC,GAAG3B,GAAG,GAAG,EAAhB;MACA,MAAMsG,MAAM,GAAGlE,KAAK,CAAEpC,GAAG,GAAG,GAAP,GAAc,EAAf,CAAL,KAA4B,CAA5B,GACT,IADS,GAET2B,CAAC,KAAK,CAAN,GAAU,IAAV,GAAiBA,CAAC,KAAK,CAAN,GAAU,IAAV,GAAiBA,CAAC,KAAK,CAAN,GAAU,IAAV,GAAiB,IAFzD;MAGA,OAAO3B,GAAG,GAAGsG,MAAb;IACH;;EARoB,CAAP,CAAlB;EAUA0U,QAAQ;EACRM,YAAY;EACZhO,QAAQ;EACRkP,YAAY;EACZG,aAAa;EACbG,UAAU;EACVC,WAAW;EACXS,UAAU;EACVzP,SAAS;EACTkR,UAAU;EACVC,eAAe;EACfE,QAAQ;EACRzO,aAAa;EACbuR,aAAa;EACbjW,cAAc;AACjB;;AAED,MAAMkW,QAAQ,GAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,EAA6B,MAA7B,EAAqC,KAArC,EAA4C,OAA5C,EAAqD,SAArD,EAAgE,SAAhE,EAA2E,cAA3E,CAAjB;AACA,MAAMC,YAAY,GAAGD,QAAQ,CAACE,MAAT,CAAgB,CAACC,GAAD,EAAMC,KAAN,KAAgB;EACjDD,GAAG,CAACC,KAAD,CAAH,GAAa,IAAb;EACA,OAAOD,GAAP;AACH,CAHoB,EAGlB,EAHkB,CAArB;;AAIA,SAASE,eAAT,CAAyBC,QAAzB,EAAmC;EAC/B,MAAMC,YAAY,GAAGjiB,MAAM,CAACwhB,IAAP,CAAYQ,QAAZ,CAArB;;EACA,IAAIC,YAAY,CACXC,IADD,CACOlP,GAAD,IAAS;IACf,OAAQA,GAAG,IAAI2O,YAAR,IACAK,QAAQ,CAAChP,GAAD,CAAR,KAAkB,IADlB,IAEAxS,KAAK,CAACwhB,QAAQ,CAAChP,GAAD,CAAT,CAFZ;EAGH,CALG,CAAJ,EAKI;IACA,OAAO,KAAP;EACH,CAT8B,CAU/B;EACA;EACA;EACA;EACA;;;EACA,IAAImP,cAAc,GAAG,KAArB;;EACA,KAAK,IAAI1c,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGic,QAAQ,CAAClgB,MAA7B,EAAqC,EAAEiE,CAAvC,EAA0C;IACtC,IAAIuc,QAAQ,CAACN,QAAQ,CAACjc,CAAD,CAAT,CAAZ,EAA2B;MACvB;MACA,IAAI0c,cAAJ,EAAoB;QAChB,OAAO,KAAP;MACH;;MACD,IAAIH,QAAQ,CAACN,QAAQ,CAACjc,CAAD,CAAT,CAAR,KAA0B9D,KAAK,CAACqgB,QAAQ,CAACN,QAAQ,CAACjc,CAAD,CAAT,CAAT,CAAnC,EAA4D;QACxD0c,cAAc,GAAG,IAAjB;MACH;IACJ;EACJ;;EACD,OAAO,IAAP;AACH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;EACrB,OAAOA,MAAM,GAAG,CAAT,GAAa7iB,IAAI,CAACE,KAAL,CAAW2iB,MAAX,CAAb,GAAkC7iB,IAAI,CAACC,IAAL,CAAU4iB,MAAV,CAAzC;AACH;;AAED,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;EACjB,IAAIlU,YAAY,GAAGkU,GAAG,CAACC,aAAvB;EACA,IAAIC,IAAI,GAAGF,GAAG,CAACG,KAAf;EACA,IAAIlV,MAAM,GAAG+U,GAAG,CAACjO,OAAjB;EACA,MAAMwM,IAAI,GAAGyB,GAAG,CAACI,KAAjB,CAJiB,CAKjB;EACA;;EACA,IAAI,EAAGtU,YAAY,IAAI,CAAhB,IAAqBoU,IAAI,IAAI,CAA7B,IAAkCjV,MAAM,IAAI,CAA7C,IACDa,YAAY,IAAI,CAAhB,IAAqBoU,IAAI,IAAI,CAA7B,IAAkCjV,MAAM,IAAI,CAD7C,CAAJ,EACsD;IAClDa,YAAY,IAAI+T,OAAO,CAACQ,YAAY,CAACpV,MAAD,CAAZ,GAAuBiV,IAAxB,CAAP,GAAuC,KAAvD;IACAA,IAAI,GAAG,CAAP;IACAjV,MAAM,GAAG,CAAT;EACH,CAZgB,CAajB;EACA;;;EACAsT,IAAI,CAACzS,YAAL,GAAoBA,YAAY,GAAG,IAAnC;EACA,MAAMN,OAAO,GAAGzO,QAAQ,CAAC+O,YAAY,GAAG,IAAhB,CAAxB;EACAyS,IAAI,CAAC/S,OAAL,GAAeA,OAAO,GAAG,EAAzB;EACA,MAAMwJ,OAAO,GAAGjY,QAAQ,CAACyO,OAAO,GAAG,EAAX,CAAxB;EACA+S,IAAI,CAACvJ,OAAL,GAAeA,OAAO,GAAG,EAAzB;EACA,MAAMD,KAAK,GAAGhY,QAAQ,CAACiY,OAAO,GAAG,EAAX,CAAtB;EACAuJ,IAAI,CAACxJ,KAAL,GAAaA,KAAK,GAAG,EAArB;EACAmL,IAAI,IAAInjB,QAAQ,CAACgY,KAAK,GAAG,EAAT,CAAhB,CAtBiB,CAuBjB;;EACA,MAAMuL,cAAc,GAAGvjB,QAAQ,CAACwjB,YAAY,CAACL,IAAD,CAAb,CAA/B;EACAjV,MAAM,IAAIqV,cAAV;EACAJ,IAAI,IAAIL,OAAO,CAACQ,YAAY,CAACC,cAAD,CAAb,CAAf,CA1BiB,CA2BjB;;EACA,MAAME,KAAK,GAAGzjB,QAAQ,CAACkO,MAAM,GAAG,EAAV,CAAtB;EACAA,MAAM,IAAI,EAAV;EACAsT,IAAI,CAAChT,GAAL,GAAW2U,IAAX;EACA3B,IAAI,CAAC3Y,KAAL,GAAaqF,MAAb;EACAsT,IAAI,CAAC5Y,IAAL,GAAY6a,KAAZ;EACA,OAAOR,GAAP;AACH;;AACD,SAASO,YAAT,CAAsBhV,GAAtB,EAA2B;EACvB;EACA;EACA,OAAOA,GAAG,GAAG,IAAN,GAAa,MAApB;AACH;;AACD,SAAS8U,YAAT,CAAsBza,KAAtB,EAA6B;EACzB;EACA,OAAOA,KAAK,GAAG,MAAR,GAAiB,IAAxB;AACH;;AAED,IAAIoI,KAAK,GAAG/Q,IAAI,CAAC+Q,KAAjB;AACA,MAAMyS,UAAU,GAAG;EACfzJ,EAAE,EAAE,EADW;EAEf7S,CAAC,EAAE,EAFY;EAGfR,CAAC,EAAE,EAHY;EAIfM,CAAC,EAAE,EAJY;EAKfL,CAAC,EAAE,EALY;EAMfM,CAAC,EAAE,EANY,CAMT;;AANS,CAAnB,C,CAQA;;AACA,SAASwc,iBAAT,CAA2BrjB,GAA3B,EAAgCL,GAAhC,EAAqC0U,aAArC,EAAoDC,QAApD,EAA8D/O,MAA9D,EAAsE;EAClE,OAAOA,MAAM,CAAC6O,YAAP,CAAoBzU,GAAG,IAAI,CAA3B,EAA8B,CAAC,CAAC0U,aAAhC,EAA+CrU,GAA/C,EAAoDsU,QAApD,CAAP;AACH;;AACD,SAASF,YAAT,CAAsBkP,cAAtB,EAAsCjP,aAAtC,EAAqD9O,MAArD,EAA6D;EACzD,MAAM6c,QAAQ,GAAGmB,cAAc,CAACD,cAAD,CAAd,CAA+Blf,GAA/B,EAAjB;EACA,MAAM+J,OAAO,GAAGwC,KAAK,CAACyR,QAAQ,CAACoB,EAAT,CAAY,GAAZ,CAAD,CAArB;EACA,MAAM7L,OAAO,GAAGhH,KAAK,CAACyR,QAAQ,CAACoB,EAAT,CAAY,GAAZ,CAAD,CAArB;EACA,MAAM9L,KAAK,GAAG/G,KAAK,CAACyR,QAAQ,CAACoB,EAAT,CAAY,GAAZ,CAAD,CAAnB;EACA,MAAMX,IAAI,GAAGlS,KAAK,CAACyR,QAAQ,CAACoB,EAAT,CAAY,GAAZ,CAAD,CAAlB;EACA,MAAM5V,MAAM,GAAG+C,KAAK,CAACyR,QAAQ,CAACoB,EAAT,CAAY,GAAZ,CAAD,CAApB;EACA,MAAML,KAAK,GAAGxS,KAAK,CAACyR,QAAQ,CAACoB,EAAT,CAAY,GAAZ,CAAD,CAAnB;EACA,MAAMniB,CAAC,GAAG8M,OAAO,IAAIiV,UAAU,CAAC,IAAD,CAArB,IAA+B,CAAC,GAAD,EAAMjV,OAAN,CAA/B,IACNA,OAAO,GAAGiV,UAAU,CAAC,GAAD,CAApB,IAA6B,CAAC,IAAD,EAAOjV,OAAP,CADvB,IAENwJ,OAAO,IAAI,CAAX,IAAgB,CAAC,GAAD,CAFV,IAGNA,OAAO,GAAGyL,UAAU,CAAC,GAAD,CAApB,IAA6B,CAAC,IAAD,EAAOzL,OAAP,CAHvB,IAIND,KAAK,IAAI,CAAT,IAAc,CAAC,GAAD,CAJR,IAKNA,KAAK,GAAG0L,UAAU,CAAC,GAAD,CAAlB,IAA2B,CAAC,IAAD,EAAO1L,KAAP,CALrB,IAMNmL,IAAI,IAAI,CAAR,IAAa,CAAC,GAAD,CANP,IAONA,IAAI,GAAGO,UAAU,CAAC,GAAD,CAAjB,IAA0B,CAAC,IAAD,EAAOP,IAAP,CAPpB,IAQNjV,MAAM,IAAI,CAAV,IAAe,CAAC,GAAD,CART,IASNA,MAAM,GAAGwV,UAAU,CAAC,GAAD,CAAnB,IAA4B,CAAC,IAAD,EAAOxV,MAAP,CATtB,IAUNuV,KAAK,IAAI,CAAT,IAAc,CAAC,GAAD,CAVR,IAUiB,CAAC,IAAD,EAAOA,KAAP,CAV3B;EAWA,MAAM7hB,CAAC,GAAG,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAagT,aAAb,EAA4B,CAACiP,cAAD,GAAkB,CAA9C,EAAiD/d,MAAjD,CAAV,CAnByD,CAoBzD;EACA;EACA;;EACA,OAAO8d,iBAAiB,CAACje,KAAlB,CAAwB,IAAxB,EAA8B9D,CAA9B,CAAP;AACH,C,CACD;;;AACA,SAASmiB,0BAAT,CAAoCC,gBAApC,EAAsD;EAClD,IAAIA,gBAAgB,KAAKzgB,SAAzB,EAAoC;IAChC,OAAO0N,KAAP;EACH;;EACD,IAAI,OAAQ+S,gBAAR,KAA8B,UAAlC,EAA8C;IAC1C/S,KAAK,GAAG+S,gBAAR;IACA,OAAO,IAAP;EACH;;EACD,OAAO,KAAP;AACH,C,CACD;;;AACA,SAASC,2BAAT,CAAqCC,SAArC,EAAgDC,KAAhD,EAAuD;EACnD,IAAIT,UAAU,CAACQ,SAAD,CAAV,KAA0B3gB,SAA9B,EAAyC;IACrC,OAAO,KAAP;EACH;;EACD,IAAI4gB,KAAK,KAAK5gB,SAAd,EAAyB;IACrB,OAAOmgB,UAAU,CAACQ,SAAD,CAAjB;EACH;;EACDR,UAAU,CAACQ,SAAD,CAAV,GAAwBC,KAAxB;;EACA,IAAID,SAAS,KAAK,GAAlB,EAAuB;IACnBR,UAAU,CAAC,IAAD,CAAV,GAAmBS,KAAK,GAAG,CAA3B;EACH;;EACD,OAAO,IAAP;AACH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,QAAN,CAAe;EACX7Q,WAAW,CAACmP,QAAD,EAAWhX,MAAM,GAAG,EAApB,EAAwB;IAC/B,KAAK2X,KAAL,GAAa,EAAb;IACA,KAAKhV,OAAL,GAAegN,SAAS,EAAxB;IACA,KAAKhN,OAAL,GAAe3C,MAAM,IAAIA,MAAM,CAAC2C,OAAjB,IAA4BgN,SAAS,EAApD,CAH+B,CAI/B;;IACA,MAAM3X,eAAe,GAAGgf,QAAxB;IACA,MAAMe,KAAK,GAAG/f,eAAe,CAACkF,IAAhB,IAAwB,CAAtC;IACA,MAAMyb,QAAQ,GAAG3gB,eAAe,CAACyZ,OAAhB,IAA2B,CAA5C;IACA,MAAMjP,MAAM,GAAGxK,eAAe,CAACmF,KAAhB,IAAyB,CAAxC;IACA,MAAMyb,KAAK,GAAG5gB,eAAe,CAACgO,IAAhB,IAAwB,CAAtC;IACA,MAAMyR,IAAI,GAAGzf,eAAe,CAAC8K,GAAhB,IAAuB,CAApC;IACA,MAAMwJ,KAAK,GAAGtU,eAAe,CAACsU,KAAhB,IAAyB,CAAvC;IACA,MAAMC,OAAO,GAAGvU,eAAe,CAACuU,OAAhB,IAA2B,CAA3C;IACA,MAAMxJ,OAAO,GAAG/K,eAAe,CAAC+K,OAAhB,IAA2B,CAA3C;IACA,MAAMM,YAAY,GAAGrL,eAAe,CAACqL,YAAhB,IAAgC,CAArD;IACA,KAAKwV,QAAL,GAAgB9B,eAAe,CAAC/e,eAAD,CAA/B,CAf+B,CAgB/B;;IACA,KAAKwf,aAAL,GAAqB,CAACnU,YAAD,GACjBN,OAAO,GAAG,IADO,GAEjBwJ,OAAO,GAAG,EAAV,GAAe,IAFE,GAEK;IACtBD,KAAK,GAAG,IAAR,GAAe,EAAf,GAAoB,EAHxB,CAjB+B,CAoBH;IAC5B;IACA;IACA;;IACA,KAAKoL,KAAL,GAAa,CAACD,IAAD,GACTmB,KAAK,GAAG,CADZ,CAxB+B,CA0B/B;IACA;IACA;;IACA,KAAKtP,OAAL,GAAe,CAAC9G,MAAD,GACXmW,QAAQ,GAAG,CADA,GAEXZ,KAAK,GAAG,EAFZ,CA7B+B,CAgC/B;IACA;IACA;;IACA,OAAOT,MAAM,CAAC,IAAD,CAAb;EACH;;EACDwB,OAAO,GAAG;IACN,OAAO,KAAKD,QAAZ;EACH;;EACDE,QAAQ,CAACC,UAAD,EAAa;IACjB;IACA,IAAI,CAAC,KAAKF,OAAL,EAAL,EAAqB;MACjB,OAAO,KAAKG,UAAL,GAAkBtQ,WAAzB;IACH;;IACD,MAAMxO,MAAM,GAAG,KAAK8e,UAAL,EAAf;IACA,IAAIpe,MAAM,GAAGmO,YAAY,CAAC,IAAD,EAAO,CAACgQ,UAAR,EAAoB7e,MAApB,CAAzB;;IACA,IAAI6e,UAAJ,EAAgB;MACZne,MAAM,GAAGV,MAAM,CAACiP,UAAP,CAAkB,CAAC,IAAnB,EAAyBvO,MAAzB,CAAT;IACH;;IACD,OAAOV,MAAM,CAAC4O,UAAP,CAAkBlO,MAAlB,CAAP;EACH;;EACDoe,UAAU,GAAG;IACT,OAAO,KAAKtW,OAAZ;EACH;;EACDxI,MAAM,CAAC+e,SAAD,EAAY;IACd,IAAI,CAACA,SAAL,EAAgB;MACZ,OAAO,KAAKvW,OAAL,CAAaqT,KAApB;IACH;;IACD,KAAKrT,OAAL,GAAegN,SAAS,CAACuJ,SAAD,CAAT,IAAwB,KAAKvW,OAA5C;IACA,OAAO,IAAP;EACH;;EACD3J,GAAG,GAAG;IACF,MAAMmgB,OAAO,GAAG3kB,IAAI,CAACwE,GAArB;IACA,MAAM8c,IAAI,GAAG,KAAK6B,KAAlB;IACA,KAAKH,aAAL,GAAqB2B,OAAO,CAAC,KAAK3B,aAAN,CAA5B;IACA,KAAKE,KAAL,GAAayB,OAAO,CAAC,KAAKzB,KAAN,CAApB;IACA,KAAKpO,OAAL,GAAe6P,OAAO,CAAC,KAAK7P,OAAN,CAAtB;IACAwM,IAAI,CAACzS,YAAL,GAAoB8V,OAAO,CAACrD,IAAI,CAACzS,YAAN,CAA3B;IACAyS,IAAI,CAAC/S,OAAL,GAAeoW,OAAO,CAACrD,IAAI,CAAC/S,OAAN,CAAtB;IACA+S,IAAI,CAACvJ,OAAL,GAAe4M,OAAO,CAACrD,IAAI,CAACvJ,OAAN,CAAtB;IACAuJ,IAAI,CAACxJ,KAAL,GAAa6M,OAAO,CAACrD,IAAI,CAACxJ,KAAN,CAApB;IACAwJ,IAAI,CAAC3Y,KAAL,GAAagc,OAAO,CAACrD,IAAI,CAAC3Y,KAAN,CAApB;IACA2Y,IAAI,CAAC5Y,IAAL,GAAYic,OAAO,CAACrD,IAAI,CAAC5Y,IAAN,CAAnB;IACA,OAAO,IAAP;EACH;;EACDkb,EAAE,CAACgB,MAAD,EAAS;IACP,IAAI,CAAC,KAAKN,OAAL,EAAL,EAAqB;MACjB,OAAO3W,GAAP;IACH;;IACD,IAAIsV,IAAJ;IACA,IAAIjV,MAAJ;IACA,MAAMa,YAAY,GAAG,KAAKmU,aAA1B;IACA,MAAM5f,KAAK,GAAGD,cAAc,CAACyhB,MAAD,CAA5B;;IACA,IAAIxhB,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,MAAnC,EAA2C;MACvC6f,IAAI,GAAG,KAAKC,KAAL,GAAarU,YAAY,GAAG,KAAnC;MACAb,MAAM,GAAG,KAAK8G,OAAL,GAAewO,YAAY,CAACL,IAAD,CAApC;MACA,OAAO7f,KAAK,KAAK,OAAV,GAAoB4K,MAApB,GAA6BA,MAAM,GAAG,EAA7C;IACH,CAZM,CAaP;;;IACAiV,IAAI,GAAG,KAAKC,KAAL,GAAaljB,IAAI,CAAC+Q,KAAL,CAAWqS,YAAY,CAAC,KAAKtO,OAAN,CAAvB,CAApB;;IACA,QAAQ1R,KAAR;MACI,KAAK,MAAL;QACI,OAAO6f,IAAI,GAAG,CAAP,GAAWpU,YAAY,GAAG,MAAjC;;MACJ,KAAK,KAAL;QACI,OAAOoU,IAAI,GAAGpU,YAAY,GAAG,KAA7B;;MACJ,KAAK,OAAL;QACI,OAAOoU,IAAI,GAAG,EAAP,GAAYpU,YAAY,GAAG,IAAlC;;MACJ,KAAK,SAAL;QACI,OAAOoU,IAAI,GAAG,IAAP,GAAcpU,YAAY,GAAG,GAApC;;MACJ,KAAK,SAAL;QACI,OAAOoU,IAAI,GAAG,KAAP,GAAepU,YAAY,GAAG,IAArC;MACJ;;MACA,KAAK,cAAL;QACI,OAAO7O,IAAI,CAACE,KAAL,CAAW+iB,IAAI,GAAG,KAAlB,IAA2BpU,YAAlC;;MACJ;QACI,MAAM,IAAIgW,KAAJ,CAAW,gBAAezhB,KAAM,EAAhC,CAAN;IAfR;EAiBH;;EACDiF,OAAO,GAAG;IACN,IAAI,CAAC,KAAKic,OAAL,EAAL,EAAqB;MACjB,OAAO3W,GAAP;IACH;;IACD,OAAQ,KAAKqV,aAAL,GACJ,KAAKE,KAAL,GAAa,KADT,GAEH,KAAKpO,OAAL,GAAe,EAAhB,GAAsB,MAFlB,GAGJ3S,KAAK,CAAC,KAAK2S,OAAL,GAAe,EAAhB,CAAL,GAA2B,OAH/B;EAIH;;AAtHU;;AAwHf,SAASgQ,UAAT,CAAoBhjB,GAApB,EAAyB;EACrB,OAAOA,GAAG,YAAYoiB,QAAtB;AACH;;AAED,SAASI,OAAT,CAAiB9Y,MAAjB,EAAyB;EACrB,IAAIA,MAAM,CAAC6Y,QAAP,IAAmB,IAAvB,EAA6B;IACzB,MAAMU,KAAK,GAAG7X,eAAe,CAAC1B,MAAD,CAA7B;IACA,MAAMwZ,WAAW,GAAGzjB,KAAK,CAACd,SAAN,CAAgBiiB,IAAhB,CAAqB/hB,IAArB,CAA0BokB,KAAK,CAACjY,eAAhC,EAAiD,UAAU7G,CAAV,EAAa;MAC9E,OAAOA,CAAC,IAAI,IAAZ;IACH,CAFmB,CAApB;IAGA,IAAIgf,UAAU,GAAG,CAACjkB,KAAK,CAACwK,MAAM,CAACmR,EAAP,IAAanR,MAAM,CAACmR,EAAP,CAAU5b,OAAV,EAAd,CAAN,IACbgkB,KAAK,CAACxY,QAAN,GAAiB,CADJ,IAEb,CAACwY,KAAK,CAAC3Y,KAFM,IAGb,CAAC2Y,KAAK,CAACrY,YAHM,IAIb,CAACqY,KAAK,CAACG,cAJM,IAKb,CAACH,KAAK,CAAC9X,eALM,IAMb,CAAC8X,KAAK,CAACtY,SANM,IAOb,CAACsY,KAAK,CAACpY,aAPM,IAQb,CAACoY,KAAK,CAACnY,eARM,KASZ,CAACmY,KAAK,CAAChY,QAAP,IAAoBgY,KAAK,CAAChY,QAAN,IAAkBiY,WAT1B,CAAjB;;IAUA,IAAIxZ,MAAM,CAACb,OAAX,EAAoB;MAChBsa,UAAU,GAAGA,UAAU,IACnBF,KAAK,CAACvY,aAAN,KAAwB,CADf,IAETuY,KAAK,CAAC1Y,YAAN,CAAmBrK,MAAnB,KAA8B,CAFrB,IAGT+iB,KAAK,CAAC/E,OAAN,KAAkB3c,SAHtB;IAIH;;IACD,IAAI7C,MAAM,CAAC2kB,QAAP,IAAmB,IAAnB,IAA2B,CAAC3kB,MAAM,CAAC2kB,QAAP,CAAgB3Z,MAAhB,CAAhC,EAAyD;MACrDA,MAAM,CAAC6Y,QAAP,GAAkBY,UAAlB;IACH,CAFD,MAGK;MACD,OAAOA,UAAP;IACH;EACJ;;EACD,OAAOzZ,MAAM,CAAC6Y,QAAd;AACH;;AACD,SAASe,aAAT,CAAuB5Z,MAAvB,EAA+BuZ,KAA/B,EAAsC;EAClCvZ,MAAM,CAACmR,EAAP,GAAY,IAAIpc,IAAJ,CAASoN,GAAT,CAAZ;EACAnN,MAAM,CAACiO,MAAP,CAAcvB,eAAe,CAAC1B,MAAD,CAA7B,EAAuCuZ,KAAK,IAAI;IAAEnY,eAAe,EAAE;EAAnB,CAAhD;EACA,OAAOpB,MAAP;AACH;;AACD,SAAS6Z,WAAT,CAAqB7Z,MAArB,EAA6B;EACzBA,MAAM,CAAC6Y,QAAP,GAAkB,KAAlB;EACA,OAAO7Y,MAAP;AACH,C,CAED;AACA;;;AACA,MAAM8Z,gBAAgB,GAAG,kJAAzB;AACA,MAAMC,aAAa,GAAG,6IAAtB;AACA,MAAMC,OAAO,GAAG,uBAAhB;AACA,MAAMC,QAAQ,GAAG,CACb,CAAC,cAAD,EAAiB,qBAAjB,EAAwC,IAAxC,CADa,EAEb,CAAC,YAAD,EAAe,iBAAf,EAAkC,IAAlC,CAFa,EAGb,CAAC,cAAD,EAAiB,gBAAjB,EAAmC,IAAnC,CAHa,EAIb,CAAC,YAAD,EAAe,aAAf,EAA8B,KAA9B,CAJa,EAKb,CAAC,UAAD,EAAa,aAAb,EAA4B,IAA5B,CALa,EAMb,CAAC,SAAD,EAAY,YAAZ,EAA0B,KAA1B,CANa,EAOb,CAAC,YAAD,EAAe,YAAf,EAA6B,IAA7B,CAPa,EAQb,CAAC,UAAD,EAAa,OAAb,EAAsB,IAAtB,CARa,EASb;AACA,CAAC,YAAD,EAAe,aAAf,EAA8B,IAA9B,CAVa,EAWb,CAAC,WAAD,EAAc,aAAd,EAA6B,KAA7B,CAXa,EAYb,CAAC,SAAD,EAAY,OAAZ,EAAqB,IAArB,CAZa,CAAjB,C,CAcA;;AACA,MAAMC,QAAQ,GAAG,CACb,CAAC,eAAD,EAAkB,qBAAlB,CADa,EAEb,CAAC,eAAD,EAAkB,oBAAlB,CAFa,EAGb,CAAC,UAAD,EAAa,gBAAb,CAHa,EAIb,CAAC,OAAD,EAAU,WAAV,CAJa,EAKb,CAAC,aAAD,EAAgB,mBAAhB,CALa,EAMb,CAAC,aAAD,EAAgB,kBAAhB,CANa,EAOb,CAAC,QAAD,EAAW,cAAX,CAPa,EAQb,CAAC,MAAD,EAAS,UAAT,CARa,EASb,CAAC,IAAD,EAAO,MAAP,CATa,CAAjB;AAWA,MAAMC,eAAe,GAAG,qBAAxB;AACA,MAAMC,UAAU,GAAG;EACfC,EAAE,EAAE,CADW;EAEfC,GAAG,EAAE,CAFU;EAGfC,GAAG,EAAE,CAAC,CAAD,GAAK,EAHK;EAIfC,GAAG,EAAE,CAAC,CAAD,GAAK,EAJK;EAKfC,GAAG,EAAE,CAAC,CAAD,GAAK,EALK;EAMfC,GAAG,EAAE,CAAC,CAAD,GAAK,EANK;EAOfC,GAAG,EAAE,CAAC,CAAD,GAAK,EAPK;EAQfC,GAAG,EAAE,CAAC,CAAD,GAAK,EARK;EASfC,GAAG,EAAE,CAAC,CAAD,GAAK,EATK;EAUfC,GAAG,EAAE,CAAC,CAAD,GAAK;AAVK,CAAnB,C,CAYA;;AACA,MAAMtZ,OAAO,GAAG,yLAAhB,C,CACA;;AACA,SAASuZ,aAAT,CAAuB/a,MAAvB,EAA+B;EAC3B,IAAI,CAACrL,QAAQ,CAACqL,MAAM,CAACgb,EAAR,CAAb,EAA0B;IACtB,OAAOhb,MAAP;EACH;;EACD,MAAMlK,KAAK,GAAGkK,MAAM,CAACgb,EAArB;EACA,MAAMzgB,KAAK,GAAGuf,gBAAgB,CAACmB,IAAjB,CAAsBnlB,KAAtB,KAAgCikB,aAAa,CAACkB,IAAd,CAAmBnlB,KAAnB,CAA9C;EACA,IAAIolB,SAAJ;EACA,IAAIC,UAAJ;EACA,IAAIC,UAAJ;EACA,IAAIC,QAAJ;;EACA,IAAI,CAAC9gB,KAAL,EAAY;IACRyF,MAAM,CAAC6Y,QAAP,GAAkB,KAAlB;IACA,OAAO7Y,MAAP;EACH,CAb0B,CAc3B;;;EACA,IAAIvF,CAAJ;EACA,IAAI6gB,CAAJ;;EACA,KAAK7gB,CAAC,GAAG,CAAJ,EAAO6gB,CAAC,GAAGrB,QAAQ,CAACzjB,MAAzB,EAAiCiE,CAAC,GAAG6gB,CAArC,EAAwC7gB,CAAC,EAAzC,EAA6C;IACzC,IAAIwf,QAAQ,CAACxf,CAAD,CAAR,CAAY,CAAZ,EAAewgB,IAAf,CAAoB1gB,KAAK,CAAC,CAAD,CAAzB,CAAJ,EAAmC;MAC/B4gB,UAAU,GAAGlB,QAAQ,CAACxf,CAAD,CAAR,CAAY,CAAZ,CAAb;MACAygB,SAAS,GAAGjB,QAAQ,CAACxf,CAAD,CAAR,CAAY,CAAZ,MAAmB,KAA/B;MACA;IACH;EACJ;;EACD,IAAI0gB,UAAU,IAAI,IAAlB,EAAwB;IACpBnb,MAAM,CAAC6Y,QAAP,GAAkB,KAAlB;IACA,OAAO7Y,MAAP;EACH;;EACD,IAAIzF,KAAK,CAAC,CAAD,CAAT,EAAc;IACV,KAAKE,CAAC,GAAG,CAAJ,EAAO6gB,CAAC,GAAGpB,QAAQ,CAAC1jB,MAAzB,EAAiCiE,CAAC,GAAG6gB,CAArC,EAAwC7gB,CAAC,EAAzC,EAA6C;MACzC,IAAIyf,QAAQ,CAACzf,CAAD,CAAR,CAAY,CAAZ,EAAewgB,IAAf,CAAoB1gB,KAAK,CAAC,CAAD,CAAzB,CAAJ,EAAmC;QAC/B;QACA6gB,UAAU,GAAG,CAAC7gB,KAAK,CAAC,CAAD,CAAL,IAAY,GAAb,IAAoB2f,QAAQ,CAACzf,CAAD,CAAR,CAAY,CAAZ,CAAjC;QACA;MACH;IACJ;;IACD,IAAI2gB,UAAU,IAAI,IAAlB,EAAwB;MACpBpb,MAAM,CAAC6Y,QAAP,GAAkB,KAAlB;MACA,OAAO7Y,MAAP;IACH;EACJ;;EACD,IAAI,CAACkb,SAAD,IAAcE,UAAU,IAAI,IAAhC,EAAsC;IAClCpb,MAAM,CAAC6Y,QAAP,GAAkB,KAAlB;IACA,OAAO7Y,MAAP;EACH;;EACD,IAAIzF,KAAK,CAAC,CAAD,CAAT,EAAc;IACV,IAAIyf,OAAO,CAACiB,IAAR,CAAa1gB,KAAK,CAAC,CAAD,CAAlB,CAAJ,EAA4B;MACxB8gB,QAAQ,GAAG,GAAX;IACH,CAFD,MAGK;MACDrb,MAAM,CAAC6Y,QAAP,GAAkB,KAAlB;MACA,OAAO7Y,MAAP;IACH;EACJ;;EACDA,MAAM,CAACub,EAAP,GAAYJ,UAAU,IAAIC,UAAU,IAAI,EAAlB,CAAV,IAAmCC,QAAQ,IAAI,EAA/C,CAAZ;EACA,OAAOG,yBAAyB,CAACxb,MAAD,CAAhC;AACH;;AACD,SAASyb,yBAAT,CAAmCC,OAAnC,EAA4CC,QAA5C,EAAsDC,MAAtD,EAA8DC,OAA9D,EAAuEC,SAAvE,EAAkFC,SAAlF,EAA6F;EACzF,MAAMC,MAAM,GAAG,CACXC,cAAc,CAACP,OAAD,CADH,EAEX7U,wBAAwB,CAACiG,OAAzB,CAAiC6O,QAAjC,CAFW,EAGX5Z,QAAQ,CAAC6Z,MAAD,EAAS,EAAT,CAHG,EAIX7Z,QAAQ,CAAC8Z,OAAD,EAAU,EAAV,CAJG,EAKX9Z,QAAQ,CAAC+Z,SAAD,EAAY,EAAZ,CALG,CAAf;;EAOA,IAAIC,SAAJ,EAAe;IACXC,MAAM,CAAC9O,IAAP,CAAYnL,QAAQ,CAACga,SAAD,EAAY,EAAZ,CAApB;EACH;;EACD,OAAOC,MAAP;AACH;;AACD,SAASC,cAAT,CAAwBP,OAAxB,EAAiC;EAC7B,MAAMxe,IAAI,GAAG6E,QAAQ,CAAC2Z,OAAD,EAAU,EAAV,CAArB;EACA,OAAOxe,IAAI,IAAI,EAAR,GAAaA,IAAI,GAAG,IAApB,GAA2BA,IAAlC;AACH;;AACD,SAASgf,iBAAT,CAA2BtnB,GAA3B,EAAgC;EAC5B;EACA,OAAOA,GAAG,CACLmG,OADE,CACM,mBADN,EAC2B,GAD3B,EAEFA,OAFE,CAEM,UAFN,EAEkB,GAFlB,EAEuBohB,IAFvB,EAAP;AAGH;;AACD,SAASC,YAAT,CAAsBC,UAAtB,EAAkCC,WAAlC,EAA+Ctc,MAA/C,EAAuD;EACnD,IAAIqc,UAAJ,EAAgB;IACZ;IACA,MAAME,eAAe,GAAGxV,0BAA0B,CAAC+F,OAA3B,CAAmCuP,UAAnC,CAAxB;IACA,MAAMG,aAAa,GAAG,IAAIznB,IAAJ,CAASunB,WAAW,CAAC,CAAD,CAApB,EAAyBA,WAAW,CAAC,CAAD,CAApC,EAAyCA,WAAW,CAAC,CAAD,CAApD,EAAyDhgB,MAAzD,EAAtB;;IACA,IAAIigB,eAAe,KAAKC,aAAxB,EAAuC;MACnC9a,eAAe,CAAC1B,MAAD,CAAf,CAAwByB,eAAxB,GAA0C,IAA1C;MACAzB,MAAM,CAAC6Y,QAAP,GAAkB,KAAlB;MACA,OAAO,KAAP;IACH;EACJ;;EACD,OAAO,IAAP;AACH;;AACD,SAAS4D,eAAT,CAAyBC,SAAzB,EAAoCC,cAApC,EAAoDC,SAApD,EAA+D;EAC3D,IAAIF,SAAJ,EAAe;IACX,OAAOtC,UAAU,CAACsC,SAAD,CAAjB;EACH,CAFD,MAGK,IAAIC,cAAJ,EAAoB;IACrB;IACA,OAAO,CAAP;EACH,CAHI,MAIA;IACD,MAAME,EAAE,GAAG9a,QAAQ,CAAC6a,SAAD,EAAY,EAAZ,CAAnB;IACA,MAAM1hB,CAAC,GAAG2hB,EAAE,GAAG,GAAf;IACA,MAAMrhB,CAAC,GAAG,CAACqhB,EAAE,GAAG3hB,CAAN,IAAW,GAArB;IACA,OAAOM,CAAC,GAAG,EAAJ,GAASN,CAAhB;EACH;AACJ,C,CACD;;;AACA,SAAS4hB,iBAAT,CAA2B9c,MAA3B,EAAmC;EAC/B,IAAI,CAACrL,QAAQ,CAACqL,MAAM,CAACgb,EAAR,CAAb,EAA0B;IACtB,OAAOhb,MAAP;EACH;;EACD,MAAMzF,KAAK,GAAGiH,OAAO,CAACyZ,IAAR,CAAaiB,iBAAiB,CAAClc,MAAM,CAACgb,EAAR,CAA9B,CAAd;;EACA,IAAI,CAACzgB,KAAL,EAAY;IACR,OAAOsf,WAAW,CAAC7Z,MAAD,CAAlB;EACH;;EACD,MAAM+c,WAAW,GAAGtB,yBAAyB,CAAClhB,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,EAAqBA,KAAK,CAAC,CAAD,CAA1B,EAA+BA,KAAK,CAAC,CAAD,CAApC,EAAyCA,KAAK,CAAC,CAAD,CAA9C,EAAmDA,KAAK,CAAC,CAAD,CAAxD,CAA7C;;EACA,IAAI,CAAC6hB,YAAY,CAAC7hB,KAAK,CAAC,CAAD,CAAN,EAAWwiB,WAAX,EAAwB/c,MAAxB,CAAjB,EAAkD;IAC9C,OAAOA,MAAP;EACH;;EACDA,MAAM,CAACI,EAAP,GAAY2c,WAAZ;EACA/c,MAAM,CAACiS,IAAP,GAAcwK,eAAe,CAACliB,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,EAAqBA,KAAK,CAAC,EAAD,CAA1B,CAA7B;EACAyF,MAAM,CAACmR,EAAP,GAAYnW,aAAa,CAAChB,KAAd,CAAoB,IAApB,EAA0BgG,MAAM,CAACI,EAAjC,CAAZ;;EACAJ,MAAM,CAACmR,EAAP,CAAUjN,aAAV,CAAwBlE,MAAM,CAACmR,EAAP,CAAUlV,aAAV,KAA4B+D,MAAM,CAACiS,IAA3D;;EACAvQ,eAAe,CAAC1B,MAAD,CAAf,CAAwBwB,OAAxB,GAAkC,IAAlC;EACA,OAAOxB,MAAP;AACH,C,CACD;;;AACA,SAASgd,gBAAT,CAA0Bhd,MAA1B,EAAkC;EAC9B,IAAI,CAACrL,QAAQ,CAACqL,MAAM,CAACgb,EAAR,CAAb,EAA0B;IACtB,OAAOhb,MAAP;EACH;;EACD,MAAMT,OAAO,GAAG4a,eAAe,CAACc,IAAhB,CAAqBjb,MAAM,CAACgb,EAA5B,CAAhB;;EACA,IAAIzb,OAAO,KAAK,IAAhB,EAAsB;IAClBS,MAAM,CAACmR,EAAP,GAAY,IAAIpc,IAAJ,CAAS,CAACwK,OAAO,CAAC,CAAD,CAAjB,CAAZ;IACA,OAAOS,MAAP;EACH,CAR6B,CAS9B;EACA;EACA;;;EACA+a,aAAa,CAAC/a,MAAD,CAAb;;EACA,IAAIA,MAAM,CAAC6Y,QAAP,KAAoB,KAAxB,EAA+B;IAC3B,OAAO7Y,MAAM,CAAC6Y,QAAd;EACH,CAFD,MAGK;IACD,OAAO7Y,MAAP;EACH;;EACD8c,iBAAiB,CAAC9c,MAAD,CAAjB;;EACA,IAAIA,MAAM,CAAC6Y,QAAP,KAAoB,KAAxB,EAA+B;IAC3B,OAAO7Y,MAAM,CAAC6Y,QAAd;EACH,CAFD,MAGK;IACD,OAAO7Y,MAAP;EACH,CAzB6B,CA0B9B;EACA;;;EACA,OAAO4Z,aAAa,CAAC5Z,MAAD,CAApB;AACH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,SAASid,UAAT,CAAoB3nB,IAApB,EAA0B+E,MAA1B,EAAkCF,MAAlC,EAA0CQ,KAA1C,EAAiDC,MAAM,GAAG,CAA1D,EAA6D;EACzD,MAAM+H,OAAO,GAAGgN,SAAS,CAACxV,MAAM,IAAI,IAAX,CAAzB;;EACA,IAAI,CAACwI,OAAL,EAAc;IACV,MAAM,IAAI0W,KAAJ,CAAW,WAAUlf,MAAO,0DAA5B,CAAN;EACH;;EACD,MAAM+iB,OAAO,GAAG7iB,MAAM,KAAKM,KAAK,GAAG,wBAAH,GAA8B,sBAAxC,CAAtB;;EACA,MAAME,MAAM,GAAGsiB,YAAY,CAAC7nB,IAAD,EAAO4nB,OAAP,EAAgBva,OAAhB,EAAyBhI,KAAzB,EAAgCC,MAAhC,CAA3B;;EACA,IAAI,CAACC,MAAL,EAAa;IACT,OAAOA,MAAP;EACH;;EACD,OAAO8H,OAAO,CAACoG,UAAR,CAAmBlO,MAAnB,CAAP;AACH,C,CACD;;;AACA,SAASsiB,YAAT,CAAsB7nB,IAAtB,EAA4B4nB,OAA5B,EAAqC/iB,MAArC,EAA6CQ,KAA7C,EAAoDC,MAAM,GAAG,CAA7D,EAAgE;EAC5D,IAAI,CAACvF,WAAW,CAACC,IAAD,CAAhB,EAAwB;IACpB,OAAO6E,MAAM,CAACwO,WAAd;EACH;;EACD,MAAMtO,MAAM,GAAG+iB,YAAY,CAACF,OAAD,EAAU/iB,MAAV,CAA3B;EACAX,eAAe,CAACa,MAAD,CAAf,GAA0Bb,eAAe,CAACa,MAAD,CAAf,IAA2BD,kBAAkB,CAACC,MAAD,CAAvE;EACA,OAAOb,eAAe,CAACa,MAAD,CAAf,CAAwB/E,IAAxB,EAA8B6E,MAA9B,EAAsCQ,KAAtC,EAA6CC,MAA7C,CAAP;AACH;;AACD,SAASwiB,YAAT,CAAsBF,OAAtB,EAA+B/iB,MAA/B,EAAuC;EACnC,IAAIE,MAAM,GAAG6iB,OAAb;EACA,IAAIziB,CAAC,GAAG,CAAR;EACA,MAAM4iB,qBAAqB,GAAG,4CAA9B;;EACA,MAAMC,2BAA2B,GAAIxnB,KAAD,IAAW;IAC3C,OAAOqE,MAAM,CAACsS,cAAP,CAAsB3W,KAAtB,KAAgCA,KAAvC;EACH,CAFD;;EAGAunB,qBAAqB,CAACE,SAAtB,GAAkC,CAAlC;;EACA,OAAO9iB,CAAC,IAAI,CAAL,IAAU4iB,qBAAqB,CAAC5T,IAAtB,CAA2BpP,MAA3B,CAAjB,EAAqD;IACjDA,MAAM,GAAGA,MAAM,CAACU,OAAP,CAAesiB,qBAAf,EAAsCC,2BAAtC,CAAT;IACAD,qBAAqB,CAACE,SAAtB,GAAkC,CAAlC;IACA9iB,CAAC,IAAI,CAAL;EACH;;EACD,OAAOJ,MAAP;AACH,C,CAED;;;AACA,SAASmjB,QAAT,CAAkBvnB,CAAlB,EAAqBC,CAArB,EAAwBunB,CAAxB,EAA2B;EACvB,IAAIxnB,CAAC,IAAI,IAAT,EAAe;IACX,OAAOA,CAAP;EACH;;EACD,IAAIC,CAAC,IAAI,IAAT,EAAe;IACX,OAAOA,CAAP;EACH;;EACD,OAAOunB,CAAP;AACH;;AAED,SAASC,gBAAT,CAA0B1d,MAA1B,EAAkC;EAC9B,MAAM2d,QAAQ,GAAG,IAAI5oB,IAAJ,EAAjB;;EACA,IAAIiL,MAAM,CAACgS,OAAX,EAAoB;IAChB,OAAO,CAAC2L,QAAQ,CAACtiB,cAAT,EAAD,EAA4BsiB,QAAQ,CAAChhB,WAAT,EAA5B,EAAoDghB,QAAQ,CAAClhB,UAAT,EAApD,CAAP;EACH;;EACD,OAAO,CAACkhB,QAAQ,CAAC/hB,WAAT,EAAD,EAAyB+hB,QAAQ,CAACjhB,QAAT,EAAzB,EAA8CihB,QAAQ,CAACnhB,OAAT,EAA9C,CAAP;AACH,C,CACD;AACA;AACA;AACA;;;AACA,SAASohB,eAAT,CAAyB5d,MAAzB,EAAiC;EAC7B,MAAMlK,KAAK,GAAG,EAAd;EACA,IAAI2E,CAAJ;EACA,IAAInF,IAAJ;EACA,IAAIuoB,SAAJ;;EACA,IAAI7d,MAAM,CAACmR,EAAX,EAAe;IACX,OAAOnR,MAAP;EACH;;EACD,MAAM8d,WAAW,GAAGJ,gBAAgB,CAAC1d,MAAD,CAApC,CAR6B,CAS7B;;EACA,IAAIA,MAAM,CAACE,EAAP,IAAaF,MAAM,CAACI,EAAP,CAAU/H,IAAV,KAAmB,IAAhC,IAAwC2H,MAAM,CAACI,EAAP,CAAUhI,KAAV,KAAoB,IAAhE,EAAsE;IAClE2lB,qBAAqB,CAAC/d,MAAD,CAArB;EACH,CAZ4B,CAa7B;;;EACA,IAAIA,MAAM,CAACoF,UAAP,IAAqB,IAAzB,EAA+B;IAC3ByY,SAAS,GAAGL,QAAQ,CAACxd,MAAM,CAACI,EAAP,CAAUjI,IAAV,CAAD,EAAkB2lB,WAAW,CAAC3lB,IAAD,CAA7B,CAApB;;IACA,IAAI6H,MAAM,CAACoF,UAAP,GAAoBpD,UAAU,CAAC6b,SAAD,CAA9B,IAA6C7d,MAAM,CAACoF,UAAP,KAAsB,CAAvE,EAA0E;MACtE1D,eAAe,CAAC1B,MAAD,CAAf,CAAwBge,kBAAxB,GAA6C,IAA7C;IACH;;IACD1oB,IAAI,GAAG,IAAIP,IAAJ,CAASA,IAAI,CAACqG,GAAL,CAASyiB,SAAT,EAAoB,CAApB,EAAuB7d,MAAM,CAACoF,UAA9B,CAAT,CAAP;IACApF,MAAM,CAACI,EAAP,CAAUhI,KAAV,IAAmB9C,IAAI,CAACqH,WAAL,EAAnB;IACAqD,MAAM,CAACI,EAAP,CAAU/H,IAAV,IAAkB/C,IAAI,CAACmH,UAAL,EAAlB;EACH,CAtB4B,CAuB7B;EACA;EACA;EACA;EACA;;;EACA,KAAKhC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAJ,IAASuF,MAAM,CAACI,EAAP,CAAU3F,CAAV,KAAgB,IAArC,EAA2C,EAAEA,CAA7C,EAAgD;IAC5CuF,MAAM,CAACI,EAAP,CAAU3F,CAAV,IAAe3E,KAAK,CAAC2E,CAAD,CAAL,GAAWqjB,WAAW,CAACrjB,CAAD,CAArC;EACH,CA9B4B,CA+B7B;;;EACA,OAAOA,CAAC,GAAG,CAAX,EAAcA,CAAC,EAAf,EAAmB;IACfuF,MAAM,CAACI,EAAP,CAAU3F,CAAV,IAAe3E,KAAK,CAAC2E,CAAD,CAAL,GAAYuF,MAAM,CAACI,EAAP,CAAU3F,CAAV,KAAgB,IAAjB,GAA0BA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAc,CAAxC,GAA6CuF,MAAM,CAACI,EAAP,CAAU3F,CAAV,CAAvE;EACH,CAlC4B,CAmC7B;;;EACA,IAAIuF,MAAM,CAACI,EAAP,CAAU9H,IAAV,MAAoB,EAApB,IACA0H,MAAM,CAACI,EAAP,CAAU7H,MAAV,MAAsB,CADtB,IAEAyH,MAAM,CAACI,EAAP,CAAU5H,MAAV,MAAsB,CAFtB,IAGAwH,MAAM,CAACI,EAAP,CAAU3H,WAAV,MAA2B,CAH/B,EAGkC;IAC9BuH,MAAM,CAACie,QAAP,GAAkB,IAAlB;IACAje,MAAM,CAACI,EAAP,CAAU9H,IAAV,IAAkB,CAAlB;EACH,CA1C4B,CA2C7B;;;EACA0H,MAAM,CAACmR,EAAP,GAAY,CAACnR,MAAM,CAACgS,OAAP,GAAiBhX,aAAjB,GAAiCO,UAAlC,EAA8CvB,KAA9C,CAAoD,IAApD,EAA0DlE,KAA1D,CAAZ;EACA,MAAMooB,eAAe,GAAGle,MAAM,CAACgS,OAAP,GAAiBhS,MAAM,CAACmR,EAAP,CAAU5U,SAAV,EAAjB,GAAyCyD,MAAM,CAACmR,EAAP,CAAU7U,MAAV,EAAjE,CA7C6B,CA8C7B;EACA;;EACA,IAAI0D,MAAM,CAACiS,IAAP,IAAe,IAAnB,EAAyB;IACrBjS,MAAM,CAACmR,EAAP,CAAUjN,aAAV,CAAwBlE,MAAM,CAACmR,EAAP,CAAUlV,aAAV,KAA4B+D,MAAM,CAACiS,IAA3D;EACH;;EACD,IAAIjS,MAAM,CAACie,QAAX,EAAqB;IACjBje,MAAM,CAACI,EAAP,CAAU9H,IAAV,IAAkB,EAAlB;EACH,CArD4B,CAsD7B;;;EACA,IAAI0H,MAAM,CAACE,EAAP,IAAa,OAAOF,MAAM,CAACE,EAAP,CAAU,GAAV,CAAP,KAA0B,WAAvC,IAAsDF,MAAM,CAACE,EAAP,CAAU,GAAV,MAAmBge,eAA7E,EAA8F;IAC1Fxc,eAAe,CAAC1B,MAAD,CAAf,CAAwByB,eAAxB,GAA0C,IAA1C;EACH;;EACD,OAAOzB,MAAP;AACH;;AACD,SAAS+d,qBAAT,CAA+B/d,MAA/B,EAAuC;EACnC,IAAI6Q,QAAJ,EAAc7K,IAAd,EAAoBC,OAApB,EAA6BN,GAA7B,EAAkCC,GAAlC,EAAuCuY,IAAvC,EAA6CC,eAA7C;EACA,MAAMC,CAAC,GAAGre,MAAM,CAACE,EAAjB;;EACA,IAAIme,CAAC,CAAC,IAAD,CAAD,IAAW,IAAX,IAAmBA,CAAC,CAAC,GAAD,CAAD,IAAU,IAA7B,IAAqCA,CAAC,CAAC,GAAD,CAAD,IAAU,IAAnD,EAAyD;IACrD1Y,GAAG,GAAG,CAAN;IACAC,GAAG,GAAG,CAAN,CAFqD,CAGrD;IACA;IACA;IACA;;IACAiL,QAAQ,GAAG2M,QAAQ,CAACa,CAAC,CAAC,IAAD,CAAF,EAAUre,MAAM,CAACI,EAAP,CAAUjI,IAAV,CAAV,EAA2BmO,UAAU,CAAC,IAAIvR,IAAJ,EAAD,EAAa,CAAb,EAAgB,CAAhB,CAAV,CAA6BmI,IAAxD,CAAnB;IACA8I,IAAI,GAAGwX,QAAQ,CAACa,CAAC,CAAC,GAAD,CAAF,EAAS,CAAT,CAAf;IACApY,OAAO,GAAGuX,QAAQ,CAACa,CAAC,CAAC,GAAD,CAAF,EAAS,CAAT,CAAlB;;IACA,IAAIpY,OAAO,GAAG,CAAV,IAAeA,OAAO,GAAG,CAA7B,EAAgC;MAC5BmY,eAAe,GAAG,IAAlB;IACH;EACJ,CAbD,MAcK;IACDzY,GAAG,GAAG3F,MAAM,CAAC2C,OAAP,CAAe6H,KAAf,CAAqB7E,GAA3B;IACAC,GAAG,GAAG5F,MAAM,CAAC2C,OAAP,CAAe6H,KAAf,CAAqB5E,GAA3B;IACA,MAAM0Y,OAAO,GAAGhY,UAAU,CAAC,IAAIvR,IAAJ,EAAD,EAAa4Q,GAAb,EAAkBC,GAAlB,CAA1B;IACAiL,QAAQ,GAAG2M,QAAQ,CAACa,CAAC,CAAC,IAAD,CAAF,EAAUre,MAAM,CAACI,EAAP,CAAUjI,IAAV,CAAV,EAA2BmmB,OAAO,CAACphB,IAAnC,CAAnB,CAJC,CAKD;;IACA8I,IAAI,GAAGwX,QAAQ,CAACa,CAAC,CAAC,GAAD,CAAF,EAASC,OAAO,CAACtY,IAAjB,CAAf;;IACA,IAAIqY,CAAC,CAAC,GAAD,CAAD,IAAU,IAAd,EAAoB;MAChB;MACApY,OAAO,GAAGoY,CAAC,CAAC,GAAD,CAAX;;MACA,IAAIpY,OAAO,GAAG,CAAV,IAAeA,OAAO,GAAG,CAA7B,EAAgC;QAC5BmY,eAAe,GAAG,IAAlB;MACH;IACJ,CAND,MAOK,IAAIC,CAAC,CAAC,GAAD,CAAD,IAAU,IAAd,EAAoB;MACrB;MACApY,OAAO,GAAGoY,CAAC,CAAC,GAAD,CAAD,GAAS1Y,GAAnB;;MACA,IAAI0Y,CAAC,CAAC,GAAD,CAAD,GAAS,CAAT,IAAcA,CAAC,CAAC,GAAD,CAAD,GAAS,CAA3B,EAA8B;QAC1BD,eAAe,GAAG,IAAlB;MACH;IACJ,CANI,MAOA;MACD;MACAnY,OAAO,GAAGN,GAAV;IACH;EACJ;;EACD,IAAIK,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAGQ,WAAW,CAACqK,QAAD,EAAWlL,GAAX,EAAgBC,GAAhB,CAAlC,EAAwD;IACpDlE,eAAe,CAAC1B,MAAD,CAAf,CAAwBue,cAAxB,GAAyC,IAAzC;EACH,CAFD,MAGK,IAAIH,eAAe,IAAI,IAAvB,EAA6B;IAC9B1c,eAAe,CAAC1B,MAAD,CAAf,CAAwBwe,gBAAxB,GAA2C,IAA3C;EACH,CAFI,MAGA;IACDL,IAAI,GAAGpY,kBAAkB,CAAC8K,QAAD,EAAW7K,IAAX,EAAiBC,OAAjB,EAA0BN,GAA1B,EAA+BC,GAA/B,CAAzB;IACA5F,MAAM,CAACI,EAAP,CAAUjI,IAAV,IAAkBgmB,IAAI,CAACjhB,IAAvB;IACA8C,MAAM,CAACoF,UAAP,GAAoB+Y,IAAI,CAAC1Y,SAAzB;EACH;;EACD,OAAOzF,MAAP;AACH;;AAED,SAASye,aAAT,CAAuBze,MAAvB,EAA+B;EAC3B,IAAIe,QAAJ;EACA,MAAM9K,CAAC,GAAG+J,MAAM,CAACI,EAAjB;;EACA,IAAInK,CAAC,IAAIyL,eAAe,CAAC1B,MAAD,CAAf,CAAwBe,QAAxB,KAAqC,CAAC,CAA/C,EAAkD;IAC9C;IACAA,QAAQ,GACJ9K,CAAC,CAACmC,KAAD,CAAD,GAAW,CAAX,IAAgBnC,CAAC,CAACmC,KAAD,CAAD,GAAW,EAA3B,GAAgCA,KAAhC,GACInC,CAAC,CAACoC,IAAD,CAAD,GAAU,CAAV,IAAepC,CAAC,CAACoC,IAAD,CAAD,GAAU6J,WAAW,CAACjM,CAAC,CAACkC,IAAD,CAAF,EAAUlC,CAAC,CAACmC,KAAD,CAAX,CAApC,GAA0DC,IAA1D,GACIpC,CAAC,CAACqC,IAAD,CAAD,GAAU,CAAV,IAAerC,CAAC,CAACqC,IAAD,CAAD,GAAU,EAAzB,IAAgCrC,CAAC,CAACqC,IAAD,CAAD,KAAY,EAAZ,KAAmBrC,CAAC,CAACsC,MAAD,CAAD,KAAc,CAAd,IAAmBtC,CAAC,CAACuC,MAAD,CAAD,KAAc,CAAjC,IAAsCvC,CAAC,CAACwC,WAAD,CAAD,KAAmB,CAA5E,CAAhC,GAAkHH,IAAlH,GACIrC,CAAC,CAACsC,MAAD,CAAD,GAAY,CAAZ,IAAiBtC,CAAC,CAACsC,MAAD,CAAD,GAAY,EAA7B,GAAkCA,MAAlC,GACItC,CAAC,CAACuC,MAAD,CAAD,GAAY,CAAZ,IAAiBvC,CAAC,CAACuC,MAAD,CAAD,GAAY,EAA7B,GAAkCA,MAAlC,GACIvC,CAAC,CAACwC,WAAD,CAAD,GAAiB,CAAjB,IAAsBxC,CAAC,CAACwC,WAAD,CAAD,GAAiB,GAAvC,GAA6CA,WAA7C,GACI,CAAC,CAP7B;;IAQA,IAAIiJ,eAAe,CAAC1B,MAAD,CAAf,CAAwBge,kBAAxB,KAA+Cjd,QAAQ,GAAG5I,IAAX,IAAmB4I,QAAQ,GAAG1I,IAA7E,CAAJ,EAAwF;MACpF0I,QAAQ,GAAG1I,IAAX;IACH;;IACD,IAAIqJ,eAAe,CAAC1B,MAAD,CAAf,CAAwBue,cAAxB,IAA0Cxd,QAAQ,KAAK,CAAC,CAA5D,EAA+D;MAC3DA,QAAQ,GAAGrI,IAAX;IACH;;IACD,IAAIgJ,eAAe,CAAC1B,MAAD,CAAf,CAAwBwe,gBAAxB,IAA4Czd,QAAQ,KAAK,CAAC,CAA9D,EAAiE;MAC7DA,QAAQ,GAAGpI,OAAX;IACH;;IACD+I,eAAe,CAAC1B,MAAD,CAAf,CAAwBe,QAAxB,GAAmCA,QAAnC;EACH;;EACD,OAAOf,MAAP;AACH,C,CAED;AACA;;;AACA,MAAM0e,QAAQ,GAAG,UAAjB,C,CACA;AACA;;AACA,MAAMC,QAAQ,GAAG,UAAjB,C,CACA;;AACA,SAASnD,yBAAT,CAAmCxb,MAAnC,EAA2C;EACvC;EACA,IAAIA,MAAM,CAACub,EAAP,KAAcmD,QAAlB,EAA4B;IACxB,OAAO3D,aAAa,CAAC/a,MAAD,CAApB;EACH;;EACD,IAAIA,MAAM,CAACub,EAAP,KAAcoD,QAAlB,EAA4B;IACxB,OAAO7B,iBAAiB,CAAC9c,MAAD,CAAxB;EACH;;EACDA,MAAM,CAACI,EAAP,GAAY,EAAZ;EACAsB,eAAe,CAAC1B,MAAD,CAAf,CAAwBY,KAAxB,GAAgC,IAAhC;;EACA,IAAI/K,OAAO,CAACmK,MAAM,CAACub,EAAR,CAAP,IAAuB,CAACvb,MAAM,CAACgb,EAAR,IAAchb,MAAM,CAACgb,EAAP,KAAc,CAAvD,EAA2D;IACvD,OAAOhb,MAAP;EACH,CAZsC,CAavC;;;EACA,IAAIlK,KAAK,GAAGkK,MAAM,CAACgb,EAAP,CAAU9lB,QAAV,EAAZ;;EACA,IAAI0pB,sBAAsB,GAAG,CAA7B;EACA,MAAMC,WAAW,GAAG/oB,KAAK,CAACU,MAA1B;EACA,MAAMoJ,MAAM,GAAGwd,YAAY,CAACpd,MAAM,CAACub,EAAR,EAAYvb,MAAM,CAAC2C,OAAnB,CAAZ,CAAwCpI,KAAxC,CAA8Cb,gBAA9C,KAAmE,EAAlF;EACA,IAAIe,CAAJ;EACA,IAAIb,KAAJ;EACA,IAAI0iB,WAAJ;EACA,IAAIwC,OAAJ;;EACA,KAAKrkB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGmF,MAAM,CAACpJ,MAAvB,EAA+BiE,CAAC,EAAhC,EAAoC;IAChCb,KAAK,GAAGgG,MAAM,CAACnF,CAAD,CAAd;IACA6hB,WAAW,GAAG,CAACxmB,KAAK,CAACyE,KAAN,CAAY2E,qBAAqB,CAACtF,KAAD,EAAQoG,MAAM,CAAC2C,OAAf,CAAjC,KAA6D,EAA9D,EAAkE,CAAlE,CAAd;;IACA,IAAI2Z,WAAJ,EAAiB;MACbwC,OAAO,GAAGhpB,KAAK,CAACyD,MAAN,CAAa,CAAb,EAAgBzD,KAAK,CAACgX,OAAN,CAAcwP,WAAd,CAAhB,CAAV;;MACA,IAAIwC,OAAO,CAACtoB,MAAR,GAAiB,CAArB,EAAwB;QACpBkL,eAAe,CAAC1B,MAAD,CAAf,CAAwBc,WAAxB,CAAoCoM,IAApC,CAAyC4R,OAAzC;MACH;;MACDhpB,KAAK,GAAGA,KAAK,CAAC4S,KAAN,CAAY5S,KAAK,CAACgX,OAAN,CAAcwP,WAAd,IAA6BA,WAAW,CAAC9lB,MAArD,CAAR;MACAooB,sBAAsB,IAAItC,WAAW,CAAC9lB,MAAtC;IACH,CAV+B,CAWhC;;;IACA,IAAIiD,oBAAoB,CAACG,KAAD,CAAxB,EAAiC;MAC7B,IAAI0iB,WAAJ,EAAiB;QACb5a,eAAe,CAAC1B,MAAD,CAAf,CAAwBY,KAAxB,GAAgC,KAAhC;MACH,CAFD,MAGK;QACDc,eAAe,CAAC1B,MAAD,CAAf,CAAwBa,YAAxB,CAAqCqM,IAArC,CAA0CtT,KAA1C;MACH;;MACDuG,uBAAuB,CAACvG,KAAD,EAAQ0iB,WAAR,EAAqBtc,MAArB,CAAvB;IACH,CARD,MASK,IAAIA,MAAM,CAACb,OAAP,IAAkB,CAACmd,WAAvB,EAAoC;MACrC5a,eAAe,CAAC1B,MAAD,CAAf,CAAwBa,YAAxB,CAAqCqM,IAArC,CAA0CtT,KAA1C;IACH;EACJ,CA9CsC,CA+CvC;;;EACA8H,eAAe,CAAC1B,MAAD,CAAf,CAAwBgB,aAAxB,GAAwC6d,WAAW,GAAGD,sBAAtD;;EACA,IAAI9oB,KAAK,CAACU,MAAN,GAAe,CAAnB,EAAsB;IAClBkL,eAAe,CAAC1B,MAAD,CAAf,CAAwBc,WAAxB,CAAoCoM,IAApC,CAAyCpX,KAAzC;EACH,CAnDsC,CAoDvC;;;EACA,IAAIkK,MAAM,CAACI,EAAP,CAAU9H,IAAV,KAAmB,EAAnB,IACAoJ,eAAe,CAAC1B,MAAD,CAAf,CAAwBwU,OAAxB,KAAoC,IADpC,IAEAxU,MAAM,CAACI,EAAP,CAAU9H,IAAV,IAAkB,CAFtB,EAEyB;IACrBoJ,eAAe,CAAC1B,MAAD,CAAf,CAAwBwU,OAAxB,GAAkC,KAAK,CAAvC;EACH;;EACD9S,eAAe,CAAC1B,MAAD,CAAf,CAAwBsB,eAAxB,GAA0CtB,MAAM,CAACI,EAAP,CAAUsI,KAAV,CAAgB,CAAhB,CAA1C;EACAhH,eAAe,CAAC1B,MAAD,CAAf,CAAwBuB,QAAxB,GAAmCvB,MAAM,CAACuU,SAA1C,CA3DuC,CA4DvC;;EACAvU,MAAM,CAACI,EAAP,CAAU9H,IAAV,IAAkBymB,eAAe,CAAC/e,MAAM,CAAC2C,OAAR,EAAiB3C,MAAM,CAACI,EAAP,CAAU9H,IAAV,CAAjB,EAAkC0H,MAAM,CAACuU,SAAzC,CAAjC;EACAqJ,eAAe,CAAC5d,MAAD,CAAf;EACA,OAAOye,aAAa,CAACze,MAAD,CAApB;AACH;;AACD,SAAS+e,eAAT,CAAyB5kB,MAAzB,EAAiC6kB,KAAjC,EAAwCzd,QAAxC,EAAkD;EAC9C,IAAItK,IAAI,GAAG+nB,KAAX;;EACA,IAAIzd,QAAQ,IAAI,IAAhB,EAAsB;IAClB;IACA,OAAOtK,IAAP;EACH;;EACD,IAAIkD,MAAM,CAAC8kB,YAAP,IAAuB,IAA3B,EAAiC;IAC7B,OAAO9kB,MAAM,CAAC8kB,YAAP,CAAoBhoB,IAApB,EAA0BsK,QAA1B,CAAP;EACH;;EACD,IAAIpH,MAAM,CAACiS,IAAP,IAAe,IAAnB,EAAyB;IACrB;IACA,OAAOnV,IAAP;EACH,CAZ6C,CAa9C;;;EACA,MAAMioB,IAAI,GAAG/kB,MAAM,CAACiS,IAAP,CAAY7K,QAAZ,CAAb;;EACA,IAAI2d,IAAI,IAAIjoB,IAAI,GAAG,EAAnB,EAAuB;IACnBA,IAAI,IAAI,EAAR;EACH;;EACD,IAAI,CAACioB,IAAD,IAASjoB,IAAI,KAAK,EAAtB,EAA0B;IACtBA,IAAI,GAAG,CAAP;EACH;;EACD,OAAOA,IAAP;AACH,C,CAED;;;AACA,SAASkoB,wBAAT,CAAkCnf,MAAlC,EAA0C;EACtC,IAAIof,UAAJ;EACA,IAAIC,UAAJ;EACA,IAAIC,WAAJ;EACA,IAAIC,YAAJ;;EACA,IAAI,CAACvf,MAAM,CAACub,EAAR,IAAcvb,MAAM,CAACub,EAAP,CAAU/kB,MAAV,KAAqB,CAAvC,EAA0C;IACtCkL,eAAe,CAAC1B,MAAD,CAAf,CAAwBmB,aAAxB,GAAwC,IAAxC;IACA,OAAOyY,aAAa,CAAC5Z,MAAD,CAApB;EACH;;EACD,IAAIvF,CAAJ;;EACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGuF,MAAM,CAACub,EAAP,CAAU/kB,MAA1B,EAAkCiE,CAAC,EAAnC,EAAuC;IACnC8kB,YAAY,GAAG,CAAf;IACAH,UAAU,GAAGpqB,MAAM,CAACiO,MAAP,CAAc,EAAd,EAAkBjD,MAAlB,CAAb;;IACA,IAAIA,MAAM,CAACgS,OAAP,IAAkB,IAAtB,EAA4B;MACxBoN,UAAU,CAACpN,OAAX,GAAqBhS,MAAM,CAACgS,OAA5B;IACH;;IACDoN,UAAU,CAAC7D,EAAX,GAAgBvb,MAAM,CAACub,EAAP,CAAU9gB,CAAV,CAAhB;IACA+gB,yBAAyB,CAAC4D,UAAD,CAAzB;;IACA,IAAI,CAACtG,OAAO,CAACsG,UAAD,CAAZ,EAA0B;MACtB;IACH,CAVkC,CAWnC;;;IACAG,YAAY,IAAI7d,eAAe,CAAC0d,UAAD,CAAf,CAA4Bpe,aAA5C,CAZmC,CAanC;;IACAue,YAAY,IAAI7d,eAAe,CAAC0d,UAAD,CAAf,CAA4Bve,YAA5B,CAAyCrK,MAAzC,GAAkD,EAAlE;IACAkL,eAAe,CAAC0d,UAAD,CAAf,CAA4BI,KAA5B,GAAoCD,YAApC;;IACA,IAAID,WAAW,IAAI,IAAf,IAAuBC,YAAY,GAAGD,WAA1C,EAAuD;MACnDA,WAAW,GAAGC,YAAd;MACAF,UAAU,GAAGD,UAAb;IACH;EACJ;;EACD,OAAOpqB,MAAM,CAACiO,MAAP,CAAcjD,MAAd,EAAsBqf,UAAU,IAAID,UAApC,CAAP;AACH;;AAED,SAASK,gBAAT,CAA0Bzf,MAA1B,EAAkC;EAC9B,IAAIA,MAAM,CAACmR,EAAX,EAAe;IACX,OAAOnR,MAAP;EACH;;EACD,MAAMlK,KAAK,GAAGkK,MAAM,CAACgb,EAArB;;EACA,IAAI5kB,QAAQ,CAACN,KAAD,CAAZ,EAAqB;IACjB,MAAM2E,CAAC,GAAG3C,oBAAoB,CAAChC,KAAD,CAA9B;IACAkK,MAAM,CAACI,EAAP,GAAY,CAAC3F,CAAC,CAACyC,IAAH,EAASzC,CAAC,CAAC0C,KAAX,EAAkB1C,CAAC,CAACqI,GAApB,EAAyBrI,CAAC,CAAC6R,KAA3B,EAAkC7R,CAAC,CAAC8R,OAApC,EAA6C9R,CAAC,CAACsI,OAA/C,EAAwDtI,CAAC,CAAC4I,YAA1D,EACR;IADQ,CAEPqc,GAFO,CAEHppB,GAAG,IAAI3B,QAAQ,CAAC2B,GAAD,CAAR,GAAgByL,QAAQ,CAACzL,GAAD,EAAM,EAAN,CAAxB,GAAoCA,GAFxC,CAAZ;EAGH;;EACD,OAAOsnB,eAAe,CAAC5d,MAAD,CAAtB;AACH;;AAED,SAAS2f,gBAAT,CAA0B3f,MAA1B,EAAkC;EAC9B,MAAMgF,GAAG,GAAGyZ,aAAa,CAACmB,aAAa,CAAC5f,MAAD,CAAd,CAAzB,CAD8B,CAE9B;;EACAgF,GAAG,CAACmM,EAAJ,GAAS,IAAIpc,IAAJ,CAASiQ,GAAG,CAACmM,EAAJ,IAAU,IAAV,GAAiBnM,GAAG,CAACmM,EAAJ,CAAO5b,OAAP,EAAjB,GAAoC4M,GAA7C,CAAT;;EACA,IAAI,CAAC2W,OAAO,CAAC9jB,MAAM,CAACiO,MAAP,CAAc,EAAd,EAAkB+B,GAAlB,EAAuB;IAAE6T,QAAQ,EAAE;EAAZ,CAAvB,CAAD,CAAZ,EAA0D;IACtD7T,GAAG,CAACmM,EAAJ,GAAS,IAAIpc,IAAJ,CAASoN,GAAT,CAAT;EACH,CAN6B,CAO9B;;EACA;AACJ;AACA;AACA;AACA;;;EACI,OAAO6C,GAAP;AACH;;AACD,SAAS4a,aAAT,CAAuB5f,MAAvB,EAA+B;EAC3B,IAAIlK,KAAK,GAAGkK,MAAM,CAACgb,EAAnB;EACA,MAAM3gB,MAAM,GAAG2F,MAAM,CAACub,EAAtB;EACAvb,MAAM,CAAC2C,OAAP,GAAiB3C,MAAM,CAAC2C,OAAP,IAAkBgN,SAAS,CAAC3P,MAAM,CAAC6f,EAAR,CAA5C;;EACA,IAAI/pB,KAAK,KAAK,IAAV,IAAmBuE,MAAM,KAAKxC,SAAX,IAAwB/B,KAAK,KAAK,EAAzD,EAA8D;IAC1D,OAAO8jB,aAAa,CAAC5Z,MAAD,EAAS;MAAEiB,SAAS,EAAE;IAAb,CAAT,CAApB;EACH;;EACD,IAAItM,QAAQ,CAACmB,KAAD,CAAZ,EAAqB;IACjBkK,MAAM,CAACgb,EAAP,GAAYllB,KAAK,GAAGkK,MAAM,CAAC2C,OAAP,CAAemG,QAAf,CAAwBhT,KAAxB,EAA+BuE,MAA/B,CAApB;EACH;;EACD,IAAIxF,MAAM,CAACiB,KAAD,CAAV,EAAmB;IACfkK,MAAM,CAACmR,EAAP,GAAY3M,SAAS,CAAC1O,KAAD,CAArB;IACA,OAAOkK,MAAP;EACH,CAb0B,CAc3B;;;EACA,IAAInK,OAAO,CAACwE,MAAD,CAAX,EAAqB;IACjB8kB,wBAAwB,CAACnf,MAAD,CAAxB;EACH,CAFD,MAGK,IAAI3F,MAAJ,EAAY;IACbmhB,yBAAyB,CAACxb,MAAD,CAAzB;EACH,CAFI,MAGA;IACD8f,eAAe,CAAC9f,MAAD,CAAf;EACH;;EACD,IAAI,CAAC8Y,OAAO,CAAC9Y,MAAD,CAAZ,EAAsB;IAClBA,MAAM,CAACmR,EAAP,GAAY,IAAZ;EACH;;EACD,OAAOnR,MAAP;AACH;;AACD,SAAS8f,eAAT,CAAyB9f,MAAzB,EAAiC;EAC7B,MAAMlK,KAAK,GAAGkK,MAAM,CAACgb,EAArB;;EACA,IAAItkB,WAAW,CAACZ,KAAD,CAAf,EAAwB;IACpBkK,MAAM,CAACmR,EAAP,GAAY,IAAIpc,IAAJ,EAAZ;EACH,CAFD,MAGK,IAAIF,MAAM,CAACiB,KAAD,CAAV,EAAmB;IACpBkK,MAAM,CAACmR,EAAP,GAAY3M,SAAS,CAAC1O,KAAD,CAArB;EACH,CAFI,MAGA,IAAInB,QAAQ,CAACmB,KAAD,CAAZ,EAAqB;IACtBknB,gBAAgB,CAAChd,MAAD,CAAhB;EACH,CAFI,MAGA,IAAInK,OAAO,CAACC,KAAD,CAAP,IAAkBA,KAAK,CAACU,MAA5B,EAAoC;IACrC,MAAMupB,IAAI,GAAGjqB,KAAK,CAAC4S,KAAN,CAAY,CAAZ,CAAb;;IACA1I,MAAM,CAACI,EAAP,GAAY2f,IAAI,CAACL,GAAL,CAASppB,GAAG,IAAI3B,QAAQ,CAAC2B,GAAD,CAAR,GAAgByL,QAAQ,CAACzL,GAAD,EAAM,EAAN,CAAxB,GAAoCA,GAApD,CAAZ;IACAsnB,eAAe,CAAC5d,MAAD,CAAf;EACH,CAJI,MAKA,IAAI5J,QAAQ,CAACN,KAAD,CAAZ,EAAqB;IACtB2pB,gBAAgB,CAACzf,MAAD,CAAhB;EACH,CAFI,MAGA,IAAIpK,QAAQ,CAACE,KAAD,CAAZ,EAAqB;IACtB;IACAkK,MAAM,CAACmR,EAAP,GAAY,IAAIpc,IAAJ,CAASe,KAAT,CAAZ;EACH,CAHI,MAIA;IACD;IACA,OAAO8jB,aAAa,CAAC5Z,MAAD,CAApB;EACH;;EACD,OAAOA,MAAP;AACH;;AACD,SAASggB,gBAAT,CAA0BlqB,KAA1B,EAAiCuE,MAAjC,EAAyC6e,SAAzC,EAAoDtP,MAApD,EAA4DjP,KAA5D,EAAmE;EAC/D,MAAMqF,MAAM,GAAG,EAAf;EACA,IAAIiT,MAAM,GAAGnd,KAAb,CAF+D,CAG/D;EACA;EACA;EACA;EACA;EACA;;EACA,IAAKM,QAAQ,CAAC6c,MAAD,CAAR,IAAoB5c,aAAa,CAAC4c,MAAD,CAAlC,IAAgDpd,OAAO,CAACod,MAAD,CAAP,IAAmBA,MAAM,CAACzc,MAAP,KAAkB,CAAzF,EAA6F;IACzFyc,MAAM,GAAGpb,SAAT;EACH,CAX8D,CAY/D;EACA;EACA;;;EACAmI,MAAM,CAACgS,OAAP,GAAiBhS,MAAM,CAAC6R,MAAP,GAAgBlX,KAAjC;EACAqF,MAAM,CAAC6f,EAAP,GAAY3G,SAAZ;EACAlZ,MAAM,CAACgb,EAAP,GAAY/H,MAAZ;EACAjT,MAAM,CAACub,EAAP,GAAYlhB,MAAZ;EACA2F,MAAM,CAACb,OAAP,GAAiByK,MAAjB;EACA,OAAO+V,gBAAgB,CAAC3f,MAAD,CAAvB;AACH;;AAED,SAASigB,SAAT,CAAmBnqB,KAAnB,EAA0BuE,MAA1B,EAAkC6e,SAAlC,EAA6CtP,MAA7C,EAAqDjP,KAArD,EAA4D;EACxD,IAAI9F,MAAM,CAACiB,KAAD,CAAV,EAAmB;IACf,OAAOA,KAAP;EACH;;EACD,MAAMkK,MAAM,GAAGggB,gBAAgB,CAAClqB,KAAD,EAAQuE,MAAR,EAAgB6e,SAAhB,EAA2BtP,MAA3B,EAAmCjP,KAAnC,CAA/B;EACA,OAAOqF,MAAM,CAACmR,EAAd;AACH;;AACD,SAAS+O,UAAT,CAAoB5qB,IAApB,EAA0B;EACtB,IAAI,EAAEA,IAAI,YAAYP,IAAlB,CAAJ,EAA6B;IACzB,OAAO,IAAP;EACH;;EACD,OAAO,IAAIA,IAAJ,CAASO,IAAI,CAAC+F,cAAL,EAAT,EAAgC/F,IAAI,CAACqH,WAAL,EAAhC,EAAoDrH,IAAI,CAACmH,UAAL,EAApD,EAAuEnH,IAAI,CAACyG,WAAL,EAAvE,EAA2FzG,IAAI,CAAC2G,aAAL,EAA3F,EAAiH3G,IAAI,CAAC6G,aAAL,EAAjH,EAAuI7G,IAAI,CAAC+G,kBAAL,EAAvI,CAAP;AACH;;AAED,SAAS8jB,QAAT,CAAkB5rB,GAAlB,EAAuB;EACnB,OAAOA,GAAG,GAAG,CAAN,GAAUC,IAAI,CAAC+Q,KAAL,CAAWhR,GAAG,GAAG,CAAC,CAAlB,IAAuB,CAAC,CAAlC,GAAsCC,IAAI,CAAC+Q,KAAL,CAAWhR,GAAX,CAA7C;AACH;;AAED,SAAS6rB,OAAT,CAAiB5iB,KAAjB,EAAwBC,KAAxB,EAA+B7F,KAAK,GAAG,cAAvC,EAAuD;EACnD,IAAI,CAAC4F,KAAD,IAAU,CAACC,KAAf,EAAsB;IAClB,OAAO,KAAP;EACH;;EACD,IAAI7F,KAAK,KAAK,cAAd,EAA8B;IAC1B,OAAO4F,KAAK,CAACX,OAAN,KAAkBY,KAAK,CAACZ,OAAN,EAAzB;EACH;;EACD,OAAOY,KAAK,CAACZ,OAAN,KAAkB4H,OAAO,CAACjH,KAAD,EAAQ5F,KAAR,CAAP,CAAsBiF,OAAtB,EAAzB;AACH;;AACD,SAASwjB,QAAT,CAAkB7iB,KAAlB,EAAyBC,KAAzB,EAAgC7F,KAAK,GAAG,cAAxC,EAAwD;EACpD,IAAI,CAAC4F,KAAD,IAAU,CAACC,KAAf,EAAsB;IAClB,OAAO,KAAP;EACH;;EACD,IAAI7F,KAAK,KAAK,cAAd,EAA8B;IAC1B,OAAO4F,KAAK,CAACX,OAAN,KAAkBY,KAAK,CAACZ,OAAN,EAAzB;EACH;;EACD,OAAO+H,KAAK,CAACpH,KAAD,EAAQ5F,KAAR,CAAL,CAAoBiF,OAApB,KAAgCY,KAAK,CAACZ,OAAN,EAAvC;AACH;;AACD,SAASyjB,aAAT,CAAuBhrB,IAAvB,EAA6BirB,YAA7B,EAA2C;EACvC,IAAI,OAAOA,YAAP,KAAwB,WAAxB,IAAuC,CAACA,YAAxC,IAAwD,CAACA,YAAY,CAAC/pB,MAA1E,EAAkF;IAC9E,OAAO,KAAP;EACH;;EACD,OAAO+pB,YAAY,CAACrJ,IAAb,CAAmBpU,GAAD,IAASA,GAAG,KAAKxN,IAAI,CAACgH,MAAL,EAAnC,CAAP;AACH;;AACD,SAASkkB,SAAT,CAAmBlrB,IAAnB,EAAyBmrB,IAAzB,EAA+BC,EAA/B,EAAmC9oB,KAAnC,EAA0C+oB,WAAW,GAAG,IAAxD,EAA8D;EAC1D,MAAMC,SAAS,GAAGD,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAnB,GACZP,OAAO,CAAC9qB,IAAD,EAAOmrB,IAAP,EAAa7oB,KAAb,CADK,GAEZ,CAACyoB,QAAQ,CAAC/qB,IAAD,EAAOmrB,IAAP,EAAa7oB,KAAb,CAFf;EAGA,MAAMipB,UAAU,GAAGF,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAnB,GACbN,QAAQ,CAAC/qB,IAAD,EAAOorB,EAAP,EAAW9oB,KAAX,CADK,GAEb,CAACwoB,OAAO,CAAC9qB,IAAD,EAAOorB,EAAP,EAAW9oB,KAAX,CAFd;EAGA,OAAOgpB,SAAS,IAAIC,UAApB;AACH;;AACD,SAASC,MAAT,CAAgBtjB,KAAhB,EAAuBC,KAAvB,EAA8B7F,KAAK,GAAG,cAAtC,EAAsD;EAClD,IAAI,CAAC4F,KAAD,IAAU,CAACC,KAAf,EAAsB;IAClB,OAAO,KAAP;EACH;;EACD,IAAI7F,KAAK,KAAK,cAAd,EAA8B;IAC1B,OAAO4F,KAAK,CAACX,OAAN,OAAoBY,KAAK,CAACZ,OAAN,EAA3B;EACH;;EACD,MAAMkkB,OAAO,GAAGtjB,KAAK,CAACZ,OAAN,EAAhB;EACA,OAAQ4H,OAAO,CAACjH,KAAD,EAAQ5F,KAAR,CAAP,CAAsBiF,OAAtB,MAAmCkkB,OAAnC,IACJA,OAAO,IAAInc,KAAK,CAACpH,KAAD,EAAQ5F,KAAR,CAAL,CAAoBiF,OAApB,EADf;AAEH;;AACD,SAASmkB,SAAT,CAAmBxjB,KAAnB,EAA0BC,KAA1B,EAAiC;EAC7B,OAAQD,KAAK,CAAClB,MAAN,MAAkBmB,KAAK,CAACnB,MAAN,EAA1B;AACH;;AACD,SAAS2kB,aAAT,CAAuBzjB,KAAvB,EAA8BC,KAA9B,EAAqC7F,KAArC,EAA4C;EACxC,OAAOkpB,MAAM,CAACtjB,KAAD,EAAQC,KAAR,EAAe7F,KAAf,CAAN,IAA+BwoB,OAAO,CAAC5iB,KAAD,EAAQC,KAAR,EAAe7F,KAAf,CAA7C;AACH;;AACD,SAASspB,cAAT,CAAwB1jB,KAAxB,EAA+BC,KAA/B,EAAsC7F,KAAtC,EAA6C;EACzC,OAAOkpB,MAAM,CAACtjB,KAAD,EAAQC,KAAR,EAAe7F,KAAf,CAAN,IAA+ByoB,QAAQ,CAAC7iB,KAAD,EAAQC,KAAR,EAAe7F,KAAf,CAA9C;AACH,C,CAED;;;AACA,MAAMupB,WAAW,GAAG,0DAApB,C,CACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,qKAAjB;;AACA,SAASjJ,cAAT,CAAwBriB,KAAxB,EAA+BkS,GAA/B,EAAoChI,MAAM,GAAG,EAA7C,EAAiD;EAC7C,MAAMgX,QAAQ,GAAGqK,eAAe,CAACvrB,KAAD,EAAQkS,GAAR,CAAhC,CAD6C,CAE7C;;EACA,OAAO,IAAI0Q,QAAJ,CAAa1B,QAAb,EAAuBhX,MAAvB,CAAP;AACH;;AACD,SAASqhB,eAAT,CAAyBvrB,KAAzB,EAAgCkS,GAAhC,EAAqC;EACjC;EACA,IAAIlS,KAAK,IAAI,IAAb,EAAmB;IACf,OAAO,EAAP;EACH;;EACD,IAAIwjB,UAAU,CAACxjB,KAAD,CAAd,EAAuB;IACnB,OAAO;MACHuN,YAAY,EAAEvN,KAAK,CAAC0hB,aADjB;MAEH1U,GAAG,EAAEhN,KAAK,CAAC4hB,KAFR;MAGHva,KAAK,EAAErH,KAAK,CAACwT;IAHV,CAAP;EAKH;;EACD,IAAI1T,QAAQ,CAACE,KAAD,CAAZ,EAAqB;IACjB;IACA,OAAOkS,GAAG,GAAG;MAAE,CAACA,GAAD,GAAOlS;IAAT,CAAH,GAAsB;MAAEuN,YAAY,EAAEvN;IAAhB,CAAhC;EACH;;EACD,IAAInB,QAAQ,CAACmB,KAAD,CAAZ,EAAqB;IACjB,IAAIyE,KAAK,GAAG4mB,WAAW,CAAClG,IAAZ,CAAiBnlB,KAAjB,CAAZ;;IACA,IAAIyE,KAAJ,EAAW;MACP,MAAMrB,IAAI,GAAIqB,KAAK,CAAC,CAAD,CAAL,KAAa,GAAd,GAAqB,CAAC,CAAtB,GAA0B,CAAvC;MACA,OAAO;QACH2C,IAAI,EAAE,CADH;QAEH4F,GAAG,EAAEnM,KAAK,CAAC4D,KAAK,CAAClC,IAAD,CAAN,CAAL,GAAqBa,IAFvB;QAGHoT,KAAK,EAAE3V,KAAK,CAAC4D,KAAK,CAACjC,IAAD,CAAN,CAAL,GAAqBY,IAHzB;QAIHqT,OAAO,EAAE5V,KAAK,CAAC4D,KAAK,CAAChC,MAAD,CAAN,CAAL,GAAuBW,IAJ7B;QAKH6J,OAAO,EAAEpM,KAAK,CAAC4D,KAAK,CAAC/B,MAAD,CAAN,CAAL,GAAuBU,IAL7B;QAMH;QACAmK,YAAY,EAAE1M,KAAK,CAACwpB,QAAQ,CAACxpB,KAAK,CAAC4D,KAAK,CAAC9B,WAAD,CAAN,CAAL,GAA4B,IAA7B,CAAT,CAAL,GAAoDS;MAP/D,CAAP;IASH;;IACDqB,KAAK,GAAG6mB,QAAQ,CAACnG,IAAT,CAAcnlB,KAAd,CAAR;;IACA,IAAIyE,KAAJ,EAAW;MACP,MAAMrB,IAAI,GAAIqB,KAAK,CAAC,CAAD,CAAL,KAAa,GAAd,GAAqB,CAAC,CAAtB,GAA2BA,KAAK,CAAC,CAAD,CAAL,KAAa,GAAd,GAAqB,CAArB,GAAyB,CAAhE;MACA,OAAO;QACH2C,IAAI,EAAEokB,QAAQ,CAAC/mB,KAAK,CAAC,CAAD,CAAN,EAAWrB,IAAX,CADX;QAEHiE,KAAK,EAAEmkB,QAAQ,CAAC/mB,KAAK,CAAC,CAAD,CAAN,EAAWrB,IAAX,CAFZ;QAGH8M,IAAI,EAAEsb,QAAQ,CAAC/mB,KAAK,CAAC,CAAD,CAAN,EAAWrB,IAAX,CAHX;QAIH4J,GAAG,EAAEwe,QAAQ,CAAC/mB,KAAK,CAAC,CAAD,CAAN,EAAWrB,IAAX,CAJV;QAKHoT,KAAK,EAAEgV,QAAQ,CAAC/mB,KAAK,CAAC,CAAD,CAAN,EAAWrB,IAAX,CALZ;QAMHqT,OAAO,EAAE+U,QAAQ,CAAC/mB,KAAK,CAAC,CAAD,CAAN,EAAWrB,IAAX,CANd;QAOH6J,OAAO,EAAEue,QAAQ,CAAC/mB,KAAK,CAAC,CAAD,CAAN,EAAWrB,IAAX;MAPd,CAAP;IASH;EACJ;;EACD,IAAI9C,QAAQ,CAACN,KAAD,CAAR,KAAoB,UAAUA,KAAV,IAAmB,QAAQA,KAA/C,CAAJ,EAA2D;IACvD,MAAMyrB,OAAO,GAAGC,iBAAiB,CAACvB,SAAS,CAACnqB,KAAK,CAAC2qB,IAAP,CAAV,EAAwBR,SAAS,CAACnqB,KAAK,CAAC4qB,EAAP,CAAjC,CAAjC;IACA,OAAO;MACHrd,YAAY,EAAEke,OAAO,CAACle,YADnB;MAEHlG,KAAK,EAAEokB,OAAO,CAAC/e;IAFZ,CAAP;EAIH;;EACD,OAAO1M,KAAP;AACH,C,CACD;AACA;;;AACA,SAASwrB,QAAT,CAAkBG,GAAlB,EAAuBvoB,IAAvB,EAA6B;EACzB;EACA;EACA;EACA,MAAM8L,GAAG,GAAGyc,GAAG,IAAIrQ,UAAU,CAACqQ,GAAG,CAAC1mB,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAAD,CAA7B,CAJyB,CAKzB;;EACA,OAAO,CAACvF,KAAK,CAACwP,GAAD,CAAL,GAAa,CAAb,GAAiBA,GAAlB,IAAyB9L,IAAhC;AACH;;AACD,SAASwoB,yBAAT,CAAmCC,IAAnC,EAAyCC,KAAzC,EAAgD;EAC5C,MAAM5c,GAAG,GAAG;IAAE3B,YAAY,EAAE,CAAhB;IAAmBb,MAAM,EAAE;EAA3B,CAAZ;EACAwC,GAAG,CAACxC,MAAJ,GAAa9F,QAAQ,CAACklB,KAAD,CAAR,GAAkBllB,QAAQ,CAACilB,IAAD,CAA1B,GACT,CAAC/lB,WAAW,CAACgmB,KAAD,CAAX,GAAqBhmB,WAAW,CAAC+lB,IAAD,CAAjC,IAA2C,EAD/C;;EAEA,MAAME,SAAS,GAAG9c,GAAG,CAACP,SAAS,CAACmd,IAAD,CAAV,EAAkB3c,GAAG,CAACxC,MAAtB,EAA8B,OAA9B,CAArB;;EACA,IAAI4d,OAAO,CAACyB,SAAD,EAAYD,KAAZ,CAAX,EAA+B;IAC3B,EAAE5c,GAAG,CAACxC,MAAN;EACH;;EACDwC,GAAG,CAAC3B,YAAJ,GAAmB,CAACue,KAAD,GAAS,CAAE7c,GAAG,CAACP,SAAS,CAACmd,IAAD,CAAV,EAAkB3c,GAAG,CAACxC,MAAtB,EAA8B,OAA9B,CAAjC;EACA,OAAOwC,GAAP;AACH;;AACD,SAASwc,iBAAT,CAA2BG,IAA3B,EAAiCC,KAAjC,EAAwC;EACpC,IAAI,EAAEvsB,WAAW,CAACssB,IAAD,CAAX,IAAqBtsB,WAAW,CAACusB,KAAD,CAAlC,CAAJ,EAAgD;IAC5C,OAAO;MAAEve,YAAY,EAAE,CAAhB;MAAmBb,MAAM,EAAE;IAA3B,CAAP;EACH;;EACD,IAAIwC,GAAJ;;EACA,MAAM8c,MAAM,GAAGrP,eAAe,CAACmP,KAAD,EAAQD,IAAR,EAAc;IAAE7P,OAAO,EAAE6P,IAAI,CAAC/O,iBAAL;EAAX,CAAd,CAA9B;;EACA,IAAIyN,QAAQ,CAACsB,IAAD,EAAOG,MAAP,CAAZ,EAA4B;IACxB9c,GAAG,GAAG0c,yBAAyB,CAACC,IAAD,EAAOG,MAAP,CAA/B;EACH,CAFD,MAGK;IACD9c,GAAG,GAAG0c,yBAAyB,CAACI,MAAD,EAASH,IAAT,CAA/B;IACA3c,GAAG,CAAC3B,YAAJ,GAAmB,CAAC2B,GAAG,CAAC3B,YAAxB;IACA2B,GAAG,CAACxC,MAAJ,GAAa,CAACwC,GAAG,CAACxC,MAAlB;EACH;;EACD,OAAOwC,GAAP;AACH;;AAED,SAASD,GAAT,CAAazP,IAAb,EAAmBmT,GAAnB,EAAwBsZ,MAAxB,EAAgCpnB,KAAhC,EAAuC;EACnC,MAAM4c,GAAG,GAAGY,cAAc,CAAC1P,GAAD,EAAMsZ,MAAN,CAA1B;EACA,OAAOC,WAAW,CAAC1sB,IAAD,EAAOiiB,GAAP,EAAY,CAAZ,EAAe5c,KAAf,CAAlB;AACH;;AACD,SAASsK,QAAT,CAAkB3P,IAAlB,EAAwBmT,GAAxB,EAA6BsZ,MAA7B,EAAqCpnB,KAArC,EAA4C;EACxC,MAAM4c,GAAG,GAAGY,cAAc,CAAC1P,GAAD,EAAMsZ,MAAN,CAA1B;EACA,OAAOC,WAAW,CAAC1sB,IAAD,EAAOiiB,GAAP,EAAY,CAAC,CAAb,EAAgB5c,KAAhB,CAAlB;AACH;;AACD,SAASqnB,WAAT,CAAqB1sB,IAArB,EAA2B0hB,QAA3B,EAAqCiL,QAArC,EAA+CtnB,KAA/C,EAAsD;EAClD,MAAM0I,YAAY,GAAG2T,QAAQ,CAACQ,aAA9B;EACA,MAAMC,IAAI,GAAG0I,QAAQ,CAACnJ,QAAQ,CAACU,KAAV,CAArB;EACA,MAAMlV,MAAM,GAAG2d,QAAQ,CAACnJ,QAAQ,CAAC1N,OAAV,CAAvB,CAHkD,CAIlD;EACA;;EACA,IAAI9G,MAAJ,EAAY;IACRiB,QAAQ,CAACnO,IAAD,EAAOoH,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAR,GAAwB6H,MAAM,GAAGyf,QAAxC,EAAkDtnB,KAAlD,CAAR;EACH;;EACD,IAAI8c,IAAJ,EAAU;IACN3T,OAAO,CAACxO,IAAD,EAAOkH,OAAO,CAAClH,IAAD,EAAOqF,KAAP,CAAP,GAAuB8c,IAAI,GAAGwK,QAArC,EAA+CtnB,KAA/C,CAAP;EACH;;EACD,IAAI0I,YAAJ,EAAkB;IACdkB,OAAO,CAACjP,IAAD,EAAOC,OAAO,CAACD,IAAD,CAAP,GAAgB+N,YAAY,GAAG4e,QAAtC,CAAP;EACH;;EACD,OAAOzd,SAAS,CAAClP,IAAD,CAAhB,CAfkD,CAgBlD;EACA;EACA;EACA;AACH;;AAED,SAASmhB,aAAT,GAAyB;EACrB;EACA9c,cAAc,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAClD,OAAOoC,MAAM,CAAChH,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAN,CACFzF,QADE,CACO,EADP,CAAP;EAEH,CAHa,CAAd;EAIAyE,cAAc,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IACnD,OAAOA,IAAI,CAACC,MAAL,CAAY0Q,WAAZ,CAAwBvV,IAAxB,EAA8B4E,IAAI,CAACG,MAAnC,EAA2CH,IAAI,CAACS,KAAhD,CAAP;EACH,CAFa,CAAd;EAGAhB,cAAc,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IACpD,OAAOA,IAAI,CAACC,MAAL,CAAY4Q,aAAZ,CAA0BzV,IAA1B,EAAgC4E,IAAI,CAACG,MAArC,EAA6CH,IAAI,CAACS,KAAlD,CAAP;EACH,CAFa,CAAd;EAGAhB,cAAc,CAAC,MAAD,EAAS,IAAT,EAAe,IAAf,EAAqB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IACrD,OAAOA,IAAI,CAACC,MAAL,CAAYuQ,QAAZ,CAAqBpV,IAArB,EAA2B4E,IAAI,CAACG,MAAhC,EAAwCH,IAAI,CAACS,KAA7C,CAAP;EACH,CAFa,CAAd;EAGAhB,cAAc,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAClD,OAAOoW,kBAAkB,CAAChb,IAAD,EAAO4E,IAAI,CAACC,MAAZ,EAAoBD,IAAI,CAACS,KAAzB,CAAlB,CACFzF,QADE,CACO,EADP,CAAP,CADkD,CAGlD;EACH,CAJa,CAAd;EAKAyE,cAAc,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,UAAUrE,IAAV,EAAgB4E,IAAhB,EAAsB;IAClD,OAAOsW,eAAe,CAAClb,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAf,CACFzF,QADE,CACO,EADP,CAAP;EAEH,CAHa,CAAd,CApBqB,CAwBrB;;EACAmC,YAAY,CAAC,KAAD,EAAQ,GAAR,CAAZ;EACAA,YAAY,CAAC,SAAD,EAAY,GAAZ,CAAZ;EACAA,YAAY,CAAC,YAAD,EAAe,GAAf,CAAZ,CA3BqB,CA4BrB;;EACAiJ,eAAe,CAAC,KAAD,EAAQ,EAAR,CAAf;EACAA,eAAe,CAAC,SAAD,EAAY,EAAZ,CAAf;EACAA,eAAe,CAAC,YAAD,EAAe,EAAf,CAAf,CA/BqB,CAgCrB;;EACAxB,aAAa,CAAC,GAAD,EAAMb,SAAN,CAAb;EACAa,aAAa,CAAC,GAAD,EAAMb,SAAN,CAAb;EACAa,aAAa,CAAC,GAAD,EAAMb,SAAN,CAAb;EACAa,aAAa,CAAC,IAAD,EAAO,UAAUG,QAAV,EAAoB9E,MAApB,EAA4B;IAC5C,OAAOA,MAAM,CAAC8R,gBAAP,CAAwBhN,QAAxB,CAAP;EACH,CAFY,CAAb;EAGAH,aAAa,CAAC,KAAD,EAAQ,UAAUG,QAAV,EAAoB9E,MAApB,EAA4B;IAC7C,OAAOA,MAAM,CAAC2R,kBAAP,CAA0B7M,QAA1B,CAAP;EACH,CAFY,CAAb;EAGAH,aAAa,CAAC,MAAD,EAAS,UAAUG,QAAV,EAAoB9E,MAApB,EAA4B;IAC9C,OAAOA,MAAM,CAACuR,aAAP,CAAqBzM,QAArB,CAAP;EACH,CAFY,CAAb;EAGAgB,iBAAiB,CAAC,CAAC,IAAD,EAAO,KAAP,EAAc,MAAd,CAAD,EAAwB,UAAUnK,KAAV,EAAiBkQ,IAAjB,EAAuBhG,MAAvB,EAA+BpG,KAA/B,EAAsC;IAC3E,MAAMqM,OAAO,GAAGjG,MAAM,CAAC2C,OAAP,CAAesI,aAAf,CAA6BnV,KAA7B,EAAoC8D,KAApC,EAA2CoG,MAAM,CAACb,OAAlD,CAAhB,CAD2E,CAE3E;;;IACA,IAAI8G,OAAO,IAAI,IAAf,EAAqB;MACjBD,IAAI,CAAC,GAAD,CAAJ,GAAYC,OAAZ;IACH,CAFD,MAGK;MACDvE,eAAe,CAAC1B,MAAD,CAAf,CAAwB0Z,cAAxB,GAAyC,CAAC,CAAC5jB,KAA3C;IACH;;IACD,OAAOkK,MAAP;EACH,CAVgB,CAAjB;EAWAC,iBAAiB,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAD,EAAkB,UAAUnK,KAAV,EAAiBkQ,IAAjB,EAAuBhG,MAAvB,EAA+BpG,KAA/B,EAAsC;IACrEoM,IAAI,CAACpM,KAAD,CAAJ,GAAcjD,KAAK,CAACb,KAAD,CAAnB;IACA,OAAOkK,MAAP;EACH,CAHgB,CAAjB;AAIH,C,CACD;;;AACA,SAASkiB,YAAT,CAAsBpsB,KAAtB,EAA6BqE,MAA7B,EAAqC;EACjC,IAAI,CAACxF,QAAQ,CAACmB,KAAD,CAAb,EAAsB;IAClB,OAAOA,KAAP;EACH;;EACD,MAAMqsB,IAAI,GAAGpgB,QAAQ,CAACjM,KAAD,EAAQ,EAAR,CAArB;;EACA,IAAI,CAACN,KAAK,CAAC2sB,IAAD,CAAV,EAAkB;IACd,OAAOA,IAAP;EACH;;EACD,MAAMC,QAAQ,GAAGjoB,MAAM,CAAC8Q,aAAP,CAAqBnV,KAArB,CAAjB;;EACA,IAAIF,QAAQ,CAACwsB,QAAD,CAAZ,EAAwB;IACpB,OAAOA,QAAP;EACH;;EACD,OAAO,IAAP;AACH;;AACD,SAASC,eAAT,CAAyBvsB,KAAzB,EAAgCqE,MAAM,GAAGwV,SAAS,EAAlD,EAAsD;EAClD,IAAIhb,QAAQ,CAACmB,KAAD,CAAZ,EAAqB;IACjB,OAAOqE,MAAM,CAAC8Q,aAAP,CAAqBnV,KAArB,IAA8B,CAA9B,IAAmC,CAA1C;EACH;;EACD,OAAOF,QAAQ,CAACE,KAAD,CAAR,IAAmBN,KAAK,CAACM,KAAD,CAAxB,GAAkC,IAAlC,GAAyCA,KAAhD;AACH,C,CACD;;;AACA,SAASwsB,eAAT,CAAyBhtB,IAAzB,EAA+BQ,KAA/B,EAAsCoE,IAAtC,EAA4C;EACxC,IAAI,CAACpE,KAAL,EAAY;IACR,OAAOysB,YAAY,CAACjtB,IAAD,EAAO4E,IAAI,CAACS,KAAZ,CAAnB;EACH;;EACD,OAAO8Q,YAAY,CAACnW,IAAD,EAAOQ,KAAP,EAAcoE,IAAI,CAACC,MAAnB,EAA2BD,IAAI,CAACS,KAAhC,CAAnB;AACH;;AACD,SAAS8Q,YAAT,CAAsBnW,IAAtB,EAA4BQ,KAA5B,EAAmCqE,MAAM,GAAGwV,SAAS,EAArD,EAAyDhV,KAAzD,EAAgE;EAC5D,MAAMmI,GAAG,GAAGxG,MAAM,CAAChH,IAAD,EAAOqF,KAAP,CAAlB;;EACA,MAAMsY,MAAM,GAAGiP,YAAY,CAACpsB,KAAD,EAAQqE,MAAR,CAA3B;;EACA,OAAO4K,GAAG,CAACzP,IAAD,EAAO2d,MAAM,GAAGnQ,GAAhB,EAAqB,KAArB,CAAV;AACH;;AACD,SAASyf,YAAT,CAAsBjtB,IAAtB,EAA4BqF,KAA5B,EAAmC;EAC/B,OAAO2B,MAAM,CAAChH,IAAD,EAAOqF,KAAP,CAAb;AACH;AACD;AACA;AACA;;;AACA,SAAS2V,kBAAT,CAA4Bhb,IAA5B,EAAkC6E,MAAM,GAAGwV,SAAS,EAApD,EAAwDhV,KAAxD,EAA+D;EAC3D,OAAO,CAAC2B,MAAM,CAAChH,IAAD,EAAOqF,KAAP,CAAN,GAAsB,CAAtB,GAA0BR,MAAM,CAACkD,cAAP,EAA3B,IAAsD,CAA7D;AACH;;AACD,SAASqH,kBAAT,CAA4BpP,IAA5B,EAAkCQ,KAAlC,EAAyCoE,IAAI,GAAG,EAAhD,EAAoD;EAChD,MAAM+L,OAAO,GAAGqK,kBAAkB,CAAChb,IAAD,EAAO4E,IAAI,CAACC,MAAZ,EAAoBD,IAAI,CAACS,KAAzB,CAAlC;EACA,OAAOoK,GAAG,CAACzP,IAAD,EAAOQ,KAAK,GAAGmQ,OAAf,EAAwB,KAAxB,CAAV;AACH,C,CACD;;;AACA,SAASuK,eAAT,CAAyBlb,IAAzB,EAA+BqF,KAA/B,EAAsC;EAClC,OAAO2B,MAAM,CAAChH,IAAD,EAAOqF,KAAP,CAAN,IAAuB,CAA9B;AACH;;AACD,SAASgK,eAAT,CAAyBrP,IAAzB,EAA+BQ,KAA/B,EAAsCoE,IAAI,GAAG,EAA7C,EAAiD;EAC7C;EACA;EACA;EACA,MAAM+L,OAAO,GAAGoc,eAAe,CAACvsB,KAAD,EAAQoE,IAAI,CAACC,MAAb,CAA/B;EACA,OAAOsR,YAAY,CAACnW,IAAD,EAAOitB,YAAY,CAACjtB,IAAD,CAAZ,GAAqB,CAArB,GAAyB2Q,OAAzB,GAAmCA,OAAO,GAAG,CAApD,CAAnB;AACH,C,CAED;AACA;AACA;AACA;AACA;;;AACA,MAAMuc,WAAW,GAAG;EAChB,GAAG,GADa;EAEhB,GAAG,GAFa;EAGhB,GAAG,GAHa;EAIhB,GAAG,GAJa;EAKhB,GAAG,GALa;EAMhB,GAAG,GANa;EAOhB,GAAG,GAPa;EAQhB,GAAG,GARa;EAShB,GAAG,GATa;EAUhB,GAAG;AAVa,CAApB;AAYA,MAAMC,WAAW,GAAG;EAChB,KAAK,GADW;EAEhB,KAAK,GAFW;EAGhB,KAAK,GAHW;EAIhB,KAAK,GAJW;EAKhB,KAAK,GALW;EAMhB,KAAK,GANW;EAOhB,KAAK,GAPW;EAQhB,KAAK,GARW;EAShB,KAAK,GATW;EAUhB,KAAK;AAVW,CAApB;;AAYA,MAAMC,UAAU,GAAG,UAAUnuB,GAAV,EAAe;EAC9B,OAAOA,GAAG,KAAK,CAAR,GAAY,CAAZ,GAAgBA,GAAG,KAAK,CAAR,GAAY,CAAZ,GAAgBA,GAAG,KAAK,CAAR,GAAY,CAAZ,GAAgBA,GAAG,GAAG,GAAN,IAAa,CAAb,IAAkBA,GAAG,GAAG,GAAN,IAAa,EAA/B,GAAoC,CAApC,GAAwCA,GAAG,GAAG,GAAN,IAAa,EAAb,GAAkB,CAAlB,GAAsB,CAArH;AACH,CAFD;;AAGA,MAAMouB,OAAO,GAAG;EACZjnB,CAAC,EAAE,CAAC,cAAD,EAAiB,aAAjB,EAAgC,CAAC,SAAD,EAAY,SAAZ,CAAhC,EAAwD,SAAxD,EAAmE,UAAnE,EAA+E,UAA/E,CADS;EAEZR,CAAC,EAAE,CAAC,cAAD,EAAiB,aAAjB,EAAgC,CAAC,SAAD,EAAY,SAAZ,CAAhC,EAAwD,UAAxD,EAAoE,UAApE,EAAgF,UAAhF,CAFS;EAGZM,CAAC,EAAE,CAAC,aAAD,EAAgB,YAAhB,EAA8B,CAAC,QAAD,EAAW,QAAX,CAA9B,EAAoD,UAApD,EAAgE,SAAhE,EAA2E,SAA3E,CAHS;EAIZL,CAAC,EAAE,CAAC,YAAD,EAAe,UAAf,EAA2B,CAAC,OAAD,EAAU,OAAV,CAA3B,EAA+C,SAA/C,EAA0D,UAA1D,EAAsE,QAAtE,CAJS;EAKZM,CAAC,EAAE,CAAC,YAAD,EAAe,UAAf,EAA2B,CAAC,OAAD,EAAU,OAAV,CAA3B,EAA+C,SAA/C,EAA0D,SAA1D,EAAqE,QAArE,CALS;EAMZR,CAAC,EAAE,CAAC,YAAD,EAAe,UAAf,EAA2B,CAAC,OAAD,EAAU,OAAV,CAA3B,EAA+C,UAA/C,EAA2D,UAA3D,EAAuE,QAAvE;AANS,CAAhB;;AAQA,MAAM2nB,SAAS,GAAG,UAAUC,CAAV,EAAa;EAC3B,OAAO,UAAUtuB,GAAV,EAAe0U,aAAf,EAA8B;IACjC,MAAM6Z,CAAC,GAAGJ,UAAU,CAACnuB,GAAD,CAApB;IACA,IAAIK,GAAG,GAAG+tB,OAAO,CAACE,CAAD,CAAP,CAAWH,UAAU,CAACnuB,GAAD,CAArB,CAAV;;IACA,IAAIuuB,CAAC,KAAK,CAAV,EAAa;MACTluB,GAAG,GAAGA,GAAG,CAACqU,aAAa,GAAG,CAAH,GAAO,CAArB,CAAT;IACH;;IACD,OAAOrU,GAAG,CAACmG,OAAJ,CAAY,KAAZ,EAAmBxG,GAAG,CAACW,QAAJ,EAAnB,CAAP;EACH,CAPD;AAQH,CATD;;AAUA,MAAM6tB,QAAQ,GAAG,CACb,OADa,EAEb,QAFa,EAGb,MAHa,EAIb,OAJa,EAKb,MALa,EAMb,OANa,EAOb,OAPa,EAQb,OARa,EASb,QATa,EAUb,QAVa,EAWb,QAXa,EAYb,QAZa,CAAjB;AAcA,MAAMC,QAAQ,GAAG;EACb/M,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAEugB,QAFK;EAGbxgB,WAAW,EAAEwgB,QAHA;EAIbrY,QAAQ,EAAE,sDAAsD9D,KAAtD,CAA4D,GAA5D,CAJG;EAKbmE,aAAa,EAAE,wCAAwCnE,KAAxC,CAA8C,GAA9C,CALF;EAMbiE,WAAW,EAAE,gBAAgBjE,KAAhB,CAAsB,GAAtB,CANA;EAObqc,kBAAkB,EAAE,IAPP;EAQb5a,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,sBAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE;EANM,CARH;EAgBbwH,aAAa,EAAE,KAhBF;;EAiBb3C,IAAI,CAACtW,KAAD,EAAQ;IACR,OAAO,QAAQA,KAAf;EACH,CAnBY;;EAoBbyL,QAAQ,CAACtK,IAAD,EAAOC,MAAP,EAAesV,OAAf,EAAwB;IAC5B,IAAIvV,IAAI,GAAG,EAAX,EAAe;MACX,OAAO,GAAP;IACH,CAFD,MAGK;MACD,OAAO,GAAP;IACH;EACJ,CA3BY;;EA4BbiR,QAAQ,EAAE;IACNyF,OAAO,EAAE,uBADH;IAENC,OAAO,EAAE,sBAFH;IAGNC,QAAQ,EAAE,sBAHJ;IAINC,OAAO,EAAE,qBAJH;IAKNC,QAAQ,EAAE,sBALJ;IAMNC,QAAQ,EAAE;EANJ,CA5BG;EAoCbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,QADE;IAEVC,IAAI,EAAE,QAFI;IAGV5S,CAAC,EAAEknB,SAAS,CAAC,GAAD,CAHF;IAIVrU,EAAE,EAAEqU,SAAS,CAAC,GAAD,CAJH;IAKV1nB,CAAC,EAAE0nB,SAAS,CAAC,GAAD,CALF;IAMVpU,EAAE,EAAEoU,SAAS,CAAC,GAAD,CANH;IAOVpnB,CAAC,EAAEonB,SAAS,CAAC,GAAD,CAPF;IAQVnU,EAAE,EAAEmU,SAAS,CAAC,GAAD,CARH;IASVznB,CAAC,EAAEynB,SAAS,CAAC,GAAD,CATF;IAUVlU,EAAE,EAAEkU,SAAS,CAAC,GAAD,CAVH;IAWVnnB,CAAC,EAAEmnB,SAAS,CAAC,GAAD,CAXF;IAYVjU,EAAE,EAAEiU,SAAS,CAAC,GAAD,CAZH;IAaV3nB,CAAC,EAAE2nB,SAAS,CAAC,GAAD,CAbF;IAcVhU,EAAE,EAAEgU,SAAS,CAAC,GAAD;EAdH,CApCD;;EAoDb9Z,QAAQ,CAAClU,GAAD,EAAM;IACV,OAAOA,GAAG,CAACmG,OAAJ,CAAY,eAAZ,EAA6B,UAAUR,KAAV,EAAiB;MACjD,OAAOkoB,WAAW,CAACloB,KAAD,CAAlB;IACH,CAFM,EAEJQ,OAFI,CAEI,IAFJ,EAEU,GAFV,CAAP;EAGH,CAxDY;;EAyDbgO,UAAU,CAACnU,GAAD,EAAM;IACZ,OAAOA,GAAG,CAACmG,OAAJ,CAAY,KAAZ,EAAmB,UAAUR,KAAV,EAAiB;MACvC,OAAOioB,WAAW,CAACjoB,KAAD,CAAlB;IACH,CAFM,EAEJQ,OAFI,CAEI,IAFJ,EAEU,GAFV,CAAP;EAGH,CA7DY;;EA8DbiL,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,EAFH,CAEM;;EAFN;AA9DO,CAAjB,C,CAoEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMsd,QAAQ,GAAG;EACbjN,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,oFAAoFoE,KAApF,CAA0F,GAA1F,CAFK;EAGbrE,WAAW,EAAE,kDAAkDqE,KAAlD,CAAwD,GAAxD,CAHA;EAIb8D,QAAQ,EAAE,yDAAyD9D,KAAzD,CAA+D,GAA/D,CAJG;EAKbmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CALF;EAMbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,MADQ;IAEZD,GAAG,EAAE,SAFO;IAGZE,CAAC,EAAE,WAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,kBALO;IAMZC,IAAI,EAAE;EANM,CAPH;EAebW,QAAQ,EAAE;IACNyF,OAAO,EAAE,aADH;IAENC,OAAO,EAAE,aAFH;IAGNC,QAAQ,EAAE,aAHJ;IAINC,OAAO,EAAE,cAJH;IAKNC,QAAQ,EAAE,UAAU5S,CAAV,EAAa;MACnB,QAAQA,CAAR;QACI,KAAK,CAAL;QACA,KAAK,CAAL;QACA,KAAK,CAAL;UACI,OAAO,4BAAP;;QACJ,KAAK,CAAL;QACA,KAAK,CAAL;QACA,KAAK,CAAL;QACA,KAAK,CAAL;UACI,OAAO,2BAAP;MATR;IAWH,CAjBK;IAkBN6S,QAAQ,EAAE;EAlBJ,CAfG;EAmCbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,SADE;IAEVC,IAAI,EAAE,UAFI;IAGV5S,CAAC,EAAE,iBAHO;IAIV6S,EAAE,EAAE,YAJM;IAKVrT,CAAC,EAAE,QALO;IAMVsT,EAAE,EAAE,WANM;IAOVhT,CAAC,EAAE,KAPO;IAQViT,EAAE,EAAE,SARM;IASVtT,CAAC,EAAE,KATO;IAUVuT,EAAE,EAAE,QAVM;IAWVjT,CAAC,EAAE,OAXO;IAYVkT,EAAE,EAAE,WAZM;IAaV1T,CAAC,EAAE,QAbO;IAcV2T,EAAE,EAAE;EAdM,CAnCD;EAmDbE,sBAAsB,EAAE,6BAnDX;EAoDbhV,OAAO,EAAE,UAAUqoB,IAAV,EAAgB;IACrB,MAAM9K,MAAM,GAAG/Z,MAAM,CAAC6kB,IAAD,CAArB;IACA,IAAIgB,SAAS,GAAG9L,MAAM,GAAG,EAAzB;IAAA,IAA6B+L,WAAW,GAAG/L,MAAM,GAAG,GAApD;;IACA,IAAIA,MAAM,KAAK,CAAf,EAAkB;MACd,OAAOA,MAAM,GAAG,KAAhB;IACH,CAFD,MAGK,IAAI+L,WAAW,KAAK,CAApB,EAAuB;MACxB,OAAO/L,MAAM,GAAG,KAAhB;IACH,CAFI,MAGA,IAAI+L,WAAW,GAAG,EAAd,IAAoBA,WAAW,GAAG,EAAtC,EAA0C;MAC3C,OAAO/L,MAAM,GAAG,KAAhB;IACH,CAFI,MAGA,IAAI8L,SAAS,KAAK,CAAlB,EAAqB;MACtB,OAAO9L,MAAM,GAAG,KAAhB;IACH,CAFI,MAGA,IAAI8L,SAAS,KAAK,CAAlB,EAAqB;MACtB,OAAO9L,MAAM,GAAG,KAAhB;IACH,CAFI,MAGA,IAAI8L,SAAS,KAAK,CAAd,IAAmBA,SAAS,KAAK,CAArC,EAAwC;MACzC,OAAO9L,MAAM,GAAG,KAAhB;IACH,CAFI,MAGA;MACD,OAAOA,MAAM,GAAG,KAAhB;IACH;EACJ,CA5EY;EA6EbrR,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AA7EO,CAAjB,C,CAmFA;AACA;AACA;;AACA,IAAIyd,gBAAgB,GAAG,8DAA8Dzc,KAA9D,CAAoE,GAApE,CAAvB;AAAA,IAAiG0c,aAAa,GAAG,kDAAkD1c,KAAlD,CAAwD,GAAxD,CAAjH;AACA,IAAI2c,aAAa,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,OAA9C,EAAuD,OAAvD,EAAgE,OAAhE,EAAyE,OAAzE,EAAkF,OAAlF,EAA2F,OAA3F,EAAoG,OAApG,CAApB;AACA,IAAIC,aAAa,GAAG,2KAApB;AACA,MAAMC,QAAQ,GAAG;EACbxN,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,oFAAoFoE,KAApF,CAA0F,GAA1F,CAFK;;EAGbrE,WAAW,CAACjN,IAAD,EAAO+E,MAAP,EAAeM,KAAf,EAAsB;IAC7B,IAAI,CAACrF,IAAL,EAAW;MACP,OAAO+tB,gBAAP;IACH;;IACD,IAAI,QAAQ5Z,IAAR,CAAapP,MAAb,CAAJ,EAA0B;MACtB,OAAOipB,aAAa,CAAC5mB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAApB;IACH;;IACD,OAAO0oB,gBAAgB,CAAC3mB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAAvB;EACH,CAXY;;EAYb+H,WAAW,EAAE8gB,aAZA;EAab/gB,gBAAgB,EAAE+gB,aAbL;EAcbE,iBAAiB,EAAE,uFAdN;EAebC,sBAAsB,EAAE,yFAfX;EAgBb/gB,WAAW,EAAE2gB,aAhBA;EAiBbK,eAAe,EAAEL,aAjBJ;EAkBbM,gBAAgB,EAAEN,aAlBL;EAmBb7Y,QAAQ,EAAE,8DAA8D9D,KAA9D,CAAoE,GAApE,CAnBG;EAoBbmE,aAAa,EAAE,qCAAqCnE,KAArC,CAA2C,GAA3C,CApBF;EAqBbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CArBA;EAsBbqc,kBAAkB,EAAE,IAtBP;EAuBb5a,cAAc,EAAE;IACZlB,EAAE,EAAE,MADQ;IAEZD,GAAG,EAAE,SAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,uBAJQ;IAKZC,GAAG,EAAE,4BALO;IAMZC,IAAI,EAAE;EANM,CAvBH;EA+BbW,QAAQ,EAAE;IACNyF,OAAO,CAACrY,IAAD,EAAO;MACV,OAAO,cAAc,QAAQwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAA3B,IAAgC,KAAhC,GAAwC,EAAtD,IAA4D,MAAnE;IACH,CAHK;;IAINsY,OAAO,CAACtY,IAAD,EAAO;MACV,OAAO,cAAc,QAAQwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAA3B,IAAgC,KAAhC,GAAwC,EAAtD,IAA4D,MAAnE;IACH,CANK;;IAONuY,QAAQ,CAACvY,IAAD,EAAO;MACX,OAAO,cAAc,QAAQwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAA3B,IAAgC,KAAhC,GAAwC,EAAtD,IAA4D,MAAnE;IACH,CATK;;IAUNwY,OAAO,CAACxY,IAAD,EAAO;MACV,OAAO,cAAc,QAAQwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAA3B,IAAgC,KAAhC,GAAwC,EAAtD,IAA4D,MAAnE;IACH,CAZK;;IAaNyY,QAAQ,CAACzY,IAAD,EAAO;MACX,OAAO,iBAAiB,iBAAiBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApC,IAAyC,cAAzC,GAA0D,EAA3E,IAAiF,MAAxF;IACH,CAfK;;IAgBN0Y,QAAQ,EAAE;EAhBJ,CA/BG;EAiDbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,OAFI;IAGV5S,CAAC,EAAE,YAHO;IAIV6S,EAAE,EAAE,WAJM;IAKVrT,CAAC,EAAE,UALO;IAMVsT,EAAE,EAAE,WANM;IAOVhT,CAAC,EAAE,UAPO;IAQViT,EAAE,EAAE,UARM;IASVtT,CAAC,EAAE,QATO;IAUVuT,EAAE,EAAE,SAVM;IAWVjT,CAAC,EAAE,QAXO;IAYVkT,EAAE,EAAE,UAZM;IAaV1T,CAAC,EAAE,QAbO;IAcV2T,EAAE,EAAE;EAdM,CAjDD;EAiEbE,sBAAsB,EAAE,wBAjEX;;EAkEbhV,OAAO,CAACqoB,IAAD,EAAO;IACV,MAAM5tB,GAAG,GAAG+I,MAAM,CAAC6kB,IAAD,CAAlB;IACA,MAAMtnB,MAAM,GAAItG,GAAG,GAAG,CAAP,GAAY,GAAZ,GACVA,GAAG,KAAK,CAAR,IAAaA,GAAG,KAAK,CAAtB,GAA2B,GAA3B,GACKA,GAAG,KAAK,CAAT,GAAc,GAAd,GACKA,GAAG,KAAK,CAAT,GAAc,GAAd,GAAoB,GAHhC;IAIA,OAAOA,GAAG,GAAGsG,MAAb;EACH,CAzEY;;EA0EbmL,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AA1EO,CAAjB,C,CAgFA;AACA;AACA;;AACA,MAAMke,QAAQ,GAAG,oFAAoFld,KAApF,CAA0F,GAA1F,CAAjB;AACA,MAAMmd,aAAa,GAAG,kDAAkDnd,KAAlD,CAAwD,GAAxD,CAAtB;;AACA,SAASod,QAAT,CAAkBzvB,GAAlB,EAAuB;EACnB,OAAQA,GAAG,GAAG,CAAP,IAAcA,GAAG,GAAG,CAApB,IAA2B,CAAC,EAAEA,GAAG,GAAG,EAAR,CAAD,KAAiB,CAAnD;AACH;;AACD,SAAS0vB,WAAT,CAAqB1vB,GAArB,EAA0B0U,aAA1B,EAAyCjB,GAAzC,EAA8CkB,QAA9C,EAAwD;EACpD,MAAM8S,MAAM,GAAGznB,GAAG,GAAG,GAArB;;EACA,QAAQyT,GAAR;IACI,KAAK,GAAL;MAAU;MACN,OAAQiB,aAAa,IAAIC,QAAlB,GAA8B,YAA9B,GAA6C,eAApD;;IACJ,KAAK,IAAL;MAAW;MACP,IAAID,aAAa,IAAIC,QAArB,EAA+B;QAC3B,OAAO8S,MAAM,IAAIgI,QAAQ,CAACzvB,GAAD,CAAR,GAAgB,SAAhB,GAA4B,QAAhC,CAAb;MACH,CAFD,MAGK;QACD,OAAOynB,MAAM,GAAG,WAAhB;MACH;;IACL;;IACA,KAAK,GAAL;MAAU;MACN,OAAO/S,aAAa,GAAG,QAAH,GAAeC,QAAQ,GAAG,QAAH,GAAc,SAAzD;;IACJ,KAAK,IAAL;MAAW;MACP,IAAID,aAAa,IAAIC,QAArB,EAA+B;QAC3B,OAAO8S,MAAM,IAAIgI,QAAQ,CAACzvB,GAAD,CAAR,GAAgB,QAAhB,GAA2B,OAA/B,CAAb;MACH,CAFD,MAGK;QACD,OAAOynB,MAAM,GAAG,UAAhB;MACH;;IACL;;IACA,KAAK,GAAL;MAAU;MACN,OAAO/S,aAAa,GAAG,QAAH,GAAeC,QAAQ,GAAG,QAAH,GAAc,SAAzD;;IACJ,KAAK,IAAL;MAAW;MACP,IAAID,aAAa,IAAIC,QAArB,EAA+B;QAC3B,OAAO8S,MAAM,IAAIgI,QAAQ,CAACzvB,GAAD,CAAR,GAAgB,QAAhB,GAA2B,OAA/B,CAAb;MACH,CAFD,MAGK;QACD,OAAOynB,MAAM,GAAG,UAAhB;MACH;;IACL;;IACA,KAAK,GAAL;MAAU;MACN,OAAQ/S,aAAa,IAAIC,QAAlB,GAA8B,KAA9B,GAAsC,MAA7C;;IACJ,KAAK,IAAL;MAAW;MACP,IAAID,aAAa,IAAIC,QAArB,EAA+B;QAC3B,OAAO8S,MAAM,IAAIgI,QAAQ,CAACzvB,GAAD,CAAR,GAAgB,KAAhB,GAAwB,KAA5B,CAAb;MACH,CAFD,MAGK;QACD,OAAOynB,MAAM,GAAG,KAAhB;MACH;;IACL;;IACA,KAAK,GAAL;MAAU;MACN,OAAQ/S,aAAa,IAAIC,QAAlB,GAA8B,OAA9B,GAAwC,SAA/C;;IACJ,KAAK,IAAL;MAAW;MACP,IAAID,aAAa,IAAIC,QAArB,EAA+B;QAC3B,OAAO8S,MAAM,IAAIgI,QAAQ,CAACzvB,GAAD,CAAR,GAAgB,QAAhB,GAA2B,QAA/B,CAAb;MACH,CAFD,MAGK;QACD,OAAOynB,MAAM,GAAG,QAAhB;MACH;;IACL;;IACA,KAAK,GAAL;MAAU;MACN,OAAQ/S,aAAa,IAAIC,QAAlB,GAA8B,KAA9B,GAAsC,OAA7C;;IACJ,KAAK,IAAL;MAAW;MACP,IAAID,aAAa,IAAIC,QAArB,EAA+B;QAC3B,OAAO8S,MAAM,IAAIgI,QAAQ,CAACzvB,GAAD,CAAR,GAAgB,MAAhB,GAAyB,KAA7B,CAAb;MACH,CAFD,MAGK;QACD,OAAOynB,MAAM,GAAG,MAAhB;MACH;;IACL;EA5DJ;AA8DH;;AACD,MAAMkI,QAAQ,GAAG;EACbjO,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAEshB,QAFK;EAGbvhB,WAAW,EAAEwhB,aAHA;EAIbnhB,WAAW,EAAG,UAAUJ,MAAV,EAAkBD,WAAlB,EAA+B;IACzC,IAAI9H,CAAJ;IAAA,IAAOsP,YAAY,GAAG,EAAtB;;IACA,KAAKtP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;MACrB;MACAsP,YAAY,CAACtP,CAAD,CAAZ,GAAkB,IAAI2E,MAAJ,CAAW,MAAMoD,MAAM,CAAC/H,CAAD,CAAZ,GAAkB,KAAlB,GAA0B8H,WAAW,CAAC9H,CAAD,CAArC,GAA2C,GAAtD,EAA2D,GAA3D,CAAlB;IACH;;IACD,OAAOsP,YAAP;EACH,CAPa,CAOZ+Z,QAPY,EAOFC,aAPE,CAJD;EAYbF,gBAAgB,EAAG,UAAUthB,WAAV,EAAuB;IACtC,IAAI9H,CAAJ;IAAA,IAAOwP,iBAAiB,GAAG,EAA3B;;IACA,KAAKxP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;MACrBwP,iBAAiB,CAACxP,CAAD,CAAjB,GAAuB,IAAI2E,MAAJ,CAAW,MAAMmD,WAAW,CAAC9H,CAAD,CAAjB,GAAuB,GAAlC,EAAuC,GAAvC,CAAvB;IACH;;IACD,OAAOwP,iBAAP;EACH,CANkB,CAMjB8Z,aANiB,CAZN;EAmBbH,eAAe,EAAG,UAAUphB,MAAV,EAAkB;IAChC,IAAI/H,CAAJ;IAAA,IAAOuP,gBAAgB,GAAG,EAA1B;;IACA,KAAKvP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;MACrBuP,gBAAgB,CAACvP,CAAD,CAAhB,GAAsB,IAAI2E,MAAJ,CAAW,MAAMoD,MAAM,CAAC/H,CAAD,CAAZ,GAAkB,GAA7B,EAAkC,GAAlC,CAAtB;IACH;;IACD,OAAOuP,gBAAP;EACH,CANiB,CAMhB8Z,QANgB,CAnBL;EA0BbpZ,QAAQ,EAAE,mDAAmD9D,KAAnD,CAAyD,GAAzD,CA1BG;EA2BbmE,aAAa,EAAE,uBAAuBnE,KAAvB,CAA6B,GAA7B,CA3BF;EA4BbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CA5BA;EA6BbyB,cAAc,EAAE;IACZlB,EAAE,EAAE,MADQ;IAEZD,GAAG,EAAE,SAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,cAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE,wBANM;IAOZ+T,CAAC,EAAE;EAPS,CA7BH;EAsCbpT,QAAQ,EAAE;IACNyF,OAAO,EAAE,aADH;IAENC,OAAO,EAAE,cAFH;;IAGNC,QAAQ,CAACvY,IAAD,EAAO;MACX,QAAQitB,YAAY,CAACjtB,IAAD,CAApB;QACI,KAAK,CAAL;UACI,OAAO,iBAAP;;QACJ,KAAK,CAAL;QACA,KAAK,CAAL;UACI,OAAO,iBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,kBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,mBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,gBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,iBAAP;MAbR;IAeH,CAnBK;;IAoBNwY,OAAO,EAAE,cApBH;;IAqBNC,QAAQ,CAACzY,IAAD,EAAO;MACX,QAAQitB,YAAY,CAACjtB,IAAD,CAApB;QACI,KAAK,CAAL;UACI,OAAO,uBAAP;;QACJ,KAAK,CAAL;QACA,KAAK,CAAL;UACI,OAAO,sBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,uBAAP;;QACJ,KAAK,CAAL;QACA,KAAK,CAAL;UACI,OAAO,sBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,uBAAP;MAZR;IAcH,CApCK;;IAqCN0Y,QAAQ,EAAE;EArCJ,CAtCG;EA6EbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,SAFI;IAGV5S,CAAC,EAAEuoB,WAHO;IAIV1V,EAAE,EAAE0V,WAJM;IAKV/oB,CAAC,EAAE+oB,WALO;IAMVzV,EAAE,EAAEyV,WANM;IAOVzoB,CAAC,EAAEyoB,WAPO;IAQVxV,EAAE,EAAEwV,WARM;IASV9oB,CAAC,EAAE8oB,WATO;IAUVvV,EAAE,EAAEuV,WAVM;IAWVxoB,CAAC,EAAEwoB,WAXO;IAYVtV,EAAE,EAAEsV,WAZM;IAaVhpB,CAAC,EAAEgpB,WAbO;IAcVrV,EAAE,EAAEqV;EAdM,CA7ED;EA6FbnV,sBAAsB,EAAE,WA7FX;EA8FbhV,OAAO,EAAE,KA9FI;EA+FbkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AA/FO,CAAjB,C,CAqGA;AACA;AACA;;AACA,MAAMue,QAAQ,GAAG;EACblO,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,sFAAsFoE,KAAtF,CAA4F,GAA5F,CAFK;EAGbrE,WAAW,EAAE,kDAAkDqE,KAAlD,CAAwD,GAAxD,CAHA;EAIb8D,QAAQ,EAAE,qDAAqD9D,KAArD,CAA2D,GAA3D,CAJG;EAKbmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CALF;EAMbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,cAJQ;IAKZC,GAAG,EAAE,oBALO;IAMZC,IAAI,EAAE;EANM,CAPH;EAebW,QAAQ,EAAE;IACNyF,OAAO,EAAE,gBADH;IAENC,OAAO,EAAE,mBAFH;IAGNC,QAAQ,EAAE,kBAHJ;IAINC,OAAO,EAAE,gBAJH;IAKNC,QAAQ,EAAE,oBALJ;IAMNC,QAAQ,EAAE;EANJ,CAfG;EAuBbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,UAFI;IAGV5S,CAAC,EAAE,aAHO;IAIVR,CAAC,EAAE,UAJO;IAKVsT,EAAE,EAAE,aALM;IAMVhT,CAAC,EAAE,SANO;IAOViT,EAAE,EAAE,UAPM;IAQVtT,CAAC,EAAE,QARO;IASVuT,EAAE,EAAE,SATM;IAUVjT,CAAC,EAAE,UAVO;IAWVkT,EAAE,EAAE,YAXM;IAYV1T,CAAC,EAAE,OAZO;IAaV2T,EAAE,EAAE;EAbM,CAvBD;EAsCbE,sBAAsB,EAAE,WAtCX;EAuCbhV,OAAO,EAAE,KAvCI;EAwCbkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAxCO,CAAjB,C,CA8CA;AACA;AACA;AACA;AACA;;AACA,SAASwe,qBAAT,CAA+B7vB,GAA/B,EAAoC0U,aAApC,EAAmDjB,GAAnD,EAAwDkB,QAAxD,EAAkE;EAC9D,MAAM7O,MAAM,GAAG;IACX,KAAK,CAAC,aAAD,EAAgB,cAAhB,CADM;IAEX,KAAK,CAAC,aAAD,EAAgB,cAAhB,CAFM;IAGX,KAAK,CAAC,SAAD,EAAY,WAAZ,CAHM;IAIX,MAAM,CAAC9F,GAAG,GAAG,OAAP,EAAgBA,GAAG,GAAG,QAAtB,CAJK;IAKX,KAAK,CAAC,WAAD,EAAc,aAAd,CALM;IAMX,MAAM,CAACA,GAAG,GAAG,SAAP,EAAkBA,GAAG,GAAG,UAAxB,CANK;IAOX,KAAK,CAAC,UAAD,EAAa,YAAb,CAPM;IAQX,MAAM,CAACA,GAAG,GAAG,QAAP,EAAiBA,GAAG,GAAG,SAAvB;EARK,CAAf;EAUA,OAAO0U,aAAa,GAAG5O,MAAM,CAAC2N,GAAD,CAAN,CAAY,CAAZ,CAAH,GAAoB3N,MAAM,CAAC2N,GAAD,CAAN,CAAY,CAAZ,CAAxC;AACH;;AACD,MAAMqc,QAAQ,GAAG;EACbpO,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,qFAAqFoE,KAArF,CAA2F,GAA3F,CAFK;EAGbrE,WAAW,EAAE,6DAA6DqE,KAA7D,CAAmE,GAAnE,CAHA;EAIb0d,gBAAgB,EAAE,IAJL;EAKb5Z,QAAQ,EAAE,8DAA8D9D,KAA9D,CAAoE,GAApE,CALG;EAMbmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CANF;EAObiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CAPA;EAQbqc,kBAAkB,EAAE,IARP;EASb5a,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,cAJQ;IAKZC,GAAG,EAAE,oBALO;IAMZC,IAAI,EAAE;EANM,CATH;EAiBbW,QAAQ,EAAE;IACNyF,OAAO,EAAE,qBADH;IAENK,QAAQ,EAAE,GAFJ;IAGNJ,OAAO,EAAE,sBAHH;IAINC,QAAQ,EAAE,oBAJJ;IAKNC,OAAO,EAAE,uBALH;IAMNC,QAAQ,EAAE;EANJ,CAjBG;EAyBb/E,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,QAFI;IAGV5S,CAAC,EAAE,mBAHO;IAIV6S,EAAE,EAAE,aAJM;IAKVrT,CAAC,EAAEkpB,qBALO;IAMV5V,EAAE,EAAE,YANM;IAOVhT,CAAC,EAAE4oB,qBAPO;IAQV3V,EAAE,EAAE,YARM;IASVtT,CAAC,EAAEipB,qBATO;IAUV1V,EAAE,EAAE0V,qBAVM;IAWV3oB,CAAC,EAAE2oB,qBAXO;IAYVzV,EAAE,EAAEyV,qBAZM;IAaVnpB,CAAC,EAAEmpB,qBAbO;IAcVxV,EAAE,EAAEwV;EAdM,CAzBD;EAyCbtV,sBAAsB,EAAE,WAzCX;EA0CbhV,OAAO,EAAE,KA1CI;EA2CbkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AA3CO,CAAjB,C,CAiDA;AACA;AACA;;AACA,MAAM2e,UAAU,GAAG;EACftO,IAAI,EAAE,OADS;EAEfzT,MAAM,EAAE,wFAAwFoE,KAAxF,CAA8F,GAA9F,CAFO;EAGfrE,WAAW,EAAE,kDAAkDqE,KAAlD,CAAwD,GAAxD,CAHE;EAIf8D,QAAQ,EAAE,2DAA2D9D,KAA3D,CAAiE,GAAjE,CAJK;EAKfmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CALA;EAMfiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CANE;EAOfyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE;EANM,CAPD;EAefW,QAAQ,EAAE;IACNyF,OAAO,EAAE,eADH;IAENC,OAAO,EAAE,kBAFH;IAGNC,QAAQ,EAAE,cAHJ;IAINC,OAAO,EAAE,mBAJH;IAKNC,QAAQ,EAAE,qBALJ;IAMNC,QAAQ,EAAE;EANJ,CAfK;EAuBfhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,QAFI;IAGV5S,CAAC,EAAE,eAHO;IAIV6S,EAAE,EAAE,YAJM;IAKVrT,CAAC,EAAE,UALO;IAMVsT,EAAE,EAAE,YANM;IAOVhT,CAAC,EAAE,SAPO;IAQViT,EAAE,EAAE,UARM;IASVtT,CAAC,EAAE,OATO;IAUVuT,EAAE,EAAE,SAVM;IAWVjT,CAAC,EAAE,SAXO;IAYVkT,EAAE,EAAE,WAZM;IAaV1T,CAAC,EAAE,QAbO;IAcV2T,EAAE,EAAE;EAdM,CAvBC;EAuCfE,sBAAsB,EAAE,sBAvCT;;EAwCfhV,OAAO,CAACqoB,IAAD,EAAO;IACV,MAAM5tB,GAAG,GAAG+I,MAAM,CAAC6kB,IAAD,CAAlB;IACA,MAAMjsB,CAAC,GAAG3B,GAAG,GAAG,EAAhB;IAAA,MAAoBsG,MAAM,GAAI,CAAC,EAAEtG,GAAG,GAAG,GAAN,GAAY,EAAd,CAAD,KAAuB,CAAxB,GAA6B,IAA7B,GACxB2B,CAAC,KAAK,CAAP,GAAY,IAAZ,GACKA,CAAC,KAAK,CAAP,GAAY,IAAZ,GACKA,CAAC,KAAK,CAAP,GAAY,IAAZ,GAAmB,IAH/B;IAIA,OAAO3B,GAAG,GAAGsG,MAAb;EACH,CA/Cc;;EAgDfmL,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAhDS,CAAnB,C,CAsDA;AACA;;AACA,IAAI4e,gBAAgB,GAAG,8DAA8D5d,KAA9D,CAAoE,GAApE,CAAvB;AAAA,IAAiG6d,aAAa,GAAG,kDAAkD7d,KAAlD,CAAwD,GAAxD,CAAjH;AACA,IAAI8d,aAAa,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,OAA9C,EAAuD,OAAvD,EAAgE,OAAhE,EAAyE,OAAzE,EAAkF,OAAlF,EAA2F,OAA3F,EAAoG,OAApG,CAApB;AACA,IAAIC,aAAa,GAAG,kLAApB;AACA,MAAMC,UAAU,GAAG;EACf3O,IAAI,EAAE,OADS;EAEfzT,MAAM,EAAE,2FAA2FoE,KAA3F,CAAiG,GAAjG,CAFO;;EAGfrE,WAAW,CAACjN,IAAD,EAAO+E,MAAP,EAAeM,KAAf,EAAsB;IAC7B,IAAI,CAACrF,IAAL,EAAW;MACP,OAAOkvB,gBAAP;IACH,CAFD,MAGK,IAAI,QAAQ/a,IAAR,CAAapP,MAAb,CAAJ,EAA0B;MAC3B,OAAOoqB,aAAa,CAAC/nB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAApB;IACH,CAFI,MAGA;MACD,OAAO6pB,gBAAgB,CAAC9nB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAAvB;IACH;EACJ,CAbc;;EAcf+H,WAAW,EAAEiiB,aAdE;EAefliB,gBAAgB,EAAEkiB,aAfH;EAgBfjB,iBAAiB,EAAE,8FAhBJ;EAiBfC,sBAAsB,EAAE,yFAjBT;EAkBf/gB,WAAW,EAAE8hB,aAlBE;EAmBfd,eAAe,EAAEc,aAnBF;EAoBfb,gBAAgB,EAAEa,aApBH;EAqBfha,QAAQ,EAAE,uDAAuD9D,KAAvD,CAA6D,GAA7D,CArBK;EAsBfmE,aAAa,EAAE,qCAAqCnE,KAArC,CAA2C,GAA3C,CAtBA;EAuBfiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CAvBE;EAwBfqc,kBAAkB,EAAE,IAxBL;EAyBf5a,cAAc,EAAE;IACZlB,EAAE,EAAE,QADQ;IAEZD,GAAG,EAAE,WAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,uBAJQ;IAKZC,GAAG,EAAE,8BALO;IAMZC,IAAI,EAAE;EANM,CAzBD;EAiCfW,QAAQ,EAAE;IACNyF,OAAO,CAACrY,IAAD,EAAO;MACV,OAAO,eAAgBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA9C,IAAoD,MAA3D;IACH,CAHK;;IAINsY,OAAO,CAACtY,IAAD,EAAO;MACV,OAAO,kBAAmBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAAjD,IAAuD,MAA9D;IACH,CANK;;IAONuY,QAAQ,CAACvY,IAAD,EAAO;MACX,OAAO,gBAAiBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA/C,IAAqD,MAA5D;IACH,CATK;;IAUNwY,OAAO,CAACxY,IAAD,EAAO;MACV,OAAO,gBAAiBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA/C,IAAqD,MAA5D;IACH,CAZK;;IAaNyY,QAAQ,CAACzY,IAAD,EAAO;MACX,OAAO,4BAA6BwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA3D,IAAiE,MAAxE;IACH,CAfK;;IAgBN0Y,QAAQ,EAAE;EAhBJ,CAjCK;EAmDfhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,SAFI;IAGV5S,CAAC,EAAE,eAHO;IAIV6S,EAAE,EAAE,aAJM;IAKVrT,CAAC,EAAE,WALO;IAMVsT,EAAE,EAAE,YANM;IAOVhT,CAAC,EAAE,UAPO;IAQViT,EAAE,EAAE,UARM;IASVtT,CAAC,EAAE,QATO;IAUVuT,EAAE,EAAE,SAVM;IAWVjT,CAAC,EAAE,QAXO;IAYVkT,EAAE,EAAE,UAZM;IAaV1T,CAAC,EAAE,QAbO;IAcV2T,EAAE,EAAE;EAdM,CAnDC;EAmEfE,sBAAsB,EAAE,UAnET;EAoEfhV,OAAO,EAAE,KApEM;EAqEfkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AArES,CAAnB,C,CA2EA;AACA;AACA;;AACA,IAAIif,gBAAgB,GAAG,8DAA8Dje,KAA9D,CAAoE,GAApE,CAAvB;AAAA,IAAiGke,aAAa,GAAG,kDAAkDle,KAAlD,CAAwD,GAAxD,CAAjH;AACA,IAAIme,aAAa,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,OAA9C,EAAuD,OAAvD,EAAgE,OAAhE,EAAyE,OAAzE,EAAkF,OAAlF,EAA2F,OAA3F,EAAoG,OAApG,CAApB;AACA,IAAIC,aAAa,GAAG,kLAApB;AACA,MAAMC,QAAQ,GAAG;EACbhP,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,2FAA2FoE,KAA3F,CAAiG,GAAjG,CAFK;;EAGbrE,WAAW,CAACjN,IAAD,EAAO+E,MAAP,EAAeM,KAAf,EAAsB;IAC7B,IAAI,CAACrF,IAAL,EAAW;MACP,OAAOuvB,gBAAP;IACH;;IACD,IAAI,QAAQpb,IAAR,CAAapP,MAAb,CAAJ,EAA0B;MACtB,OAAOyqB,aAAa,CAACpoB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAApB;IACH;;IACD,OAAOkqB,gBAAgB,CAACnoB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAAvB;EACH,CAXY;;EAYb+H,WAAW,EAAEsiB,aAZA;EAabviB,gBAAgB,EAAEuiB,aAbL;EAcbtB,iBAAiB,EAAE,8FAdN;EAebC,sBAAsB,EAAE,yFAfX;EAgBb/gB,WAAW,EAAEmiB,aAhBA;EAiBbnB,eAAe,EAAEmB,aAjBJ;EAkBblB,gBAAgB,EAAEkB,aAlBL;EAmBbra,QAAQ,EAAE,uDAAuD9D,KAAvD,CAA6D,GAA7D,CAnBG;EAoBbmE,aAAa,EAAE,qCAAqCnE,KAArC,CAA2C,GAA3C,CApBF;EAqBbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CArBA;EAsBbqc,kBAAkB,EAAE,IAtBP;EAuBb5a,cAAc,EAAE;IACZlB,EAAE,EAAE,MADQ;IAEZD,GAAG,EAAE,SAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,uBAJQ;IAKZC,GAAG,EAAE,4BALO;IAMZC,IAAI,EAAE;EANM,CAvBH;EA+BbW,QAAQ,EAAE;IACNyF,OAAO,CAACrY,IAAD,EAAO;MACV,OAAO,eAAgBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA9C,IAAoD,MAA3D;IACH,CAHK;;IAINsY,OAAO,CAACtY,IAAD,EAAO;MACV,OAAO,kBAAmBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAAjD,IAAuD,MAA9D;IACH,CANK;;IAONuY,QAAQ,CAACvY,IAAD,EAAO;MACX,OAAO,gBAAiBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA/C,IAAqD,MAA5D;IACH,CATK;;IAUNwY,OAAO,CAACxY,IAAD,EAAO;MACV,OAAO,gBAAiBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA/C,IAAqD,MAA5D;IACH,CAZK;;IAaNyY,QAAQ,CAACzY,IAAD,EAAO;MACX,OAAO,4BAA6BwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA3D,IAAiE,MAAxE;IACH,CAfK;;IAgBN0Y,QAAQ,EAAE;EAhBJ,CA/BG;EAiDbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,SAFI;IAGV5S,CAAC,EAAE,eAHO;IAIV6S,EAAE,EAAE,aAJM;IAKVrT,CAAC,EAAE,WALO;IAMVsT,EAAE,EAAE,YANM;IAOVhT,CAAC,EAAE,UAPO;IAQViT,EAAE,EAAE,UARM;IASVtT,CAAC,EAAE,QATO;IAUVuT,EAAE,EAAE,SAVM;IAWVjT,CAAC,EAAE,QAXO;IAYVkT,EAAE,EAAE,UAZM;IAaV1T,CAAC,EAAE,QAbO;IAcV2T,EAAE,EAAE;EAdM,CAjDD;EAiEbE,sBAAsB,EAAE,UAjEX;EAkEbhV,OAAO,EAAE,KAlEI;EAmEbkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAnEO,CAAjB,C,CAyEA;AACA;;AACA,IAAIsf,gBAAgB,GAAG,8DAA8Dte,KAA9D,CAAoE,GAApE,CAAvB;AACA,IAAIue,aAAa,GAAG,kDAAkDve,KAAlD,CAAwD,GAAxD,CAApB;AACA,MAAMwe,UAAU,GAAG;EACfnP,IAAI,EAAE,OADS;EAEfzT,MAAM,EAAE,2FAA2FoE,KAA3F,CAAiG,GAAjG,CAFO;;EAGfrE,WAAW,CAACjN,IAAD,EAAO+E,MAAP,EAAeM,KAAf,EAAsB;IAC7B,IAAI,CAACrF,IAAL,EAAW;MACP,OAAO4vB,gBAAP;IACH,CAFD,MAGK,IAAI,QAAQzb,IAAR,CAAapP,MAAb,CAAJ,EAA0B;MAC3B,OAAO8qB,aAAa,CAACzoB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAApB;IACH,CAFI,MAGA;MACD,OAAOuqB,gBAAgB,CAACxoB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAAvB;IACH;EACJ,CAbc;;EAcf2pB,gBAAgB,EAAE,IAdH;EAef5Z,QAAQ,EAAE,uDAAuD9D,KAAvD,CAA6D,GAA7D,CAfK;EAgBfmE,aAAa,EAAE,qCAAqCnE,KAArC,CAA2C,GAA3C,CAhBA;EAiBfiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CAjBE;EAkBfqc,kBAAkB,EAAE,IAlBL;EAmBf5a,cAAc,EAAE;IACZlB,EAAE,EAAE,QADQ;IAEZD,GAAG,EAAE,WAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,uBAJQ;IAKZC,GAAG,EAAE,8BALO;IAMZC,IAAI,EAAE;EANM,CAnBD;EA2BfW,QAAQ,EAAE;IACNyF,OAAO,CAACrY,IAAD,EAAO;MACV,OAAO,eAAgBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA9C,IAAoD,MAA3D;IACH,CAHK;;IAINsY,OAAO,CAACtY,IAAD,EAAO;MACV,OAAO,kBAAmBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAAjD,IAAuD,MAA9D;IACH,CANK;;IAONuY,QAAQ,CAACvY,IAAD,EAAO;MACX,OAAO,gBAAiBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA/C,IAAqD,MAA5D;IACH,CATK;;IAUNwY,OAAO,CAACxY,IAAD,EAAO;MACV,OAAO,gBAAiBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA/C,IAAqD,MAA5D;IACH,CAZK;;IAaNyY,QAAQ,CAACzY,IAAD,EAAO;MACX,OAAO,4BAA6BwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA3D,IAAiE,MAAxE;IACH,CAfK;;IAgBN0Y,QAAQ,EAAE;EAhBJ,CA3BK;EA6CfhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,SAFI;IAGV5S,CAAC,EAAE,eAHO;IAIV6S,EAAE,EAAE,aAJM;IAKVrT,CAAC,EAAE,WALO;IAMVsT,EAAE,EAAE,YANM;IAOVhT,CAAC,EAAE,UAPO;IAQViT,EAAE,EAAE,UARM;IASVtT,CAAC,EAAE,QATO;IAUVuT,EAAE,EAAE,SAVM;IAWVjT,CAAC,EAAE,QAXO;IAYVkT,EAAE,EAAE,UAZM;IAaV1T,CAAC,EAAE,QAbO;IAcV2T,EAAE,EAAE;EAdM,CA7CC;EA6DfE,sBAAsB,EAAE,UA7DT;EA8DfhV,OAAO,EAAE,KA9DM;EA+DfkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AA/DS,CAAnB,C,CAqEA;AACA;AACA;;AACA,IAAIyf,gBAAgB,GAAG,8DAA8Dze,KAA9D,CAAoE,GAApE,CAAvB;AACA,IAAI0e,aAAa,GAAG,kDAAkD1e,KAAlD,CAAwD,GAAxD,CAApB;AACA,MAAM2e,UAAU,GAAG;EACftP,IAAI,EAAE,OADS;EAEfzT,MAAM,EAAE,2FAA2FoE,KAA3F,CAAiG,GAAjG,CAFO;;EAGfrE,WAAW,CAACjN,IAAD,EAAO+E,MAAP,EAAeM,KAAf,EAAsB;IAC7B,IAAI,CAACrF,IAAL,EAAW;MACP,OAAO+vB,gBAAP;IACH,CAFD,MAGK,IAAI,QAAQ5b,IAAR,CAAapP,MAAb,CAAJ,EAA0B;MAC3B,OAAOirB,aAAa,CAAC5oB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAApB;IACH,CAFI,MAGA;MACD,OAAO0qB,gBAAgB,CAAC3oB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAAvB;IACH;EACJ,CAbc;;EAcf2pB,gBAAgB,EAAE,IAdH;EAef5Z,QAAQ,EAAE,uDAAuD9D,KAAvD,CAA6D,GAA7D,CAfK;EAgBfmE,aAAa,EAAE,qCAAqCnE,KAArC,CAA2C,GAA3C,CAhBA;EAiBfiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CAjBE;EAkBfqc,kBAAkB,EAAE,IAlBL;EAmBf5a,cAAc,EAAE;IACZlB,EAAE,EAAE,QADQ;IAEZD,GAAG,EAAE,WAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,uBAJQ;IAKZC,GAAG,EAAE,8BALO;IAMZC,IAAI,EAAE;EANM,CAnBD;EA2BfW,QAAQ,EAAE;IACNyF,OAAO,CAACrY,IAAD,EAAO;MACV,OAAO,eAAgBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA9C,IAAoD,MAA3D;IACH,CAHK;;IAINsY,OAAO,CAACtY,IAAD,EAAO;MACV,OAAO,kBAAmBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAAjD,IAAuD,MAA9D;IACH,CANK;;IAONuY,QAAQ,CAACvY,IAAD,EAAO;MACX,OAAO,gBAAiBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA/C,IAAqD,MAA5D;IACH,CATK;;IAUNwY,OAAO,CAACxY,IAAD,EAAO;MACV,OAAO,gBAAiBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA/C,IAAqD,MAA5D;IACH,CAZK;;IAaNyY,QAAQ,CAACzY,IAAD,EAAO;MACX,OAAO,4BAA6BwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA3D,IAAiE,MAAxE;IACH,CAfK;;IAgBN0Y,QAAQ,EAAE;EAhBJ,CA3BK;EA6CfhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,SAFI;IAGV5S,CAAC,EAAE,eAHO;IAIV6S,EAAE,EAAE,aAJM;IAKVrT,CAAC,EAAE,WALO;IAMVsT,EAAE,EAAE,YANM;IAOVhT,CAAC,EAAE,UAPO;IAQViT,EAAE,EAAE,UARM;IASVtT,CAAC,EAAE,QATO;IAUVuT,EAAE,EAAE,SAVM;IAWVjT,CAAC,EAAE,QAXO;IAYVkT,EAAE,EAAE,UAZM;IAaV1T,CAAC,EAAE,QAbO;IAcV2T,EAAE,EAAE;EAdM,CA7CC;EA6DfE,sBAAsB,EAAE,UA7DT;EA8DfhV,OAAO,EAAE,KA9DM;EA+DfkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AA/DS,CAAnB,C,CAqEA;AACA;AACA;;AACA,MAAM4f,qBAAqB,GAAG,UAAUjxB,GAAV,EAAe0U,aAAf,EAA8BjB,GAA9B,EAAmCkB,QAAnC,EAA6C;EACvE,MAAM7O,MAAM,GAAG;IACXqB,CAAC,EAAE,CAAC,cAAD,EAAiB,aAAjB,EAAgC,eAAhC,CADQ;IAEX6S,EAAE,EAAE,CAACha,GAAG,GAAG,SAAP,EAAkBA,GAAG,GAAG,UAAxB,CAFO;IAGX2G,CAAC,EAAE,CAAC,YAAD,EAAe,WAAf,CAHQ;IAIXsT,EAAE,EAAE,CAACja,GAAG,GAAG,SAAP,EAAkBA,GAAG,GAAG,UAAxB,CAJO;IAKXiH,CAAC,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,UAA3B,CALQ;IAMXiT,EAAE,EAAE,CAACla,GAAG,GAAG,QAAP,EAAiBA,GAAG,GAAG,QAAvB,CANO;IAOX4G,CAAC,EAAE,CAAC,WAAD,EAAc,UAAd,CAPQ;IAQXM,CAAC,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,SAAxB,CARQ;IASXkT,EAAE,EAAE,CAACpa,GAAG,GAAG,MAAP,EAAeA,GAAG,GAAG,OAArB,CATO;IAUX0G,CAAC,EAAE,CAAC,WAAD,EAAc,OAAd,EAAuB,WAAvB,CAVQ;IAWX2T,EAAE,EAAE,CAACra,GAAG,GAAG,QAAP,EAAiBA,GAAG,GAAG,SAAvB;EAXO,CAAf;;EAaA,IAAI0U,aAAJ,EAAmB;IACf,OAAO5O,MAAM,CAAC2N,GAAD,CAAN,CAAY,CAAZ,IAAiB3N,MAAM,CAAC2N,GAAD,CAAN,CAAY,CAAZ,CAAjB,GAAkC3N,MAAM,CAAC2N,GAAD,CAAN,CAAY,CAAZ,CAAzC;EACH;;EACD,OAAOkB,QAAQ,GAAG7O,MAAM,CAAC2N,GAAD,CAAN,CAAY,CAAZ,CAAH,GAAoB3N,MAAM,CAAC2N,GAAD,CAAN,CAAY,CAAZ,CAAnC;AACH,CAlBD;;AAmBA,MAAMyd,QAAQ,GAAG;EACbxP,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,6FAA6FoE,KAA7F,CAAmG,GAAnG,CAFK;EAGbrE,WAAW,EAAE,6DAA6DqE,KAA7D,CAAmE,GAAnE,CAHA;EAIb8D,QAAQ,EAAE,iEAAiE9D,KAAjE,CAAuE,GAAvE,CAJG;EAKbmE,aAAa,EAAE,gBAAgBnE,KAAhB,CAAsB,GAAtB,CALF;EAMbiE,WAAW,EAAE,gBAAgBjE,KAAhB,CAAsB,GAAtB,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,MADQ;IAEZD,GAAG,EAAE,SAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,cAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE;EANM,CAPH;EAebW,QAAQ,EAAE;IACNyF,OAAO,EAAE,YADH;IAENC,OAAO,EAAE,aAFH;IAGNC,QAAQ,EAAE,oBAHJ;IAINC,OAAO,EAAE,YAJH;IAKNC,QAAQ,EAAE,mBALJ;IAMNC,QAAQ,EAAE;EANJ,CAfG;EAuBbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,WADE;IAEVC,IAAI,EAAE,WAFI;IAGV5S,CAAC,EAAE8pB,qBAHO;IAIVjX,EAAE,EAAEiX,qBAJM;IAKVtqB,CAAC,EAAEsqB,qBALO;IAMVhX,EAAE,EAAEgX,qBANM;IAOVhqB,CAAC,EAAEgqB,qBAPO;IAQV/W,EAAE,EAAE+W,qBARM;IASVrqB,CAAC,EAAEqqB,qBATO;IAUV9W,EAAE,EAAE,UAVM;IAWVjT,CAAC,EAAE+pB,qBAXO;IAYV7W,EAAE,EAAE6W,qBAZM;IAaVvqB,CAAC,EAAEuqB,qBAbO;IAcV5W,EAAE,EAAE4W;EAdM,CAvBD;EAuCb1W,sBAAsB,EAAE,UAvCX;EAwCbhV,OAAO,EAAE,KAxCI;EAyCbkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAzCO,CAAjB,C,CA+CA;AACA;;AACA,IAAI8f,WAAW,GAAG,wEAAwE9e,KAAxE,CAA8E,GAA9E,CAAlB;AAAA,IAAsG+e,aAAa,GAAG,CAClH,OADkH,EACzG,OADyG,EAChG,QADgG,EACtF,QADsF,EAC5E,QAD4E,EAClE,QADkE,EACxD,QADwD,EAElHD,WAAW,CAAC,CAAD,CAFuG,EAElGA,WAAW,CAAC,CAAD,CAFuF,EAElFA,WAAW,CAAC,CAAD,CAFuE,CAAtH;;AAIA,SAASE,WAAT,CAAqBrxB,GAArB,EAA0B0U,aAA1B,EAAyCjB,GAAzC,EAA8CkB,QAA9C,EAAwD;EACpD,IAAI8S,MAAM,GAAG,EAAb;;EACA,QAAQhU,GAAR;IACI,KAAK,GAAL;MACI,OAAOkB,QAAQ,GAAG,mBAAH,GAAyB,iBAAxC;;IACJ,KAAK,IAAL;MACI,OAAOA,QAAQ,GAAG,UAAH,GAAgB,UAA/B;;IACJ,KAAK,GAAL;MACI,OAAOA,QAAQ,GAAG,UAAH,GAAgB,UAA/B;;IACJ,KAAK,IAAL;MACI8S,MAAM,GAAG9S,QAAQ,GAAG,UAAH,GAAgB,WAAjC;MACA;;IACJ,KAAK,GAAL;MACI,OAAOA,QAAQ,GAAG,QAAH,GAAc,OAA7B;;IACJ,KAAK,IAAL;MACI8S,MAAM,GAAG9S,QAAQ,GAAG,QAAH,GAAc,QAA/B;MACA;;IACJ,KAAK,GAAL;MACI,OAAOA,QAAQ,GAAG,QAAH,GAAc,OAA7B;;IACJ,KAAK,IAAL;MACI8S,MAAM,GAAG9S,QAAQ,GAAG,QAAH,GAAc,QAA/B;MACA;;IACJ,KAAK,GAAL;MACI,OAAOA,QAAQ,GAAG,WAAH,GAAiB,UAAhC;;IACJ,KAAK,IAAL;MACI8S,MAAM,GAAG9S,QAAQ,GAAG,WAAH,GAAiB,WAAlC;MACA;;IACJ,KAAK,GAAL;MACI,OAAOA,QAAQ,GAAG,QAAH,GAAc,OAA7B;;IACJ,KAAK,IAAL;MACI8S,MAAM,GAAG9S,QAAQ,GAAG,QAAH,GAAc,QAA/B;MACA;EA7BR;;EA+BA8S,MAAM,GAAG6J,YAAY,CAACtxB,GAAD,EAAM2U,QAAN,CAAZ,GAA8B,GAA9B,GAAoC8S,MAA7C;EACA,OAAOA,MAAP;AACH;;AACD,SAAS6J,YAAT,CAAsBtxB,GAAtB,EAA2B2U,QAA3B,EAAqC;EACjC,OAAO3U,GAAG,GAAG,EAAN,GAAY2U,QAAQ,GAAGyc,aAAa,CAACpxB,GAAD,CAAhB,GAAwBmxB,WAAW,CAACnxB,GAAD,CAAvD,GAAgEA,GAAvE;AACH;;AACD,MAAMuxB,QAAQ,GAAG;EACb7P,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,2GAA2GoE,KAA3G,CAAiH,GAAjH,CAFK;EAGbrE,WAAW,EAAE,uEAAuEqE,KAAvE,CAA6E,GAA7E,CAHA;EAIb8D,QAAQ,EAAE,qEAAqE9D,KAArE,CAA2E,GAA3E,CAJG;EAKbmE,aAAa,EAAE,uBAAuBnE,KAAvB,CAA6B,GAA7B,CALF;EAMbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,kBAJQ;IAKZC,GAAG,EAAE,+BALO;IAMZC,IAAI,EAAE,qCANM;IAOZ+T,CAAC,EAAE,UAPS;IAQZyK,EAAE,EAAE,aARQ;IASZC,GAAG,EAAE,0BATO;IAUZC,IAAI,EAAE;EAVM,CAPH;EAmBb/d,QAAQ,EAAE;IACNyF,OAAO,EAAE,mBADH;IAENC,OAAO,EAAE,qBAFH;IAGNC,QAAQ,EAAE,eAHJ;IAINC,OAAO,EAAE,kBAJH;IAKNC,QAAQ,EAAE,2BALJ;IAMNC,QAAQ,EAAE;EANJ,CAnBG;EA2BbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,WADE;IAEVC,IAAI,EAAE,WAFI;IAGV5S,CAAC,EAAEkqB,WAHO;IAIVrX,EAAE,EAAEqX,WAJM;IAKV1qB,CAAC,EAAE0qB,WALO;IAMVpX,EAAE,EAAEoX,WANM;IAOVpqB,CAAC,EAAEoqB,WAPO;IAQVnX,EAAE,EAAEmX,WARM;IASVzqB,CAAC,EAAEyqB,WATO;IAUVlX,EAAE,EAAEkX,WAVM;IAWVnqB,CAAC,EAAEmqB,WAXO;IAYVjX,EAAE,EAAEiX,WAZM;IAaV3qB,CAAC,EAAE2qB,WAbO;IAcVhX,EAAE,EAAEgX;EAdM,CA3BD;EA2Cb9W,sBAAsB,EAAE,WA3CX;EA4CbhV,OAAO,EAAE,KA5CI;EA6CbkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AA7CO,CAAjB,C,CAmDA;AACA;AACA;;AACA,MAAMsgB,QAAQ,GAAG;EACbjQ,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,uFAAuFoE,KAAvF,CAA6F,GAA7F,CAFK;EAGbrE,WAAW,EAAE,iEAAiEqE,KAAjE,CAAuE,GAAvE,CAHA;EAIb0d,gBAAgB,EAAE,IAJL;EAKb5Z,QAAQ,EAAE,sDAAsD9D,KAAtD,CAA4D,GAA5D,CALG;EAMbmE,aAAa,EAAE,qCAAqCnE,KAArC,CAA2C,GAA3C,CANF;EAObiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CAPA;EAQbqc,kBAAkB,EAAE,IARP;EASb5a,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE;EANM,CATH;EAiBbW,QAAQ,EAAE;IACNyF,OAAO,EAAE,oBADH;IAENC,OAAO,EAAE,eAFH;IAGNC,QAAQ,EAAE,aAHJ;IAINC,OAAO,EAAE,aAJH;IAKNC,QAAQ,EAAE,qBALJ;IAMNC,QAAQ,EAAE;EANJ,CAjBG;EAyBbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,SADE;IAEVC,IAAI,EAAE,WAFI;IAGV5S,CAAC,EAAE,mBAHO;IAIV6S,EAAE,EAAE,aAJM;IAKVrT,CAAC,EAAE,YALO;IAMVsT,EAAE,EAAE,YANM;IAOVhT,CAAC,EAAE,WAPO;IAQViT,EAAE,EAAE,WARM;IASVtT,CAAC,EAAE,SATO;IAUVuT,EAAE,EAAE,UAVM;IAWVjT,CAAC,EAAE,SAXO;IAYVkT,EAAE,EAAE,SAZM;IAaV1T,CAAC,EAAE,OAbO;IAcV2T,EAAE,EAAE;EAdM,CAzBD;EAyCbE,sBAAsB,EAAE,cAzCX;;EA0CbhV,OAAO,CAACqoB,IAAD,EAAOJ,MAAP,EAAe;IAClB,MAAMxtB,GAAG,GAAG+I,MAAM,CAAC6kB,IAAD,CAAlB;;IACA,QAAQJ,MAAR;MACI;MACA;MACA;MACA,KAAK,GAAL;QACI,OAAOxtB,GAAG,IAAIA,GAAG,KAAK,CAAR,GAAY,IAAZ,GAAmB,EAAvB,CAAV;MACJ;;MACA;MACA,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,KAAL;MACA,KAAK,GAAL;QACI,OAAOA,GAAG,IAAIA,GAAG,KAAK,CAAR,GAAY,IAAZ,GAAmB,GAAvB,CAAV;MACJ;;MACA,KAAK,GAAL;MACA,KAAK,GAAL;QACI,OAAOA,GAAG,IAAIA,GAAG,KAAK,CAAR,GAAY,IAAZ,GAAmB,GAAvB,CAAV;IAhBR;EAkBH,CA9DY;;EA+DbyR,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AA/DO,CAAjB,C,CAqEA;AACA;AACA;;AACA,IAAIugB,cAAc,GAAG,8DAA8Dvf,KAA9D,CAAoE,GAApE,CAArB;AAAA,IAA+Fwf,aAAa,GAAG,kDAAkDxf,KAAlD,CAAwD,GAAxD,CAA/G;AACA,IAAIyf,aAAa,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,OAA9C,EAAuD,OAAvD,EAAgE,OAAhE,EAAyE,OAAzE,EAAkF,OAAlF,EAA2F,OAA3F,EAAoG,OAApG,CAApB;AACA,IAAIC,aAAa,GAAG,gLAApB;AACA,MAAMC,QAAQ,GAAG;EACbtQ,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,yFAAyFoE,KAAzF,CAA+F,GAA/F,CAFK;;EAGbrE,WAAW,CAACjN,IAAD,EAAO+E,MAAP,EAAeM,KAAf,EAAsB;IAC7B,IAAI,CAACrF,IAAL,EAAW;MACP,OAAO6wB,cAAP;IACH;;IACD,IAAI,QAAQ1c,IAAR,CAAapP,MAAb,CAAJ,EAA0B;MACtB,OAAO+rB,aAAa,CAAC1pB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAApB;IACH;;IACD,OAAOwrB,cAAc,CAACzpB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAArB;EACH,CAXY;;EAYb+H,WAAW,EAAE4jB,aAZA;EAab7jB,gBAAgB,EAAE6jB,aAbL;EAcb5C,iBAAiB,EAAE,4FAdN;EAebC,sBAAsB,EAAE,yFAfX;EAgBb/gB,WAAW,EAAEyjB,aAhBA;EAiBbzC,eAAe,EAAEyC,aAjBJ;EAkBbxC,gBAAgB,EAAEwC,aAlBL;EAmBb3b,QAAQ,EAAE,mDAAmD9D,KAAnD,CAAyD,GAAzD,CAnBG;EAoBbmE,aAAa,EAAE,qCAAqCnE,KAArC,CAA2C,GAA3C,CApBF;EAqBbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CArBA;EAsBbqc,kBAAkB,EAAE,IAtBP;EAuBb5a,cAAc,EAAE;IACZlB,EAAE,EAAE,MADQ;IAEZD,GAAG,EAAE,SAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,uBAJQ;IAKZC,GAAG,EAAE,4BALO;IAMZC,IAAI,EAAE;EANM,CAvBH;EA+BbW,QAAQ,EAAE;IACNyF,OAAO,CAACrY,IAAD,EAAO;MACV,OAAO,aAAcwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA5C,IAAkD,MAAzD;IACH,CAHK;;IAINsY,OAAO,CAACtY,IAAD,EAAO;MACV,OAAO,cAAewG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA7C,IAAmD,MAA1D;IACH,CANK;;IAONuY,QAAQ,CAACvY,IAAD,EAAO;MACX,OAAO,aAAcwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA5C,IAAkD,MAAzD;IACH,CATK;;IAUNwY,OAAO,CAACxY,IAAD,EAAO;MACV,OAAO,aAAcwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAA5C,IAAkD,MAAzD;IACH,CAZK;;IAaNyY,QAAQ,CAACzY,IAAD,EAAO;MACX,OAAO,wBAAyBwG,QAAQ,CAACxG,IAAD,CAAR,KAAmB,CAApB,GAAyB,GAAzB,GAA+B,EAAvD,IAA6D,MAApE;IACH,CAfK;;IAgBN0Y,QAAQ,EAAE;EAhBJ,CA/BG;EAiDbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,QAFI;IAGV5S,CAAC,EAAE,cAHO;IAIV6S,EAAE,EAAE,aAJM;IAKVrT,CAAC,EAAE,WALO;IAMVsT,EAAE,EAAE,YANM;IAOVhT,CAAC,EAAE,WAPO;IAQViT,EAAE,EAAE,UARM;IASVtT,CAAC,EAAE,QATO;IAUVuT,EAAE,EAAE,SAVM;IAWVjT,CAAC,EAAE,QAXO;IAYVkT,EAAE,EAAE,UAZM;IAaV1T,CAAC,EAAE,QAbO;IAcV2T,EAAE,EAAE;EAdM,CAjDD;EAiEbE,sBAAsB,EAAE,UAjEX;EAkEbhV,OAAO,EAAE,KAlEI;EAmEbkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAnEO,CAAjB,C,CAyEA;AACA;AACA;AACA;AACA;;AACA,MAAM4gB,QAAQ,GAAG;EACbvQ,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,0EAA0EoE,KAA1E,CAAgF,GAAhF,CAFK;EAGbrE,WAAW,EAAE,4DAA4DqE,KAA5D,CAAkE,GAAlE,CAHA;EAIb8D,QAAQ,EAAE,uCAAuC9D,KAAvC,CAA6C,GAA7C,CAJG;EAKbmE,aAAa,EAAE,uBAAuBnE,KAAvB,CAA6B,GAA7B,CALF;EAMbiE,WAAW,EAAE,gBAAgBjE,KAAhB,CAAsB,GAAtB,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,gBAJQ;IAKZC,GAAG,EAAE,sBALO;IAMZC,IAAI,EAAE,4BANM;IAOZ+T,CAAC,EAAE,UAPS;IAQZyK,EAAE,EAAE,YARQ;IASZC,GAAG,EAAE,kBATO;IAUZC,IAAI,EAAE;EAVM,CAPH;EAmBb/d,QAAQ,EAAE;IACNyF,OAAO,EAAE,aADH;IAENC,OAAO,EAAE,YAFH;IAGNC,QAAQ,EAAE,gBAHJ;IAINC,OAAO,EAAE,cAJH;IAKNC,QAAQ,EAAE,8BALJ;IAMNC,QAAQ,EAAE;EANJ,CAnBG;EA2BbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,SADE;IAEVC,IAAI,EAAE,SAFI;IAGV5S,CAAC,EAAE,YAHO;IAIV6S,EAAE,EAAE,UAJM;IAKVrT,CAAC,EAAE,KALO;IAMVsT,EAAE,EAAE,SANM;IAOVhT,CAAC,EAAE,KAPO;;IAQViT,EAAE,CAACla,GAAD,EAAM;MACJ,IAAIA,GAAG,KAAK,CAAZ,EAAe;QACX,OAAO,QAAP;MACH;;MACD,OAAOA,GAAG,GAAG,OAAb;IACH,CAbS;;IAcV4G,CAAC,EAAE,KAdO;;IAeVuT,EAAE,CAACna,GAAD,EAAM;MACJ,IAAIA,GAAG,KAAK,CAAZ,EAAe;QACX,OAAO,QAAP;MACH;;MACD,OAAOA,GAAG,GAAG,OAAb;IACH,CApBS;;IAqBVkH,CAAC,EAAE,MArBO;;IAsBVkT,EAAE,CAACpa,GAAD,EAAM;MACJ,IAAIA,GAAG,KAAK,CAAZ,EAAe;QACX,OAAO,SAAP;MACH;;MACD,OAAOA,GAAG,GAAG,SAAb;IACH,CA3BS;;IA4BV0G,CAAC,EAAE,KA5BO;;IA6BV2T,EAAE,CAACra,GAAD,EAAM;MACJ,IAAIA,GAAG,KAAK,CAAZ,EAAe;QACX,OAAO,QAAP;MACH,CAFD,MAGK,IAAIA,GAAG,GAAG,EAAN,KAAa,CAAb,IAAkBA,GAAG,KAAK,EAA9B,EAAkC;QACnC,OAAOA,GAAG,GAAG,MAAb;MACH;;MACD,OAAOA,GAAG,GAAG,OAAb;IACH;;EArCS,CA3BD;EAkEbwa,aAAa,EAAE,+DAlEF;;EAmEb3C,IAAI,CAACtW,KAAD,EAAQ;IACR,OAAO,8BAA8B2T,IAA9B,CAAmC3T,KAAnC,CAAP;EACH,CArEY;;EAsEbyL,QAAQ,CAACtK,IAAD,EAAOC,MAAP,EAAesV,OAAf,EAAwB;IAC5B,IAAIvV,IAAI,GAAG,CAAX,EAAc;MACV,OAAO,YAAP;IACH,CAFD,MAGK,IAAIA,IAAI,GAAG,EAAX,EAAe;MAChB,OAAO,OAAP;IACH,CAFI,MAGA,IAAIA,IAAI,GAAG,EAAX,EAAe;MAChB,OAAOuV,OAAO,GAAG,QAAH,GAAc,cAA5B;IACH,CAFI,MAGA,IAAIvV,IAAI,GAAG,EAAX,EAAe;MAChB,OAAOuV,OAAO,GAAG,OAAH,GAAa,cAA3B;IACH,CAFI,MAGA;MACD,OAAO,MAAP;IACH;EACJ;;AAtFY,CAAjB,C,CAyFA;AACA;AACA;;AACA,IAAIia,SAAS,GAAG;EACZ,GAAG,GADS;EAEZ,GAAG,GAFS;EAGZ,GAAG,GAHS;EAIZ,GAAG,GAJS;EAKZ,GAAG,GALS;EAMZ,GAAG,GANS;EAOZ,GAAG,GAPS;EAQZ,GAAG,GARS;EASZ,GAAG,GATS;EAUZ,GAAG;AAVS,CAAhB;AAAA,IAWGC,SAAS,GAAG;EACX,KAAK,GADM;EAEX,KAAK,GAFM;EAGX,KAAK,GAHM;EAIX,KAAK,GAJM;EAKX,KAAK,GALM;EAMX,KAAK,GANM;EAOX,KAAK,GAPM;EAQX,KAAK,GARM;EASX,KAAK,GATM;EAUX,KAAK;AAVM,CAXf;AAuBA,MAAMC,QAAQ,GAAG;EACb1Q,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,8EAA8EoE,KAA9E,CAAoF,GAApF,CAFK;EAGbrE,WAAW,EAAE,6DAA6DqE,KAA7D,CAAmE,GAAnE,CAHA;EAIb0d,gBAAgB,EAAE,IAJL;EAKb5Z,QAAQ,EAAE,uDAAuD9D,KAAvD,CAA6D,GAA7D,CALG;EAMbmE,aAAa,EAAE,kCAAkCnE,KAAlC,CAAwC,GAAxC,CANF;EAObiE,WAAW,EAAE,qBAAqBjE,KAArB,CAA2B,GAA3B,CAPA;EAQbyB,cAAc,EAAE;IACZlB,EAAE,EAAE,YADQ;IAEZD,GAAG,EAAE,eAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,yBALO;IAMZC,IAAI,EAAE;EANM,CARH;EAgBbW,QAAQ,EAAE;IACNyF,OAAO,EAAE,SADH;IAENC,OAAO,EAAE,SAFH;IAGNC,QAAQ,EAAE,UAHJ;IAINC,OAAO,EAAE,SAJH;IAKNC,QAAQ,EAAE,kBALJ;IAMNC,QAAQ,EAAE;EANJ,CAhBG;EAwBbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,QADE;IAEVC,IAAI,EAAE,SAFI;IAGV5S,CAAC,EAAE,aAHO;IAIV6S,EAAE,EAAE,UAJM;IAKVrT,CAAC,EAAE,SALO;IAMVsT,EAAE,EAAE,SANM;IAOVhT,CAAC,EAAE,SAPO;IAQViT,EAAE,EAAE,SARM;IASVtT,CAAC,EAAE,QATO;IAUVuT,EAAE,EAAE,QAVM;IAWVjT,CAAC,EAAE,UAXO;IAYVkT,EAAE,EAAE,UAZM;IAaV1T,CAAC,EAAE,SAbO;IAcV2T,EAAE,EAAE;EAdM,CAxBD;;EAwCb9F,QAAQ,CAAClU,GAAD,EAAM;IACV,OAAOA,GAAG,CAACmG,OAAJ,CAAY,eAAZ,EAA6B,UAAUR,KAAV,EAAiB;MACjD,OAAOmsB,SAAS,CAACnsB,KAAD,CAAhB;IACH,CAFM,CAAP;EAGH,CA5CY;;EA6CbwO,UAAU,CAACnU,GAAD,EAAM;IACZ,OAAOA,GAAG,CAACmG,OAAJ,CAAY,KAAZ,EAAmB,UAAUR,KAAV,EAAiB;MACvC,OAAOksB,SAAS,CAAClsB,KAAD,CAAhB;IACH,CAFM,CAAP;EAGH,CAjDY;;EAkDb;EACA;EACAwU,aAAa,EAAE,oBApDF;;EAqDbkQ,YAAY,CAAChoB,IAAD,EAAOsK,QAAP,EAAiB;IACzB,IAAItK,IAAI,KAAK,EAAb,EAAiB;MACbA,IAAI,GAAG,CAAP;IACH;;IACD,IAAIsK,QAAQ,KAAK,KAAjB,EAAwB;MACpB,OAAOtK,IAAI,GAAG,CAAP,GAAWA,IAAX,GAAkBA,IAAI,GAAG,EAAhC;IACH,CAFD,MAGK,IAAIsK,QAAQ,KAAK,MAAjB,EAAyB;MAC1B,OAAOtK,IAAP;IACH,CAFI,MAGA,IAAIsK,QAAQ,KAAK,OAAjB,EAA0B;MAC3B,OAAOtK,IAAI,IAAI,EAAR,GAAaA,IAAb,GAAoBA,IAAI,GAAG,EAAlC;IACH,CAFI,MAGA,IAAIsK,QAAQ,KAAK,KAAjB,EAAwB;MACzB,OAAOtK,IAAI,GAAG,EAAd;IACH;EACJ,CArEY;;EAsEbsK,QAAQ,CAACtK,IAAD,EAAOC,MAAP,EAAesV,OAAf,EAAwB;IAC5B,IAAIvV,IAAI,GAAG,CAAX,EAAc;MACV,OAAO,KAAP;IACH,CAFD,MAGK,IAAIA,IAAI,GAAG,EAAX,EAAe;MAChB,OAAO,MAAP;IACH,CAFI,MAGA,IAAIA,IAAI,GAAG,EAAX,EAAe;MAChB,OAAO,OAAP;IACH,CAFI,MAGA,IAAIA,IAAI,GAAG,EAAX,EAAe;MAChB,OAAO,KAAP;IACH,CAFI,MAGA;MACD,OAAO,KAAP;IACH;EACJ,CAtFY;;EAuFb+O,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAvFO,CAAjB,C,CA6FA;AACA;AACA;;AACA,IAAIghB,WAAW,GAAG,gEAAgEhgB,KAAhE,CAAsE,GAAtE,CAAlB;;AACA,SAASigB,WAAT,CAAqBtyB,GAArB,EAA0B0U,aAA1B,EAAyCjB,GAAzC,EAA8CkB,QAA9C,EAAwD;EACpD,QAAQlB,GAAR;IACI,KAAK,GAAL;MACI,OAAQkB,QAAQ,IAAID,aAAb,GAA8B,kBAA9B,GAAmD,mBAA1D;;IACJ,KAAK,IAAL;MACI,OAAO1U,GAAG,IAAK2U,QAAQ,IAAID,aAAb,GAA8B,YAA9B,GAA6C,aAAjD,CAAV;;IACJ,KAAK,GAAL;MACI,OAAO,SAASC,QAAQ,IAAID,aAAZ,GAA4B,OAA5B,GAAsC,QAA/C,CAAP;;IACJ,KAAK,IAAL;MACI,OAAO1U,GAAG,IAAI2U,QAAQ,IAAID,aAAZ,GAA4B,OAA5B,GAAsC,QAA1C,CAAV;;IACJ,KAAK,GAAL;MACI,OAAO,SAASC,QAAQ,IAAID,aAAZ,GAA4B,MAA5B,GAAqC,QAA9C,CAAP;;IACJ,KAAK,IAAL;MACI,OAAO1U,GAAG,IAAI2U,QAAQ,IAAID,aAAZ,GAA4B,MAA5B,GAAqC,QAAzC,CAAV;;IACJ,KAAK,GAAL;MACI,OAAO,SAASC,QAAQ,IAAID,aAAZ,GAA4B,MAA5B,GAAqC,QAA9C,CAAP;;IACJ,KAAK,IAAL;MACI,OAAO1U,GAAG,IAAI2U,QAAQ,IAAID,aAAZ,GAA4B,MAA5B,GAAqC,QAAzC,CAAV;;IACJ,KAAK,GAAL;MACI,OAAO,SAASC,QAAQ,IAAID,aAAZ,GAA4B,QAA5B,GAAuC,UAAhD,CAAP;;IACJ,KAAK,IAAL;MACI,OAAO1U,GAAG,IAAI2U,QAAQ,IAAID,aAAZ,GAA4B,QAA5B,GAAuC,UAA3C,CAAV;;IACJ,KAAK,GAAL;MACI,OAAO,SAASC,QAAQ,IAAID,aAAZ,GAA4B,KAA5B,GAAoC,MAA7C,CAAP;;IACJ,KAAK,IAAL;MACI,OAAO1U,GAAG,IAAI2U,QAAQ,IAAID,aAAZ,GAA4B,KAA5B,GAAoC,MAAxC,CAAV;EAxBR;;EA0BA,OAAO,EAAP;AACH;;AACD,SAASjD,IAAT,CAAc1Q,IAAd,EAAoB4T,QAApB,EAA8B;EAC1B,OAAO,CAACA,QAAQ,GAAG,EAAH,GAAQ,SAAjB,IAA8B,GAA9B,GAAoC0d,WAAW,CAACrE,YAAY,CAACjtB,IAAD,CAAb,CAA/C,GAAsE,YAA7E;AACH;;AACD,MAAMwxB,QAAQ,GAAG;EACb7Q,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,oGAAoGoE,KAApG,CAA0G,GAA1G,CAFK;EAGbrE,WAAW,EAAE,qDAAqDqE,KAArD,CAA2D,GAA3D,CAHA;EAIb8D,QAAQ,EAAE,sDAAsD9D,KAAtD,CAA4D,GAA5D,CAJG;EAKbmE,aAAa,EAAE,gCAAgCnE,KAAhC,CAAsC,GAAtC,CALF;EAMbiE,WAAW,EAAE,qBAAqBjE,KAArB,CAA2B,GAA3B,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,MADQ;IAEZD,GAAG,EAAE,SAFO;IAGZE,CAAC,EAAE,aAHS;IAIZC,EAAE,EAAE,eAJQ;IAKZC,GAAG,EAAE,oBALO;IAMZC,IAAI,EAAE;EANM,CAPH;EAebwH,aAAa,EAAE,QAfF;;EAgBb3C,IAAI,CAACtW,KAAD,EAAQ;IACR,OAAOA,KAAK,CAACuW,MAAN,CAAa,CAAb,EAAgB5U,WAAhB,OAAkC,GAAzC;EACH,CAlBY;;EAmBb8J,QAAQ,CAAC+K,KAAD,EAAQC,OAAR,EAAiBC,OAAjB,EAA0B;IAC9B,IAAIF,KAAK,GAAG,EAAZ,EAAgB;MACZ,OAAOE,OAAO,KAAK,IAAZ,GAAmB,IAAnB,GAA0B,IAAjC;IACH,CAFD,MAGK;MACD,OAAOA,OAAO,KAAK,IAAZ,GAAmB,IAAnB,GAA0B,IAAjC;IACH;EACJ,CA1BY;;EA2BbtE,QAAQ,EAAE;IACNyF,OAAO,EAAE,eADH;IAENC,OAAO,EAAE,mBAFH;;IAGNC,QAAQ,CAACvY,IAAD,EAAO;MACX,OAAO0Q,IAAI,CAAC1Q,IAAD,EAAO,IAAP,CAAX;IACH,CALK;;IAMNwY,OAAO,EAAE,mBANH;;IAONC,QAAQ,CAACzY,IAAD,EAAO;MACX,OAAO0Q,IAAI,CAAC1Q,IAAD,EAAO,KAAP,CAAX;IACH,CATK;;IAUN0Y,QAAQ,EAAE;EAVJ,CA3BG;EAuCbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,UADE;IAEVC,IAAI,EAAE,IAFI;IAGV5S,CAAC,EAAEmrB,WAHO;IAIVtY,EAAE,EAAEsY,WAJM;IAKV3rB,CAAC,EAAE2rB,WALO;IAMVrY,EAAE,EAAEqY,WANM;IAOVrrB,CAAC,EAAEqrB,WAPO;IAQVpY,EAAE,EAAEoY,WARM;IASV1rB,CAAC,EAAE0rB,WATO;IAUVnY,EAAE,EAAEmY,WAVM;IAWVprB,CAAC,EAAEorB,WAXO;IAYVlY,EAAE,EAAEkY,WAZM;IAaV5rB,CAAC,EAAE4rB,WAbO;IAcVjY,EAAE,EAAEiY;EAdM,CAvCD;EAuDb/X,sBAAsB,EAAE,WAvDX;EAwDbhV,OAAO,EAAE,KAxDI;EAyDbkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAzDO,CAAjB,C,CA+DA;AACA;AACA;;AACA,MAAMmhB,QAAQ,GAAG;EACb9Q,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,gGAAgGoE,KAAhG,CAAsG,GAAtG,CAFK;EAGbrE,WAAW,EAAE,mDAAmDqE,KAAnD,CAAyD,GAAzD,CAHA;EAIb8D,QAAQ,EAAE,4DAA4D9D,KAA5D,CAAkE,GAAlE,CAJG;EAKbmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CALF;EAMbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE;EANM,CAPH;EAebW,QAAQ,EAAE;IACNyF,OAAO,EAAE,cADH;IAENC,OAAO,EAAE,cAFH;IAGNC,QAAQ,EAAE,aAHJ;IAINC,OAAO,EAAE,cAJH;IAKNC,QAAQ,EAAE,sBALJ;IAMNC,QAAQ,EAAE;EANJ,CAfG;EAuBbrF,WAAW,EAAE,kBAvBA;EAwBbK,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,UAFI;IAGV5S,CAAC,EAAE,kBAHO;IAIV6S,EAAE,EAAE,YAJM;IAKVrT,CAAC,EAAE,QALO;IAMVsT,EAAE,EAAE,WANM;IAOVhT,CAAC,EAAE,KAPO;IAQViT,EAAE,EAAE,SARM;IASVtT,CAAC,EAAE,KATO;IAUVuT,EAAE,EAAE,SAVM;IAWVjT,CAAC,EAAE,QAXO;IAYVkT,EAAE,EAAE,YAZM;IAaV1T,CAAC,EAAE,QAbO;IAcV2T,EAAE,EAAE;EAdM,CAxBD;EAwCbE,sBAAsB,EAAE,sBAxCX;;EAyCbhV,OAAO,CAACqoB,IAAD,EAAO;IACV,MAAM5tB,GAAG,GAAG+I,MAAM,CAAC6kB,IAAD,CAAlB;IACA,MAAMjsB,CAAC,GAAG3B,GAAG,GAAG,EAAhB;IAAA,MAAoBsG,MAAM,GAAI,CAAC,EAAEtG,GAAG,GAAG,GAAN,GAAY,EAAd,CAAD,KAAuB,CAAxB,GAA6B,GAA7B,GACxB2B,CAAC,KAAK,CAAP,GAAY,GAAZ,GACKA,CAAC,KAAK,CAAP,GAAY,GAAZ,GACKA,CAAC,KAAK,CAAP,GAAY,GAAZ,GAAkB,GAH9B;IAIA,OAAO3B,GAAG,GAAGsG,MAAb;EACH,CAhDY;;EAiDbmL,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAjDO,CAAjB,C,CAuDA;AACA;AACA;AACA;;AACA,MAAMohB,QAAQ,GAAG;EACb/Q,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,yFAAyFoE,KAAzF,CAA+F,GAA/F,CAFK;EAGbrE,WAAW,EAAE,kDAAkDqE,KAAlD,CAAwD,GAAxD,CAHA;EAIb8D,QAAQ,EAAE,6CAA6C9D,KAA7C,CAAmD,GAAnD,CAJG;EAKbmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CALF;EAMbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,2BALO;IAMZC,IAAI,EAAE;EANM,CAPH;EAebwH,aAAa,EAAE,uBAfF;;EAgBbkQ,YAAY,CAAChoB,IAAD,EAAOsK,QAAP,EAAiB;IACzB,IAAItK,IAAI,KAAK,EAAb,EAAiB;MACbA,IAAI,GAAG,CAAP;IACH;;IACD,IAAIsK,QAAQ,KAAK,MAAjB,EAAyB;MACrB,OAAOtK,IAAP;IACH,CAFD,MAGK,IAAIsK,QAAQ,KAAK,OAAjB,EAA0B;MAC3B,OAAOtK,IAAI,IAAI,EAAR,GAAaA,IAAb,GAAoBA,IAAI,GAAG,EAAlC;IACH,CAFI,MAGA,IAAIsK,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,OAAxC,EAAiD;MAClD,OAAOtK,IAAI,GAAG,EAAd;IACH;EACJ,CA7BY;;EA8BbsK,QAAQ,CAAC+K,KAAD,EAAQC,OAAR,EAAiBC,OAAjB,EAA0B;IAC9B,IAAIF,KAAK,GAAG,EAAZ,EAAgB;MACZ,OAAO,MAAP;IACH,CAFD,MAGK,IAAIA,KAAK,GAAG,EAAZ,EAAgB;MACjB,OAAO,OAAP;IACH,CAFI,MAGA,IAAIA,KAAK,GAAG,EAAZ,EAAgB;MACjB,OAAO,MAAP;IACH,CAFI,MAGA;MACD,OAAO,OAAP;IACH;EACJ,CA3CY;;EA4CbpE,QAAQ,EAAE;IACNyF,OAAO,EAAE,qBADH;IAENC,OAAO,EAAE,kBAFH;IAGNC,QAAQ,EAAE,iBAHJ;IAINC,OAAO,EAAE,oBAJH;IAKNC,QAAQ,EAAE,sBALJ;IAMNC,QAAQ,EAAE;EANJ,CA5CG;EAoDbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,UADE;IAEVC,IAAI,EAAE,cAFI;IAGV5S,CAAC,EAAE,gBAHO;IAIV6S,EAAE,EAAE,UAJM;IAKVrT,CAAC,EAAE,SALO;IAMVsT,EAAE,EAAE,UANM;IAOVhT,CAAC,EAAE,OAPO;IAQViT,EAAE,EAAE,QARM;IASVtT,CAAC,EAAE,QATO;IAUVuT,EAAE,EAAE,SAVM;IAWVjT,CAAC,EAAE,SAXO;IAYVkT,EAAE,EAAE,UAZM;IAaV1T,CAAC,EAAE,SAbO;IAcV2T,EAAE,EAAE;EAdM,CApDD;EAoEb5I,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AApEO,CAAjB,C,CA0EA;AACA;AACA;AACA;;AACA,MAAMqhB,QAAQ,GAAG;EACbhR,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,gGAAgGoE,KAAhG,CAAsG,GAAtG,CAFK;EAGbrE,WAAW,EAAE,kDAAkDqE,KAAlD,CAAwD,GAAxD,CAHA;EAIb8D,QAAQ,EAAE,2DAA2D9D,KAA3D,CAAiE,GAAjE,CAJG;EAKbmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CALF;EAMbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE;EANM,CAPH;EAebW,QAAQ,EAAE;IACNyF,OAAO,EAAE,gBADH;IAENC,OAAO,EAAE,kBAFH;IAGNC,QAAQ,EAAE,gBAHJ;IAINC,OAAO,EAAE,gBAJH;;IAKNC,QAAQ,CAACzY,IAAD,EAAO;MACX,QAAQitB,YAAY,CAACjtB,IAAD,CAApB;QACI,KAAK,CAAL;UACI,OAAO,4BAAP;;QACJ;UACI,OAAO,4BAAP;MAJR;IAMH,CAZK;;IAaN0Y,QAAQ,EAAE;EAbJ,CAfG;EA8BbhF,YAAY,EAAE;IACVqF,MAAM,CAAC9Z,GAAD,EAAM;MACR,OAAO,CAAE,WAAD,CAAckV,IAAd,CAAmBlV,GAAG,CAACW,QAAJ,CAAa,EAAb,CAAnB,IAAuC,KAAvC,GAA+C,IAAhD,IAAwD,GAAxD,GAA8DX,GAArE;IACH,CAHS;;IAIV+Z,IAAI,EAAE,OAJI;IAKV5S,CAAC,EAAE,gBALO;IAMV6S,EAAE,EAAE,YANM;IAOVrT,CAAC,EAAE,WAPO;IAQVsT,EAAE,EAAE,WARM;IASVhT,CAAC,EAAE,SATO;IAUViT,EAAE,EAAE,QAVM;IAWVtT,CAAC,EAAE,WAXO;IAYVuT,EAAE,EAAE,WAZM;IAaVjT,CAAC,EAAE,SAbO;IAcVkT,EAAE,EAAE,SAdM;IAeV1T,CAAC,EAAE,SAfO;IAgBV2T,EAAE,EAAE;EAhBM,CA9BD;EAgDbE,sBAAsB,EAAE,UAhDX;EAiDbhV,OAAO,EAAE,KAjDI;EAkDbkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAlDO,CAAjB,C,CAwDA;AACA;AACA;;AACA,MAAMshB,QAAQ,GAAG;EACbjR,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,yCAAyCoE,KAAzC,CAA+C,GAA/C,CAFK;EAGbrE,WAAW,EAAE,yCAAyCqE,KAAzC,CAA+C,GAA/C,CAHA;EAIb8D,QAAQ,EAAE,8BAA8B9D,KAA9B,CAAoC,GAApC,CAJG;EAKbmE,aAAa,EAAE,gBAAgBnE,KAAhB,CAAsB,GAAtB,CALF;EAMbiE,WAAW,EAAE,gBAAgBjE,KAAhB,CAAsB,GAAtB,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,WAJQ;IAKZC,GAAG,EAAE,iBALO;IAMZC,IAAI,EAAE,sBANM;IAOZ+T,CAAC,EAAE,YAPS;IAQZyK,EAAE,EAAE,WARQ;IASZC,GAAG,EAAE,iBATO;IAUZC,IAAI,EAAE;EAVM,CAPH;EAmBblX,aAAa,EAAE,QAnBF;;EAoBb3C,IAAI,CAACtW,KAAD,EAAQ;IACR,OAAOA,KAAK,KAAK,IAAjB;EACH,CAtBY;;EAuBbyL,QAAQ,CAACtK,IAAD,EAAOC,MAAP,EAAesV,OAAf,EAAwB;IAC5B,IAAIvV,IAAI,GAAG,EAAX,EAAe;MACX,OAAO,IAAP;IACH,CAFD,MAGK;MACD,OAAO,IAAP;IACH;EACJ,CA9BY;;EA+BbiR,QAAQ,EAAE;IACNyF,OAAO,EAAE,SADH;IAENC,OAAO,EAAE,SAFH;IAGNC,QAAQ,EAAE,aAHJ;IAINC,OAAO,EAAE,SAJH;IAKNC,QAAQ,EAAE,aALJ;IAMNC,QAAQ,EAAE;EANJ,CA/BG;EAuCbc,sBAAsB,EAAE,UAvCX;;EAwCbhV,OAAO,CAACvF,GAAD,EAAMwtB,MAAN,EAAc;IACjB,QAAQA,MAAR;MACI,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,KAAL;QACI,OAAOxtB,GAAG,GAAG,GAAb;;MACJ;QACI,OAAOA,GAAG,CAACW,QAAJ,CAAa,EAAb,CAAP;IANR;EAQH,CAjDY;;EAkDb8T,YAAY,EAAE;IACVqF,MAAM,EAAE,KADE;IAEVC,IAAI,EAAE,KAFI;IAGV5S,CAAC,EAAE,IAHO;IAIV6S,EAAE,EAAE,KAJM;IAKVrT,CAAC,EAAE,IALO;IAMVsT,EAAE,EAAE,KANM;IAOVhT,CAAC,EAAE,KAPO;IAQViT,EAAE,EAAE,MARM;IASVtT,CAAC,EAAE,IATO;IAUVuT,EAAE,EAAE,KAVM;IAWVjT,CAAC,EAAE,KAXO;IAYVkT,EAAE,EAAE,MAZM;IAaV1T,CAAC,EAAE,IAbO;IAcV2T,EAAE,EAAE;EAdM;AAlDD,CAAjB,C,CAoEA;AACA;AACA;AACA;;AACA,MAAMuY,QAAQ,GAAG;EACblR,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE;IACJnI,MAAM,EAAE,sGAAsGuM,KAAtG,CAA4G,GAA5G,CADJ;IAEJ2C,UAAU,EAAE,qGAAqG3C,KAArG,CAA2G,GAA3G;EAFR,CAFK;EAMbrE,WAAW,EAAE,kDAAkDqE,KAAlD,CAAwD,GAAxD,CANA;EAOb8D,QAAQ,EAAE;IACNnB,UAAU,EAAE,gEAAgE3C,KAAhE,CAAsE,GAAtE,CADN;IAENvM,MAAM,EAAE,iEAAiEuM,KAAjE,CAAuE,GAAvE,CAFF;IAGN4C,QAAQ,EAAE;EAHJ,CAPG;EAYbuB,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CAZF;EAabiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CAbA;EAcbyB,cAAc,EAAE;IACZlB,EAAE,EAAE,QADQ;IAEZD,GAAG,EAAE,WAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,oBALO;IAMZC,IAAI,EAAE;EANM,CAdH;EAsBbW,QAAQ,EAAE;IACNyF,OAAO,EAAE,gBADH;IAENC,OAAO,EAAE,gBAFH;IAGNE,OAAO,EAAE,iBAHH;IAIND,QAAQ,EAAE,uBAJJ;IAKNE,QAAQ,EAAE,mBALJ;IAMNC,QAAQ,EAAE;EANJ,CAtBG;EA8BbhF,YAAY,EAAE;IACVqF,MAAM,CAAC3S,CAAD,EAAI;MACN,IAAI0rB,EAAE,GAAG1rB,CAAC,CAACxG,QAAF,EAAT;MACA,OAAQ,wBAAD,CAA2BuU,IAA3B,CAAgC2d,EAAhC,IACHA,EAAE,CAACrsB,OAAH,CAAW,IAAX,EAAiB,IAAjB,CADG,GAEHqsB,EAAE,GAAG,IAFT;IAGH,CANS;;IAOV9Y,IAAI,CAAC5S,CAAD,EAAI;MACJ,IAAI0rB,EAAE,GAAG1rB,CAAC,CAACxG,QAAF,EAAT;;MACA,IAAK,2BAAD,CAA8BuU,IAA9B,CAAmC2d,EAAnC,CAAJ,EAA4C;QACxC,OAAOA,EAAE,CAACrsB,OAAH,CAAW,QAAX,EAAqB,QAArB,CAAP;MACH;;MACD,IAAK,MAAD,CAAS0O,IAAT,CAAc2d,EAAd,CAAJ,EAAuB;QACnB,OAAOA,EAAE,CAACrsB,OAAH,CAAW,OAAX,EAAoB,UAApB,CAAP;MACH;IACJ,CAfS;;IAgBVW,CAAC,EAAE,gBAhBO;IAiBV6S,EAAE,EAAE,SAjBM;IAkBVrT,CAAC,EAAE,MAlBO;IAmBVsT,EAAE,EAAE,SAnBM;IAoBVhT,CAAC,EAAE,OApBO;IAqBViT,EAAE,EAAE,UArBM;IAsBVtT,CAAC,EAAE,KAtBO;IAuBVuT,EAAE,EAAE,QAvBM;IAwBVjT,CAAC,EAAE,KAxBO;IAyBVkT,EAAE,EAAE,QAzBM;IA0BV1T,CAAC,EAAE,MA1BO;IA2BV2T,EAAE,EAAE;EA3BM,CA9BD;EA2DbE,sBAAsB,EAAE,6BA3DX;;EA4DbhV,OAAO,CAACqoB,IAAD,EAAOkF,OAAP,EAAgB;IACnB,MAAM9yB,GAAG,GAAG+I,MAAM,CAAC6kB,IAAD,CAAlB;;IACA,IAAI5tB,GAAG,KAAK,CAAZ,EAAe;MACX,OAAOA,GAAG,CAACW,QAAJ,EAAP;IACH;;IACD,IAAIX,GAAG,KAAK,CAAZ,EAAe;MACX,OAAOA,GAAG,GAAG,KAAb;IACH;;IACD,IAAKA,GAAG,GAAG,EAAP,IAAeA,GAAG,IAAI,GAAP,IAAeA,GAAG,GAAG,EAAN,KAAa,CAA3C,IAAmDA,GAAG,GAAG,GAAN,KAAc,CAArE,EAAyE;MACrE,OAAO,QAAQA,GAAf;IACH;;IACD,OAAOA,GAAG,GAAG,IAAb;EACH,CAxEY;;EAyEbyR,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE;EAFH;AAzEO,CAAjB,C,CA+EA;AACA;AACA;;AACA,MAAM0hB,UAAU,GAAG;EACf,GAAG,KADY;EAEf,GAAG,KAFY;EAGf,GAAG,KAHY;EAIf,GAAG,KAJY;EAKf,GAAG,KALY;EAMf,GAAG,KANY;EAOf,GAAG,KAPY;EAQf,GAAG,KARY;EASf,GAAG,KATY;EAUf,GAAG,KAVY;EAWf,IAAI,KAXW;EAYf,IAAI,KAZW;EAaf,IAAI,KAbW;EAcf,IAAI,KAdW;EAef,IAAI,KAfW;EAgBf,IAAI,KAhBW;EAiBf,IAAI,KAjBW;EAkBf,IAAI,KAlBW;EAmBf,IAAI,KAnBW;EAoBf,KAAK;AApBU,CAAnB;AAsBA,MAAMC,QAAQ,GAAG;EACbtR,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,qFAAqFoE,KAArF,CAA2F,GAA3F,CAFK;EAGbrE,WAAW,EAAE,kDAAkDqE,KAAlD,CAAwD,GAAxD,CAHA;EAIb8D,QAAQ,EAAE,0DAA0D9D,KAA1D,CAAgE,GAAhE,CAJG;EAKbmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CALF;EAMbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE;EANM,CAPH;EAebW,QAAQ,EAAE;IACNyF,OAAO,EAAE,kBADH;IAENC,OAAO,EAAE,kBAFH;IAGNC,QAAQ,EAAE,iBAHJ;IAINC,OAAO,EAAE,iBAJH;IAKNC,QAAQ,EAAE,iCALJ;IAMNC,QAAQ,EAAE;EANJ,CAfG;EAuBbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,WADE;IAEVC,IAAI,EAAE,UAFI;IAGV5S,CAAC,EAAE,gBAHO;IAIV6S,EAAE,EAAE,WAJM;IAKVrT,CAAC,EAAE,WALO;IAMVsT,EAAE,EAAE,UANM;IAOVhT,CAAC,EAAE,WAPO;IAQViT,EAAE,EAAE,UARM;IASVtT,CAAC,EAAE,SATO;IAUVuT,EAAE,EAAE,QAVM;IAWVjT,CAAC,EAAE,QAXO;IAYVkT,EAAE,EAAE,OAZM;IAaV1T,CAAC,EAAE,SAbO;IAcV2T,EAAE,EAAE;EAdM,CAvBD;EAuCbE,sBAAsB,EAAE,iBAvCX;;EAwCbhV,OAAO,CAACqoB,IAAD,EAAO;IACV,MAAMlsB,CAAC,GAAGksB,IAAI,GAAG,EAAjB;IACA,MAAMjsB,CAAC,GAAGisB,IAAI,IAAI,GAAR,GAAc,GAAd,GAAoB,IAA9B;IACA,OAAOA,IAAI,IAAImF,UAAU,CAACnF,IAAD,CAAV,IAAoBmF,UAAU,CAACrxB,CAAD,CAA9B,IAAqCqxB,UAAU,CAACpxB,CAAD,CAAnD,CAAX;EACH,CA5CY;;EA6Cb8P,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AA7CO,CAAjB,C,CAmDA;AACA;AACA;AACA;;AACA,MAAM4hB,QAAQ,GAAG;EACbvR,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,yCAAyCoE,KAAzC,CAA+C,GAA/C,CAFK;EAGbrE,WAAW,EAAE,yCAAyCqE,KAAzC,CAA+C,GAA/C,CAHA;EAIb8D,QAAQ,EAAE,8BAA8B9D,KAA9B,CAAoC,GAApC,CAJG;EAKbmE,aAAa,EAAE,gBAAgBnE,KAAhB,CAAsB,GAAtB,CALF;EAMbiE,WAAW,EAAE,gBAAgBjE,KAAhB,CAAsB,GAAtB,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,QADQ;IAEZD,GAAG,EAAE,WAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,eAJQ;IAKZC,GAAG,EAAE,sBALO;IAMZC,IAAI,EAAE,2BANM;IAOZ+T,CAAC,EAAE,YAPS;IAQZyK,EAAE,EAAE,eARQ;IASZC,GAAG,EAAE,sBATO;IAUZC,IAAI,EAAE;EAVM,CAPH;EAmBb/d,QAAQ,EAAE;IACNyF,OAAO,EAAE,OADH;IAENC,OAAO,EAAE,OAFH;IAGNC,QAAQ,EAAE,SAHJ;IAINC,OAAO,EAAE,OAJH;IAKNC,QAAQ,EAAE,aALJ;IAMNC,QAAQ,EAAE;EANJ,CAnBG;EA2BbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,MADE;IAEVC,IAAI,EAAE,MAFI;IAGV5S,CAAC,EAAE,KAHO;IAIV6S,EAAE,EAAE,KAJM;IAKVrT,CAAC,EAAE,IALO;IAMVsT,EAAE,EAAE,KANM;IAOVhT,CAAC,EAAE,MAPO;IAQViT,EAAE,EAAE,MARM;IASVtT,CAAC,EAAE,IATO;IAUVuT,EAAE,EAAE,KAVM;IAWVjT,CAAC,EAAE,KAXO;IAYVkT,EAAE,EAAE,KAZM;IAaV1T,CAAC,EAAE,KAbO;IAcV2T,EAAE,EAAE;EAdM,CA3BD;EA2CbE,sBAAsB,EAAE,gBA3CX;EA4CbhV,OAAO,EAAE,UAAUvF,GAAV,EAAewtB,MAAf,EAAuB;IAC5B,QAAQA,MAAR;MACI,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,KAAL;QACI,OAAOxtB,GAAG,GAAG,GAAb;;MACJ,KAAK,GAAL;QACI,OAAOA,GAAG,GAAG,GAAb;;MACJ,KAAK,GAAL;MACA,KAAK,GAAL;QACI,OAAOA,GAAG,GAAG,GAAb;;MACJ;QACI,OAAOA,GAAG,CAACW,QAAJ,CAAa,EAAb,CAAP;IAXR;EAaH,CA1DY;EA2Db6Z,aAAa,EAAE,OA3DF;EA4Db3C,IAAI,EAAE,UAAUxS,KAAV,EAAiB;IACnB,OAAOA,KAAK,KAAK,IAAjB;EACH,CA9DY;EA+Db2H,QAAQ,EAAE,UAAUtK,IAAV,EAAgBC,MAAhB,EAAwBuwB,OAAxB,EAAiC;IACvC,OAAOxwB,IAAI,GAAG,EAAP,GAAY,IAAZ,GAAmB,IAA1B;EACH;AAjEY,CAAjB,C,CAoEA;AACA;AACA;;AACA,MAAMW,KAAK,GAAG;EACV2W,EAAE,EAAE,4BADM;EAEVrT,CAAC,EAAE,uBAFO;EAGVsT,EAAE,EAAE,yBAHM;EAIVhT,CAAC,EAAE,0BAJO;EAKViT,EAAE,EAAE,2BALM;EAMVtT,CAAC,EAAE,oBANO;EAOVuT,EAAE,EAAE,qBAPM;EAQVjT,CAAC,EAAE,sBARO;EASVkT,EAAE,EAAE,2BATM;EAUV1T,CAAC,EAAE,kBAVO;EAWV2T,EAAE,EAAE;AAXM,CAAd;;AAaA,SAAS8Y,gBAAT,CAA0BnzB,GAA1B,EAA+B0U,aAA/B,EAA8CjB,GAA9C,EAAmDkB,QAAnD,EAA6D;EACzD,IAAID,aAAJ,EAAmB;IACf,OAAO,iBAAP;EACH,CAFD,MAGK;IACD,OAAOC,QAAQ,GAAG,iBAAH,GAAuB,iBAAtC;EACH;AACJ;;AACD,SAASye,iBAAT,CAA2BpzB,GAA3B,EAAgC0U,aAAhC,EAA+CjB,GAA/C,EAAoDkB,QAApD,EAA8D;EAC1D,OAAOD,aAAa,GAAG2e,KAAK,CAAC5f,GAAD,CAAL,CAAW,CAAX,CAAH,GAAoBkB,QAAQ,GAAG0e,KAAK,CAAC5f,GAAD,CAAL,CAAW,CAAX,CAAH,GAAmB4f,KAAK,CAAC5f,GAAD,CAAL,CAAW,CAAX,CAAnE;AACH;;AACD,SAAS6f,OAAT,CAAiBtzB,GAAjB,EAAsB;EAClB,OAAOA,GAAG,GAAG,EAAN,KAAa,CAAb,IAAmBA,GAAG,GAAG,EAAN,IAAYA,GAAG,GAAG,EAA5C;AACH;;AACD,SAASqzB,KAAT,CAAe5f,GAAf,EAAoB;EAChB,OAAOpQ,KAAK,CAACoQ,GAAD,CAAL,CAAWpB,KAAX,CAAiB,GAAjB,CAAP;AACH;;AACD,SAASkhB,WAAT,CAAqBvzB,GAArB,EAA0B0U,aAA1B,EAAyCjB,GAAzC,EAA8CkB,QAA9C,EAAwD;EACpD,IAAI8S,MAAM,GAAGznB,GAAG,GAAG,GAAnB;;EACA,IAAIA,GAAG,KAAK,CAAZ,EAAe;IACX,OAAOynB,MAAM,GAAG2L,iBAAiB,CAACpzB,GAAD,EAAM0U,aAAN,EAAqBjB,GAAG,CAAC,CAAD,CAAxB,EAA6BkB,QAA7B,CAAjC;EACH,CAFD,MAGK,IAAID,aAAJ,EAAmB;IACpB,OAAO+S,MAAM,IAAI6L,OAAO,CAACtzB,GAAD,CAAP,GAAeqzB,KAAK,CAAC5f,GAAD,CAAL,CAAW,CAAX,CAAf,GAA+B4f,KAAK,CAAC5f,GAAD,CAAL,CAAW,CAAX,CAAnC,CAAb;EACH,CAFI,MAGA;IACD,IAAIkB,QAAJ,EAAc;MACV,OAAO8S,MAAM,GAAG4L,KAAK,CAAC5f,GAAD,CAAL,CAAW,CAAX,CAAhB;IACH,CAFD,MAGK;MACD,OAAOgU,MAAM,IAAI6L,OAAO,CAACtzB,GAAD,CAAP,GAAeqzB,KAAK,CAAC5f,GAAD,CAAL,CAAW,CAAX,CAAf,GAA+B4f,KAAK,CAAC5f,GAAD,CAAL,CAAW,CAAX,CAAnC,CAAb;IACH;EACJ;AACJ;;AACD,MAAM+f,QAAQ,GAAG;EACb9R,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE;IACJnI,MAAM,EAAE,oGAAoGuM,KAApG,CAA0G,GAA1G,CADJ;IAEJ2C,UAAU,EAAE,kGAAkG3C,KAAlG,CAAwG,GAAxG,CAFR;IAGJ4C,QAAQ,EAAE;EAHN,CAFK;EAObjH,WAAW,EAAE,kDAAkDqE,KAAlD,CAAwD,GAAxD,CAPA;EAQb8D,QAAQ,EAAE;IACNrQ,MAAM,EAAE,oFAAoFuM,KAApF,CAA0F,GAA1F,CADF;IAEN2C,UAAU,EAAE,2FAA2F3C,KAA3F,CAAiG,GAAjG,CAFN;IAGN4C,QAAQ,EAAE;EAHJ,CARG;EAabuB,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CAbF;EAcbiE,WAAW,EAAE,iBAAiBjE,KAAjB,CAAuB,GAAvB,CAdA;EAebqc,kBAAkB,EAAE,IAfP;EAgBb5a,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,uBAJQ;IAKZC,GAAG,EAAE,qCALO;IAMZC,IAAI,EAAE,2CANM;IAOZ+T,CAAC,EAAE,YAPS;IAQZyK,EAAE,EAAE,uBARQ;IASZC,GAAG,EAAE,qCATO;IAUZC,IAAI,EAAE;EAVM,CAhBH;EA4Bb/d,QAAQ,EAAE;IACNyF,OAAO,EAAE,eADH;IAENC,OAAO,EAAE,YAFH;IAGNC,QAAQ,EAAE,SAHJ;IAINC,OAAO,EAAE,YAJH;IAKNC,QAAQ,EAAE,oBALJ;IAMNC,QAAQ,EAAE;EANJ,CA5BG;EAoCbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,UAFI;IAGV5S,CAAC,EAAEgsB,gBAHO;IAIVnZ,EAAE,EAAEuZ,WAJM;IAKV5sB,CAAC,EAAEysB,iBALO;IAMVnZ,EAAE,EAAEsZ,WANM;IAOVtsB,CAAC,EAAEmsB,iBAPO;IAQVlZ,EAAE,EAAEqZ,WARM;IASV3sB,CAAC,EAAEwsB,iBATO;IAUVjZ,EAAE,EAAEoZ,WAVM;IAWVrsB,CAAC,EAAEksB,iBAXO;IAYVhZ,EAAE,EAAEmZ,WAZM;IAaV7sB,CAAC,EAAE0sB,iBAbO;IAcV/Y,EAAE,EAAEkZ;EAdM,CApCD;EAoDbhZ,sBAAsB,EAAE,aApDX;;EAqDbhV,OAAO,CAACvF,GAAD,EAAM;IACT,OAAOA,GAAG,GAAG,MAAb;EACH,CAvDY;;EAwDbyR,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAxDO,CAAjB,C,CA8DA;AACA;AACA;;AACA,MAAMoiB,QAAQ,GAAG;EACb/R,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,uGAAuGoE,KAAvG,CAA6G,GAA7G,CAFK;EAGbrE,WAAW,EAAE,kDAAkDqE,KAAlD,CAAwD,GAAxD,CAHA;EAIb8D,QAAQ,EAAE,0EAA0E9D,KAA1E,CAAgF,GAAhF,CAJG;EAKbmE,aAAa,EAAE,8CAA8CnE,KAA9C,CAAoD,GAApD,CALF;EAMbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE;EANM,CAPH;EAebW,QAAQ,EAAE;IACNyF,OAAO,EAAE,eADH;IAENC,OAAO,EAAE,kBAFH;IAGNC,QAAQ,EAAE,cAHJ;IAINC,OAAO,EAAE,mBAJH;IAKNC,QAAQ,EAAE,qBALJ;IAMNC,QAAQ,EAAE;EANJ,CAfG;EAuBbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,QADE;IAEVC,IAAI,EAAE,UAFI;IAGV5S,CAAC,EAAE,gBAHO;IAIV6S,EAAE,EAAE,aAJM;IAKVrT,CAAC,EAAE,SALO;IAMVsT,EAAE,EAAE,YANM;IAOVhT,CAAC,EAAE,SAPO;IAQViT,EAAE,EAAE,YARM;IASVtT,CAAC,EAAE,QATO;IAUVuT,EAAE,EAAE,WAVM;IAWVjT,CAAC,EAAE,QAXO;IAYVkT,EAAE,EAAE,aAZM;IAaV1T,CAAC,EAAE,MAbO;IAcV2T,EAAE,EAAE;EAdM,CAvBD;EAuCbE,sBAAsB,EAAE,WAvCX;;EAwCbhV,OAAO,CAACvF,GAAD,EAAM;IACT,OAAOA,GAAG,GAAG,GAAb;EACH,CA1CY;;EA2CbyR,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AA3CO,CAAjB,C,CAiDA;AACA;AACA;;AACA,SAASqiB,WAAT,CAAqB1zB,GAArB,EAA0B0U,aAA1B,EAAyCjB,GAAzC,EAA8CkB,QAA9C,EAAwD;EACpD,QAAQlB,GAAR;IACI,KAAK,GAAL;MACI,OAAOiB,aAAa,GAAG,eAAH,GAAqB,iBAAzC;;IACJ,KAAK,IAAL;MACI,OAAO1U,GAAG,IAAI0U,aAAa,GAAG,SAAH,GAAe,WAAhC,CAAV;;IACJ,KAAK,GAAL;IACA,KAAK,IAAL;MACI,OAAO1U,GAAG,IAAI0U,aAAa,GAAG,QAAH,GAAc,UAA/B,CAAV;;IACJ,KAAK,GAAL;IACA,KAAK,IAAL;MACI,OAAO1U,GAAG,IAAI0U,aAAa,GAAG,MAAH,GAAY,SAA7B,CAAV;;IACJ,KAAK,GAAL;IACA,KAAK,IAAL;MACI,OAAO1U,GAAG,IAAI0U,aAAa,GAAG,OAAH,GAAa,SAA9B,CAAV;;IACJ,KAAK,GAAL;IACA,KAAK,IAAL;MACI,OAAO1U,GAAG,IAAI0U,aAAa,GAAG,MAAH,GAAY,QAA7B,CAAV;;IACJ,KAAK,GAAL;IACA,KAAK,IAAL;MACI,OAAO1U,GAAG,IAAI0U,aAAa,GAAG,MAAH,GAAY,SAA7B,CAAV;;IACJ;MACI,OAAO1U,GAAG,CAACW,QAAJ,CAAa,EAAb,CAAP;EArBR;AAuBH;;AACD,MAAMgzB,QAAQ,GAAG;EACbjS,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,+LAA+LoE,KAA/L,CAAqM,GAArM,CAFK;EAGbrE,WAAW,EAAE,6EAA6EqE,KAA7E,CAAmF,GAAnF,CAHA;EAIb0d,gBAAgB,EAAE,IAJL;EAKb5Z,QAAQ,EAAE,6CAA6C9D,KAA7C,CAAmD,GAAnD,CALG;EAMbmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CANF;EAObiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CAPA;EAQbqc,kBAAkB,EAAE,IARP;EASb5a,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,mBAJQ;IAKZC,GAAG,EAAE,yBALO;IAMZC,IAAI,EAAE;EANM,CATH;EAiBbwH,aAAa,EAAE,QAjBF;EAkBb3C,IAAI,EAAE,UAAUtW,KAAV,EAAiB;IACnB,OAAOA,KAAK,KAAK,IAAjB;EACH,CApBY;EAqBbyL,QAAQ,EAAE,UAAUtK,IAAV,EAAgBC,MAAhB,EAAwBsV,OAAxB,EAAiC;IACvC,IAAIvV,IAAI,GAAG,EAAX,EAAe;MACX,OAAO,IAAP;IACH,CAFD,MAGK;MACD,OAAO,IAAP;IACH;EACJ,CA5BY;EA6BbiR,QAAQ,EAAE;IACNyF,OAAO,EAAE,cADH;IAENC,OAAO,EAAE,cAFH;IAGNC,QAAQ,EAAE,gBAHJ;IAINC,OAAO,EAAE,cAJH;IAKNC,QAAQ,EAAE,oBALJ;IAMNC,QAAQ,EAAE;EANJ,CA7BG;EAqCbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,UADE;IAEVC,IAAI,EAAE,SAFI;IAGV5S,CAAC,EAAEusB,WAHO;IAIV1Z,EAAE,EAAE0Z,WAJM;IAKV/sB,CAAC,EAAE+sB,WALO;IAMVzZ,EAAE,EAAEyZ,WANM;IAOVzsB,CAAC,EAAEysB,WAPO;IAQVxZ,EAAE,EAAEwZ,WARM;IASV9sB,CAAC,EAAE8sB,WATO;IAUVvZ,EAAE,EAAEuZ,WAVM;IAWVxsB,CAAC,EAAEwsB,WAXO;IAYVtZ,EAAE,EAAEsZ,WAZM;IAaVhtB,CAAC,EAAEgtB,WAbO;IAcVrZ,EAAE,EAAEqZ;EAdM,CArCD;EAqDbnZ,sBAAsB,EAAE,cArDX;EAsDbhV,OAAO,EAAE,UAAUvF,GAAV,EAAewtB,MAAf,EAAuB;IAC5B,QAAQA,MAAR;MACI,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,KAAL;QACI,OAAOxtB,GAAG,GAAG,OAAb;;MACJ;QACI,OAAOA,GAAG,CAACW,QAAJ,CAAa,EAAb,CAAP;IANR;EAQH;AA/DY,CAAjB,C,CAkEA;AACA;AACA;AACA;;AACA,MAAMizB,QAAQ,GAAG;EACblS,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,qFAAqFoE,KAArF,CAA2F,GAA3F,CAFK;EAGbrE,WAAW,EAAE,8DAA8DqE,KAA9D,CAAoE,GAApE,CAHA;EAIb0d,gBAAgB,EAAE,IAJL;EAKb5Z,QAAQ,EAAE,qDAAqD9D,KAArD,CAA2D,GAA3D,CALG;EAMbmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CANF;EAObiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CAPA;EAQbqc,kBAAkB,EAAE,IARP;EASb5a,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,cAJQ;IAKZC,GAAG,EAAE,0BALO;IAMZC,IAAI,EAAE;EANM,CATH;EAiBbW,QAAQ,EAAE;IACNyF,OAAO,EAAE,gBADH;IAENC,OAAO,EAAE,mBAFH;IAGNC,QAAQ,EAAE,eAHJ;IAINC,OAAO,EAAE,gBAJH;IAKNC,QAAQ,EAAE,yBALJ;IAMNC,QAAQ,EAAE;EANJ,CAjBG;EAyBbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,UAFI;IAGV5S,CAAC,EAAE,eAHO;IAIV6S,EAAE,EAAE,aAJM;IAKVrT,CAAC,EAAE,YALO;IAMVsT,EAAE,EAAE,aANM;IAOVhT,CAAC,EAAE,SAPO;IAQViT,EAAE,EAAE,UARM;IASVtT,CAAC,EAAE,QATO;IAUVuT,EAAE,EAAE,UAVM;IAWVjT,CAAC,EAAE,UAXO;IAYVkT,EAAE,EAAE,YAZM;IAaV1T,CAAC,EAAE,QAbO;IAcV2T,EAAE,EAAE;EAdM,CAzBD;EAyCbE,sBAAsB,EAAE,WAzCX;EA0CbhV,OAAO,EAAE,KA1CI;EA2CbkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AA3CO,CAAjB,C,CAiDA;AACA;AACA;AACA;;AACA,IAAIwiB,qBAAqB,GAAG,6DAA6DxhB,KAA7D,CAAmE,GAAnE,CAA5B;AACA,IAAIyhB,wBAAwB,GAAG,kDAAkDzhB,KAAlD,CAAwD,GAAxD,CAA/B;AACA,IAAI0hB,aAAa,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,gBAAnB,EAAqC,OAArC,EAA8C,QAA9C,EAAwD,aAAxD,EAAuE,aAAvE,EAAsF,OAAtF,EAA+F,OAA/F,EAAwG,OAAxG,EAAiH,OAAjH,EAA0H,OAA1H,CAApB;AACA,IAAIC,aAAa,GAAG,0KAApB;AACA,MAAMC,UAAU,GAAG;EACfvS,IAAI,EAAE,OADS;EAEfzT,MAAM,EAAE,0FAA0FoE,KAA1F,CAAgG,GAAhG,CAFO;;EAGfrE,WAAW,CAACjN,IAAD,EAAO+E,MAAP,EAAeM,KAAf,EAAsB;IAC7B,IAAI,CAACrF,IAAL,EAAW;MACP,OAAO8yB,qBAAP;IACH,CAFD,MAGK,IAAI,QAAQ3e,IAAR,CAAapP,MAAb,CAAJ,EAA0B;MAC3B,OAAOguB,wBAAwB,CAAC3rB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAA/B;IACH,CAFI,MAGA;MACD,OAAOytB,qBAAqB,CAAC1rB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAA5B;IACH;EACJ,CAbc;;EAcf+H,WAAW,EAAE6lB,aAdE;EAef9lB,gBAAgB,EAAE8lB,aAfH;EAgBf7E,iBAAiB,EAAE,2FAhBJ;EAiBfC,sBAAsB,EAAE,kFAjBT;EAkBf/gB,WAAW,EAAE0lB,aAlBE;EAmBf1E,eAAe,EAAE0E,aAnBF;EAoBfzE,gBAAgB,EAAEyE,aApBH;EAqBf5d,QAAQ,EAAE,6DAA6D9D,KAA7D,CAAmE,GAAnE,CArBK;EAsBfmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CAtBA;EAuBfiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CAvBE;EAwBfqc,kBAAkB,EAAE,IAxBL;EAyBf5a,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE;EANM,CAzBD;EAiCfW,QAAQ,EAAE;IACNyF,OAAO,EAAE,iBADH;IAENC,OAAO,EAAE,gBAFH;IAGNC,QAAQ,EAAE,cAHJ;IAINC,OAAO,EAAE,kBAJH;IAKNC,QAAQ,EAAE,0BALJ;IAMNC,QAAQ,EAAE;EANJ,CAjCK;EAyCfhF,YAAY,EAAE;IACVqF,MAAM,EAAE,SADE;IAEVC,IAAI,EAAE,YAFI;IAGV5S,CAAC,EAAE,mBAHO;IAIV6S,EAAE,EAAE,aAJM;IAKVrT,CAAC,EAAE,YALO;IAMVsT,EAAE,EAAE,YANM;IAOVhT,CAAC,EAAE,SAPO;IAQViT,EAAE,EAAE,QARM;IASVtT,CAAC,EAAE,SATO;IAUVuT,EAAE,EAAE,UAVM;IAWVjT,CAAC,EAAE,WAXO;IAYVkT,EAAE,EAAE,YAZM;IAaV1T,CAAC,EAAE,UAbO;IAcV2T,EAAE,EAAE;EAdM,CAzCC;EAyDfE,sBAAsB,EAAE,iBAzDT;;EA0DfhV,OAAO,CAACqoB,IAAD,EAAO;IACV,MAAM5tB,GAAG,GAAG+I,MAAM,CAAC6kB,IAAD,CAAlB;IACA,OAAO5tB,GAAG,IAAKA,GAAG,KAAK,CAAR,IAAaA,GAAG,KAAK,CAArB,IAA0BA,GAAG,IAAI,EAAlC,GAAwC,KAAxC,GAAgD,IAApD,CAAV;EACH,CA7Dc;;EA8DfyR,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AA9DS,CAAnB,C,CAoEA;AACA;AACA;AACA;;AACA,IAAI6iB,mBAAmB,GAAG,6DAA6D7hB,KAA7D,CAAmE,GAAnE,CAA1B;AAAA,IAAmG8hB,sBAAsB,GAAG,kDAAkD9hB,KAAlD,CAAwD,GAAxD,CAA5H;AACA,IAAI+hB,aAAa,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,gBAAnB,EAAqC,OAArC,EAA8C,QAA9C,EAAwD,aAAxD,EAAuE,aAAvE,EAAsF,OAAtF,EAA+F,OAA/F,EAAwG,OAAxG,EAAiH,OAAjH,EAA0H,OAA1H,CAApB;AACA,IAAIjmB,WAAW,GAAG,0KAAlB;AACA,MAAMkmB,QAAQ,GAAG;EACb3S,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,0FAA0FoE,KAA1F,CAAgG,GAAhG,CAFK;;EAGbrE,WAAW,CAACjN,IAAD,EAAO+E,MAAP,EAAeM,KAAf,EAAsB;IAC7B,IAAI,CAACrF,IAAL,EAAW;MACP,OAAOmzB,mBAAP;IACH,CAFD,MAGK,IAAI,QAAQhf,IAAR,CAAapP,MAAb,CAAJ,EAA0B;MAC3B,OAAOquB,sBAAsB,CAAChsB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAA7B;IACH,CAFI,MAGA;MACD,OAAO8tB,mBAAmB,CAAC/rB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAA1B;IACH;EACJ,CAbY;;EAcb+H,WAda;EAebD,gBAAgB,EAAEC,WAfL;EAgBbghB,iBAAiB,EAAE,2FAhBN;EAiBbC,sBAAsB,EAAE,kFAjBX;EAkBb/gB,WAAW,EAAE+lB,aAlBA;EAmBb/E,eAAe,EAAE+E,aAnBJ;EAoBb9E,gBAAgB,EAAE8E,aApBL;EAqBbje,QAAQ,EAAE,6DAA6D9D,KAA7D,CAAmE,GAAnE,CArBG;EAsBbmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CAtBF;EAuBbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CAvBA;EAwBbqc,kBAAkB,EAAE,IAxBP;EAyBb5a,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE;EANM,CAzBH;EAiCbW,QAAQ,EAAE;IACNyF,OAAO,EAAE,iBADH;IAENC,OAAO,EAAE,gBAFH;IAGNC,QAAQ,EAAE,cAHJ;IAINC,OAAO,EAAE,kBAJH;IAKNC,QAAQ,EAAE,0BALJ;IAMNC,QAAQ,EAAE;EANJ,CAjCG;EAyCbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,SADE;IAEVC,IAAI,EAAE,YAFI;IAGV5S,CAAC,EAAE,mBAHO;IAIV6S,EAAE,EAAE,aAJM;IAKVrT,CAAC,EAAE,YALO;IAMVsT,EAAE,EAAE,YANM;IAOVhT,CAAC,EAAE,SAPO;IAQViT,EAAE,EAAE,QARM;IASVtT,CAAC,EAAE,SATO;IAUVuT,EAAE,EAAE,UAVM;IAWVjT,CAAC,EAAE,WAXO;IAYVkT,EAAE,EAAE,YAZM;IAaV1T,CAAC,EAAE,UAbO;IAcV2T,EAAE,EAAE;EAdM,CAzCD;EAyDbE,sBAAsB,EAAE,iBAzDX;;EA0DbhV,OAAO,CAACqoB,IAAD,EAAO;IACV,MAAM5tB,GAAG,GAAG+I,MAAM,CAAC6kB,IAAD,CAAlB;IACA,OAAO5tB,GAAG,IAAKA,GAAG,KAAK,CAAR,IAAaA,GAAG,KAAK,CAArB,IAA0BA,GAAG,IAAI,EAAlC,GAAwC,KAAxC,GAAgD,IAApD,CAAV;EACH,CA7DY;;EA8DbyR,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AA9DO,CAAjB,C,CAoEA;AACA;AACA;;AACA,IAAIijB,gBAAgB,GAAG,mGAAmGjiB,KAAnG,CAAyG,GAAzG,CAAvB;AACA,IAAIkiB,gBAAgB,GAAG,qGAAqGliB,KAArG,CAA2G,GAA3G,CAAvB;;AACA,SAASmiB,QAAT,CAAkBx0B,GAAlB,EAAuB;EACnB,OAAQA,GAAG,GAAG,EAAN,GAAW,CAAZ,IAAmBA,GAAG,GAAG,EAAN,GAAW,CAA9B,IAAsC,CAAC,EAAEA,GAAG,GAAG,EAAR,CAAD,GAAe,EAAhB,KAAwB,CAApE;AACH;;AACD,SAASy0B,WAAT,CAAqBz0B,GAArB,EAA0B0U,aAA1B,EAAyCjB,GAAzC,EAA8C;EAC1C,IAAIgU,MAAM,GAAGznB,GAAG,GAAG,GAAnB;;EACA,QAAQyT,GAAR;IACI,KAAK,IAAL;MACI,OAAOgU,MAAM,IAAI+M,QAAQ,CAACx0B,GAAD,CAAR,GAAgB,SAAhB,GAA4B,QAAhC,CAAb;;IACJ,KAAK,GAAL;MACI,OAAO0U,aAAa,GAAG,QAAH,GAAc,QAAlC;;IACJ,KAAK,IAAL;MACI,OAAO+S,MAAM,IAAI+M,QAAQ,CAACx0B,GAAD,CAAR,GAAgB,QAAhB,GAA2B,OAA/B,CAAb;;IACJ,KAAK,GAAL;MACI,OAAO0U,aAAa,GAAG,SAAH,GAAe,SAAnC;;IACJ,KAAK,IAAL;MACI,OAAO+S,MAAM,IAAI+M,QAAQ,CAACx0B,GAAD,CAAR,GAAgB,SAAhB,GAA4B,QAAhC,CAAb;;IACJ,KAAK,IAAL;MACI,OAAOynB,MAAM,IAAI+M,QAAQ,CAACx0B,GAAD,CAAR,GAAgB,UAAhB,GAA6B,UAAjC,CAAb;;IACJ,KAAK,IAAL;MACI,OAAOynB,MAAM,IAAI+M,QAAQ,CAACx0B,GAAD,CAAR,GAAgB,MAAhB,GAAyB,KAA7B,CAAb;EAdR;AAgBH;;AACD,MAAM00B,QAAQ,GAAG;EACbhT,IAAI,EAAE,IADO;;EAEbzT,MAAM,CAAClN,IAAD,EAAO+E,MAAP,EAAeM,KAAf,EAAsB;IACxB,IAAI,CAACrF,IAAL,EAAW;MACP,OAAOuzB,gBAAP;IACH,CAFD,MAGK,IAAIxuB,MAAM,KAAK,EAAf,EAAmB;MACpB;MACA;MACA;MACA,OAAO,MAAMyuB,gBAAgB,CAACpsB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAAtB,GAAgD,GAAhD,GAAsDkuB,gBAAgB,CAACnsB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAAtE,GAAgG,GAAvG;IACH,CALI,MAMA,IAAI,SAAS8O,IAAT,CAAcpP,MAAd,CAAJ,EAA2B;MAC5B,OAAOyuB,gBAAgB,CAACpsB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAAvB;IACH,CAFI,MAGA;MACD,OAAOkuB,gBAAgB,CAACnsB,QAAQ,CAACpH,IAAD,EAAOqF,KAAP,CAAT,CAAvB;IACH;EACJ,CAlBY;;EAmBb4H,WAAW,EAAE,kDAAkDqE,KAAlD,CAAwD,GAAxD,CAnBA;EAoBb8D,QAAQ,EAAE,6DAA6D9D,KAA7D,CAAmE,GAAnE,CApBG;EAqBbmE,aAAa,EAAE,2BAA2BnE,KAA3B,CAAiC,GAAjC,CArBF;EAsBbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CAtBA;EAuBbyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE;EANM,CAvBH;EA+BbW,QAAQ,EAAE;IACNyF,OAAO,EAAE,aADH;IAENC,OAAO,EAAE,cAFH;;IAGNC,QAAQ,CAACvY,IAAD,EAAO;MACX,QAAQitB,YAAY,CAACjtB,IAAD,CAApB;QACI,KAAK,CAAL;UACI,OAAO,oBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,kBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,gBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,iBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,iBAAP;;QACJ;UACI,OAAO,iBAAP;MAZR;IAcH,CAlBK;;IAmBNwY,OAAO,EAAE,gBAnBH;;IAoBNC,QAAQ,CAACzY,IAAD,EAAO;MACX,QAAQitB,YAAY,CAACjtB,IAAD,CAApB;QACI,KAAK,CAAL;UACI,OAAO,2BAAP;;QACJ,KAAK,CAAL;UACI,OAAO,uBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,0BAAP;;QACJ,KAAK,CAAL;UACI,OAAO,wBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,wBAAP;;QACJ;UACI,OAAO,wBAAP;MAZR;IAcH,CAnCK;;IAoCN0Y,QAAQ,EAAE;EApCJ,CA/BG;EAqEbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,SAFI;IAGV5S,CAAC,EAAE,cAHO;IAIV6S,EAAE,EAAEya,WAJM;IAKV9tB,CAAC,EAAE8tB,WALO;IAMVxa,EAAE,EAAEwa,WANM;IAOVxtB,CAAC,EAAEwtB,WAPO;IAQVva,EAAE,EAAEua,WARM;IASV7tB,CAAC,EAAE,SATO;IAUVuT,EAAE,EAAE,QAVM;IAWVjT,CAAC,EAAE,SAXO;IAYVkT,EAAE,EAAEqa,WAZM;IAaV/tB,CAAC,EAAE,KAbO;IAcV2T,EAAE,EAAEoa;EAdM,CArED;EAqFbla,sBAAsB,EAAE,WArFX;EAsFbhV,OAAO,EAAE,KAtFI;EAuFbkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAvFO,CAAjB,C,CA6FA;AACA;AACA;;AACA,MAAMsjB,UAAU,GAAG;EACfjT,IAAI,EAAE,OADS;EAEfzT,MAAM,EAAE,2FAA2FoE,KAA3F,CAAiG,GAAjG,CAFO;EAGfrE,WAAW,EAAE,kDAAkDqE,KAAlD,CAAwD,GAAxD,CAHE;EAIf8D,QAAQ,EAAE,iFAAiF9D,KAAjF,CAAuF,GAAvF,CAJK;EAKfmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CALA;EAMfiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CANE;EAOfqc,kBAAkB,EAAE,IAPL;EAQf5a,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,uBAJQ;IAKZC,GAAG,EAAE,kCALO;IAMZC,IAAI,EAAE;EANM,CARD;EAgBfW,QAAQ,EAAE;IACNyF,OAAO,EAAE,cADH;IAENC,OAAO,EAAE,gBAFH;IAGNC,QAAQ,EAAE,cAHJ;IAINC,OAAO,EAAE,eAJH;;IAKNC,QAAQ,CAACzY,IAAD,EAAO;MACX,OAAQitB,YAAY,CAACjtB,IAAD,CAAZ,KAAuB,CAAvB,IAA4BitB,YAAY,CAACjtB,IAAD,CAAZ,KAAuB,CAApD,GACH,uBADG,GACuB;MAC1B,uBAFJ,CADW,CAGkB;IAChC,CATK;;IAUN0Y,QAAQ,EAAE;EAVJ,CAhBK;EA4BfhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,UAFI;IAGV5S,CAAC,EAAE,iBAHO;IAIV6S,EAAE,EAAE,aAJM;IAKVrT,CAAC,EAAE,WALO;IAMVsT,EAAE,EAAE,YANM;IAOVhT,CAAC,EAAE,UAPO;IAQViT,EAAE,EAAE,UARM;IASVtT,CAAC,EAAE,QATO;IAUVuT,EAAE,EAAE,SAVM;IAWVjT,CAAC,EAAE,QAXO;IAYVkT,EAAE,EAAE,UAZM;IAaV1T,CAAC,EAAE,QAbO;IAcV2T,EAAE,EAAE;EAdM,CA5BC;EA4CfE,sBAAsB,EAAE,UA5CT;EA6CfhV,OAAO,EAAE;AA7CM,CAAnB,C,CAgDA;AACA;AACA;AACA;AACA;;AACA,SAASqvB,wBAAT,CAAkC50B,GAAlC,EAAuC0U,aAAvC,EAAsDjB,GAAtD,EAA2D;EACvD,IAAI3N,MAAM,GAAG;IACTkU,EAAE,EAAE,SADK;IAETC,EAAE,EAAE,QAFK;IAGTC,EAAE,EAAE,KAHK;IAITC,EAAE,EAAE,MAJK;IAKTC,EAAE,EAAE,MALK;IAMTC,EAAE,EAAE;EANK,CAAb;EAQA,IAAI+C,SAAS,GAAG,GAAhB;;EACA,IAAIpd,GAAG,GAAG,GAAN,IAAa,EAAb,IAAoBA,GAAG,IAAI,GAAP,IAAcA,GAAG,GAAG,GAAN,KAAc,CAApD,EAAwD;IACpDod,SAAS,GAAG,MAAZ;EACH;;EACD,OAAOpd,GAAG,GAAGod,SAAN,GAAkBtX,MAAM,CAAC2N,GAAD,CAA/B;AACH;;AACD,MAAMohB,QAAQ,GAAG;EACbnT,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,oGAAoGoE,KAApG,CAA0G,GAA1G,CAFK;EAGbrE,WAAW,EAAE,gEAAgEqE,KAAhE,CAAsE,GAAtE,CAHA;EAIb0d,gBAAgB,EAAE,IAJL;EAKb5Z,QAAQ,EAAE,kDAAkD9D,KAAlD,CAAwD,GAAxD,CALG;EAMbmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CANF;EAObiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CAPA;EAQbyB,cAAc,EAAE;IACZlB,EAAE,EAAE,MADQ;IAEZD,GAAG,EAAE,SAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,kBALO;IAMZC,IAAI,EAAE;EANM,CARH;EAgBbW,QAAQ,EAAE;IACNyF,OAAO,EAAE,aADH;IAENC,OAAO,EAAE,eAFH;IAGNC,QAAQ,EAAE,cAHJ;IAINC,OAAO,EAAE,cAJH;IAKNC,QAAQ,EAAE,sBALJ;IAMNC,QAAQ,EAAE;EANJ,CAhBG;EAwBbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,UADE;IAEVC,IAAI,EAAE,YAFI;IAGV5S,CAAC,EAAE,gBAHO;IAIV6S,EAAE,EAAE4a,wBAJM;IAKVjuB,CAAC,EAAE,UALO;IAMVsT,EAAE,EAAE2a,wBANM;IAOV3tB,CAAC,EAAE,OAPO;IAQViT,EAAE,EAAE0a,wBARM;IASVhuB,CAAC,EAAE,MATO;IAUVuT,EAAE,EAAEya,wBAVM;IAWV1tB,CAAC,EAAE,QAXO;IAYVkT,EAAE,EAAEwa,wBAZM;IAaVluB,CAAC,EAAE,OAbO;IAcV2T,EAAE,EAAEua;EAdM,CAxBD;EAwCbnjB,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAxCO,CAAjB,C,CA8CA;AACA;AACA;AACA;AACA;;AACA,SAASyjB,QAAT,CAAkBC,IAAlB,EAAwB/0B,GAAxB,EAA6B;EACzB,IAAIqzB,KAAK,GAAG0B,IAAI,CAAC1iB,KAAL,CAAW,GAAX,CAAZ;EACA,OAAOrS,GAAG,GAAG,EAAN,KAAa,CAAb,IAAkBA,GAAG,GAAG,GAAN,KAAc,EAAhC,GAAqCqzB,KAAK,CAAC,CAAD,CAA1C,GAAiDrzB,GAAG,GAAG,EAAN,IAAY,CAAZ,IAAiBA,GAAG,GAAG,EAAN,IAAY,CAA7B,KAAmCA,GAAG,GAAG,GAAN,GAAY,EAAZ,IAAkBA,GAAG,GAAG,GAAN,IAAa,EAAlE,IAAwEqzB,KAAK,CAAC,CAAD,CAA7E,GAAmFA,KAAK,CAAC,CAAD,CAAhJ;AACH;;AACD,SAAS2B,wBAAT,CAAkCh1B,GAAlC,EAAuC0U,aAAvC,EAAsDjB,GAAtD,EAA2D;EACvD,IAAI3N,MAAM,GAAG;IACTkU,EAAE,EAAEtF,aAAa,GAAG,wBAAH,GAA8B,wBADtC;IAETuF,EAAE,EAAEvF,aAAa,GAAG,qBAAH,GAA2B,qBAFnC;IAGTwF,EAAE,EAAE,gBAHK;IAITC,EAAE,EAAE,eAJK;IAKTC,EAAE,EAAE,sBALK;IAMTC,EAAE,EAAE;EANK,CAAb;;EAQA,IAAI5G,GAAG,KAAK,GAAZ,EAAiB;IACb,OAAOiB,aAAa,GAAG,QAAH,GAAc,QAAlC;EACH;;EACD,OAAO1U,GAAG,GAAG,GAAN,GAAY80B,QAAQ,CAAChvB,MAAM,CAAC2N,GAAD,CAAP,EAAc,CAACzT,GAAf,CAA3B;AACH;;AACD,IAAIqO,WAAW,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,UAArC,EAAiD,OAAjD,EAA0D,OAA1D,EAAmE,OAAnE,EAA4E,OAA5E,EAAqF,OAArF,EAA8F,OAA9F,EAAuG,OAAvG,CAAlB,C,CACA;AACA;AACA;;AACA,MAAM4mB,QAAQ,GAAG;EACbvT,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE;IACJnI,MAAM,EAAE,oFAAoFuM,KAApF,CAA0F,GAA1F,CADJ;IAEJ2C,UAAU,EAAE,kFAAkF3C,KAAlF,CAAwF,GAAxF;EAFR,CAFK;EAMbrE,WAAW,EAAE;IACT;IACAlI,MAAM,EAAE,gEAAgEuM,KAAhE,CAAsE,GAAtE,CAFC;IAGT2C,UAAU,EAAE,gEAAgE3C,KAAhE,CAAsE,GAAtE;EAHH,CANA;EAWb8D,QAAQ,EAAE;IACNnB,UAAU,EAAE,gEAAgE3C,KAAhE,CAAsE,GAAtE,CADN;IAENvM,MAAM,EAAE,gEAAgEuM,KAAhE,CAAsE,GAAtE,CAFF;IAGN4C,QAAQ,EAAE;EAHJ,CAXG;EAgBbuB,aAAa,EAAE,uBAAuBnE,KAAvB,CAA6B,GAA7B,CAhBF;EAiBbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CAjBA;EAkBbhE,WAlBa;EAmBbghB,eAAe,EAAEhhB,WAnBJ;EAoBbihB,gBAAgB,EAAEjhB,WApBL;EAqBb;EACAF,WAAW,EAAE,0MAtBA;EAuBb;EACAD,gBAAgB,EAAE,0MAxBL;EAyBb;EACAihB,iBAAiB,EAAE,uHA1BN;EA2Bb;EACAC,sBAAsB,EAAE,4FA5BX;EA6Bbtb,cAAc,EAAE;IACZlB,EAAE,EAAE,MADQ;IAEZD,GAAG,EAAE,SAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,gBAJQ;IAKZC,GAAG,EAAE,sBALO;IAMZC,IAAI,EAAE;EANM,CA7BH;EAqCbW,QAAQ,EAAE;IACNyF,OAAO,EAAE,gBADH;IAENC,OAAO,EAAE,eAFH;IAGNE,OAAO,EAAE,cAHH;;IAIND,QAAQ,CAACvY,IAAD,EAAO6S,GAAP,EAAY;MAChB,IAAIqH,OAAO,CAACrH,GAAD,CAAP,KAAiBqH,OAAO,CAACla,IAAD,CAA5B,EAAoC;QAChC,QAAQitB,YAAY,CAACjtB,IAAD,CAApB;UACI,KAAK,CAAL;YACI,OAAO,2BAAP;;UACJ,KAAK,CAAL;UACA,KAAK,CAAL;UACA,KAAK,CAAL;YACI,OAAO,2BAAP;;UACJ,KAAK,CAAL;UACA,KAAK,CAAL;UACA,KAAK,CAAL;YACI,OAAO,2BAAP;QAVR;MAYH,CAbD,MAcK;QACD,IAAIitB,YAAY,CAACjtB,IAAD,CAAZ,KAAuB,CAA3B,EAA8B;UAC1B,OAAO,kBAAP;QACH,CAFD,MAGK;UACD,OAAO,iBAAP;QACH;MACJ;IACJ,CA3BK;;IA4BNyY,QAAQ,CAACzY,IAAD,EAAO6S,GAAP,EAAY;MAChB,IAAIqH,OAAO,CAACrH,GAAD,CAAP,KAAiBqH,OAAO,CAACla,IAAD,CAA5B,EAAoC;QAChC,QAAQitB,YAAY,CAACjtB,IAAD,CAApB;UACI,KAAK,CAAL;YACI,OAAO,yBAAP;;UACJ,KAAK,CAAL;UACA,KAAK,CAAL;UACA,KAAK,CAAL;YACI,OAAO,yBAAP;;UACJ,KAAK,CAAL;UACA,KAAK,CAAL;UACA,KAAK,CAAL;YACI,OAAO,yBAAP;QAVR;MAYH,CAbD,MAcK;QACD,IAAIitB,YAAY,CAACjtB,IAAD,CAAZ,KAAuB,CAA3B,EAA8B;UAC1B,OAAO,kBAAP;QACH,CAFD,MAGK;UACD,OAAO,iBAAP;QACH;MACJ;IACJ,CAnDK;;IAoDN0Y,QAAQ,EAAE;EApDJ,CArCG;EA2FbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,UADE;IAEVC,IAAI,EAAE,UAFI;IAGV5S,CAAC,EAAE,kBAHO;IAIV6S,EAAE,EAAEgb,wBAJM;IAKVruB,CAAC,EAAEquB,wBALO;IAMV/a,EAAE,EAAE+a,wBANM;IAOV/tB,CAAC,EAAE,KAPO;IAQViT,EAAE,EAAE8a,wBARM;IASVpuB,CAAC,EAAE,MATO;IAUVuT,EAAE,EAAE6a,wBAVM;IAWV9tB,CAAC,EAAE,OAXO;IAYVkT,EAAE,EAAE4a,wBAZM;IAaVtuB,CAAC,EAAE,KAbO;IAcV2T,EAAE,EAAE2a;EAdM,CA3FD;EA2Gbxa,aAAa,EAAE,uBA3GF;;EA4Gb3C,IAAI,CAACtW,KAAD,EAAQ;IACR,OAAO,iBAAiB2T,IAAjB,CAAsB3T,KAAtB,CAAP;EACH,CA9GY;;EA+GbyL,QAAQ,CAACtK,IAAD,EAAOC,MAAP,EAAesV,OAAf,EAAwB;IAC5B,IAAIvV,IAAI,GAAG,CAAX,EAAc;MACV,OAAO,MAAP;IACH,CAFD,MAGK,IAAIA,IAAI,GAAG,EAAX,EAAe;MAChB,OAAO,MAAP;IACH,CAFI,MAGA,IAAIA,IAAI,GAAG,EAAX,EAAe;MAChB,OAAO,KAAP;IACH,CAFI,MAGA;MACD,OAAO,QAAP;IACH;EACJ,CA5HY;;EA6Hb6X,sBAAsB,EAAE,kBA7HX;;EA8HbhV,OAAO,CAACqoB,IAAD,EAAOJ,MAAP,EAAe;IAClB,MAAMxtB,GAAG,GAAG+I,MAAM,CAAC6kB,IAAD,CAAlB;;IACA,QAAQJ,MAAR;MACI,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,KAAL;QACI,OAAOxtB,GAAG,GAAG,IAAb;;MACJ,KAAK,GAAL;QACI,OAAOA,GAAG,GAAG,KAAb;;MACJ,KAAK,GAAL;MACA,KAAK,GAAL;QACI,OAAOA,GAAG,GAAG,IAAb;;MACJ;QACI,OAAOA,GAAG,CAACW,QAAJ,CAAa,EAAb,CAAP;IAXR;EAaH,CA7IY;;EA8Ib8Q,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AA9IO,CAAjB,C,CAoJA;AACA;AACA;;AACA,MAAMpD,MAAM,GAAG,oFAAoFoE,KAApF,CAA0F,GAA1F,CAAf;AACA,MAAMrE,WAAW,GAAG,kDAAkDqE,KAAlD,CAAwD,GAAxD,CAApB;;AACA,SAAS6iB,QAAT,CAAkBl1B,GAAlB,EAAuB;EACnB,OAAQA,GAAG,GAAG,CAAP,IAAcA,GAAG,GAAG,CAApB,IAA2B,CAAC,EAAEA,GAAG,GAAG,EAAR,CAAD,KAAiB,CAAnD;AACH;;AACD,SAASm1B,SAAT,CAAmBn1B,GAAnB,EAAwB0U,aAAxB,EAAuCjB,GAAvC,EAA4CkB,QAA5C,EAAsD;EAClD,MAAM8S,MAAM,GAAGznB,GAAG,GAAG,GAArB;;EACA,QAAQyT,GAAR;IACI,KAAK,GAAL;MAAU;MACN,OAAQiB,aAAa,IAAIC,QAAlB,GAA8B,YAA9B,GAA6C,eAApD;;IACJ,KAAK,IAAL;MAAW;MACP,IAAID,aAAa,IAAIC,QAArB,EAA+B;QAC3B,OAAO8S,MAAM,IAAIyN,QAAQ,CAACl1B,GAAD,CAAR,GAAgB,SAAhB,GAA4B,QAAhC,CAAb;MACH,CAFD,MAGK;QACD,OAAOynB,MAAM,GAAG,WAAhB;MACH;;IACL;;IACA,KAAK,GAAL;MAAU;MACN,OAAO/S,aAAa,GAAG,QAAH,GAAeC,QAAQ,GAAG,QAAH,GAAc,SAAzD;;IACJ,KAAK,IAAL;MAAW;MACP,IAAID,aAAa,IAAIC,QAArB,EAA+B;QAC3B,OAAO8S,MAAM,IAAIyN,QAAQ,CAACl1B,GAAD,CAAR,GAAgB,QAAhB,GAA2B,OAA/B,CAAb;MACH,CAFD,MAGK;QACD,OAAOynB,MAAM,GAAG,UAAhB;MACH;;IACL;;IACA,KAAK,GAAL;MAAU;MACN,OAAO/S,aAAa,GAAG,QAAH,GAAeC,QAAQ,GAAG,QAAH,GAAc,SAAzD;;IACJ,KAAK,IAAL;MAAW;MACP,IAAID,aAAa,IAAIC,QAArB,EAA+B;QAC3B,OAAO8S,MAAM,IAAIyN,QAAQ,CAACl1B,GAAD,CAAR,GAAgB,QAAhB,GAA2B,OAA/B,CAAb;MACH,CAFD,MAGK;QACD,OAAOynB,MAAM,GAAG,UAAhB;MACH;;IACL;;IACA,KAAK,GAAL;MAAU;MACN,OAAQ/S,aAAa,IAAIC,QAAlB,GAA8B,KAA9B,GAAsC,MAA7C;;IACJ,KAAK,IAAL;MAAW;MACP,IAAID,aAAa,IAAIC,QAArB,EAA+B;QAC3B,OAAO8S,MAAM,IAAIyN,QAAQ,CAACl1B,GAAD,CAAR,GAAgB,KAAhB,GAAwB,KAA5B,CAAb;MACH,CAFD,MAGK;QACD,OAAOynB,MAAM,GAAG,OAAhB;MACH;;IACL;;IACA,KAAK,GAAL;MAAU;MACN,OAAQ/S,aAAa,IAAIC,QAAlB,GAA8B,QAA9B,GAAyC,UAAhD;;IACJ,KAAK,IAAL;MAAW;MACP,IAAID,aAAa,IAAIC,QAArB,EAA+B;QAC3B,OAAO8S,MAAM,IAAIyN,QAAQ,CAACl1B,GAAD,CAAR,GAAgB,SAAhB,GAA4B,UAAhC,CAAb;MACH,CAFD,MAGK;QACD,OAAOynB,MAAM,GAAG,UAAhB;MACH;;IACL;;IACA,KAAK,GAAL;MAAU;MACN,OAAQ/S,aAAa,IAAIC,QAAlB,GAA8B,KAA9B,GAAsC,OAA7C;;IACJ,KAAK,IAAL;MAAW;MACP,IAAID,aAAa,IAAIC,QAArB,EAA+B;QAC3B,OAAO8S,MAAM,IAAIyN,QAAQ,CAACl1B,GAAD,CAAR,GAAgB,MAAhB,GAAyB,OAA7B,CAAb;MACH,CAFD,MAGK;QACD,OAAOynB,MAAM,GAAG,OAAhB;MACH;;IACL;EA5DJ;AA8DH;;AACD,MAAM2N,QAAQ,GAAG;EACb1T,IAAI,EAAE,IADO;EAEbzT,MAFa;EAGbD,WAHa;EAIbmI,QAAQ,EAAE,sDAAsD9D,KAAtD,CAA4D,GAA5D,CAJG;EAKbmE,aAAa,EAAE,uBAAuBnE,KAAvB,CAA6B,GAA7B,CALF;EAMbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,MADQ;IAEZD,GAAG,EAAE,SAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,cAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE,wBANM;IAOZ+T,CAAC,EAAE;EAPS,CAPH;EAgBbpT,QAAQ,EAAE;IACNyF,OAAO,EAAE,aADH;IAENC,OAAO,EAAE,eAFH;;IAGNC,QAAQ,CAACvY,IAAD,EAAO;MACX,QAAQitB,YAAY,CAACjtB,IAAD,CAApB;QACI,KAAK,CAAL;UACI,OAAO,iBAAP;;QACJ,KAAK,CAAL;QACA,KAAK,CAAL;UACI,OAAO,iBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,iBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,mBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,iBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,iBAAP;MAbR;IAeH,CAnBK;;IAoBNwY,OAAO,EAAE,cApBH;;IAqBNC,QAAQ,CAACzY,IAAD,EAAO;MACX,QAAQitB,YAAY,CAACjtB,IAAD,CAApB;QACI,KAAK,CAAL;UACI,OAAO,sBAAP;;QACJ,KAAK,CAAL;QACA,KAAK,CAAL;UACI,OAAO,sBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,sBAAP;;QACJ,KAAK,CAAL;QACA,KAAK,CAAL;UACI,OAAO,sBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,sBAAP;MAZR;IAcH,CApCK;;IAqCN0Y,QAAQ,EAAE;EArCJ,CAhBG;EAuDbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,MADE;IAEVC,IAAI,EAAE,SAFI;IAGV5S,CAAC,EAAEguB,SAHO;IAIVnb,EAAE,EAAEmb,SAJM;IAKVxuB,CAAC,EAAEwuB,SALO;IAMVlb,EAAE,EAAEkb,SANM;IAOVluB,CAAC,EAAEkuB,SAPO;IAQVjb,EAAE,EAAEib,SARM;IASVvuB,CAAC,EAAEuuB,SATO;IAUVhb,EAAE,EAAEgb,SAVM;IAWVjuB,CAAC,EAAEiuB,SAXO;IAYV/a,EAAE,EAAE+a,SAZM;IAaVzuB,CAAC,EAAEyuB,SAbO;IAcV9a,EAAE,EAAE8a;EAdM,CAvDD;EAuEb5a,sBAAsB,EAAE,WAvEX;EAwEbhV,OAAO,EAAE,KAxEI;EAyEbkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAzEO,CAAjB,C,CA+EA;AACA;AACA;;AACA,SAASgkB,mBAAT,CAA6BvS,MAA7B,EAAqCpO,aAArC,EAAoDjB,GAApD,EAAyDkB,QAAzD,EAAmE;EAC/D,IAAI8S,MAAM,GAAG3E,MAAM,GAAG,GAAtB;;EACA,QAAQrP,GAAR;IACI,KAAK,GAAL;MACI,OAAOiB,aAAa,IAAIC,QAAjB,GAA4B,cAA5B,GAA6C,iBAApD;;IACJ,KAAK,IAAL;MACI,IAAImO,MAAM,KAAK,CAAf,EAAkB;QACd2E,MAAM,IAAI/S,aAAa,GAAG,SAAH,GAAe,SAAtC;MACH,CAFD,MAGK,IAAIoO,MAAM,KAAK,CAAf,EAAkB;QACnB2E,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,SAA5B,GAAwC,UAAlD;MACH,CAFI,MAGA,IAAImO,MAAM,GAAG,CAAb,EAAgB;QACjB2E,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,SAA5B,GAAwC,UAAlD;MACH,CAFI,MAGA;QACD8S,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,QAA5B,GAAuC,QAAjD;MACH;;MACD,OAAO8S,MAAP;;IACJ,KAAK,GAAL;MACI,OAAO/S,aAAa,GAAG,YAAH,GAAkB,YAAtC;;IACJ,KAAK,IAAL;MACI,IAAIoO,MAAM,KAAK,CAAf,EAAkB;QACd2E,MAAM,IAAI/S,aAAa,GAAG,QAAH,GAAc,QAArC;MACH,CAFD,MAGK,IAAIoO,MAAM,KAAK,CAAf,EAAkB;QACnB2E,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,QAA5B,GAAuC,UAAjD;MACH,CAFI,MAGA,IAAImO,MAAM,GAAG,CAAb,EAAgB;QACjB2E,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,QAA5B,GAAuC,UAAjD;MACH,CAFI,MAGA;QACD8S,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,OAA5B,GAAsC,UAAhD;MACH;;MACD,OAAO8S,MAAP;;IACJ,KAAK,GAAL;MACI,OAAO/S,aAAa,GAAG,SAAH,GAAe,SAAnC;;IACJ,KAAK,IAAL;MACI,IAAIoO,MAAM,KAAK,CAAf,EAAkB;QACd2E,MAAM,IAAI/S,aAAa,GAAG,KAAH,GAAW,KAAlC;MACH,CAFD,MAGK,IAAIoO,MAAM,KAAK,CAAf,EAAkB;QACnB2E,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,KAA5B,GAAoC,OAA9C;MACH,CAFI,MAGA,IAAImO,MAAM,GAAG,CAAb,EAAgB;QACjB2E,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,KAA5B,GAAoC,OAA9C;MACH,CAFI,MAGA;QACD8S,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,IAA5B,GAAmC,OAA7C;MACH;;MACD,OAAO8S,MAAP;;IACJ,KAAK,GAAL;MACI,OAAO/S,aAAa,IAAIC,QAAjB,GAA4B,QAA5B,GAAuC,WAA9C;;IACJ,KAAK,IAAL;MACI,IAAImO,MAAM,KAAK,CAAf,EAAkB;QACd2E,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,KAA5B,GAAoC,MAA9C;MACH,CAFD,MAGK,IAAImO,MAAM,KAAK,CAAf,EAAkB;QACnB2E,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,KAA5B,GAAoC,SAA9C;MACH,CAFI,MAGA;QACD8S,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,KAA5B,GAAoC,OAA9C;MACH;;MACD,OAAO8S,MAAP;;IACJ,KAAK,GAAL;MACI,OAAO/S,aAAa,IAAIC,QAAjB,GAA4B,UAA5B,GAAyC,cAAhD;;IACJ,KAAK,IAAL;MACI,IAAImO,MAAM,KAAK,CAAf,EAAkB;QACd2E,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,OAA5B,GAAsC,SAAhD;MACH,CAFD,MAGK,IAAImO,MAAM,KAAK,CAAf,EAAkB;QACnB2E,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,QAA5B,GAAuC,UAAjD;MACH,CAFI,MAGA,IAAImO,MAAM,GAAG,CAAb,EAAgB;QACjB2E,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,QAA5B,GAAuC,QAAjD;MACH,CAFI,MAGA;QACD8S,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,SAA5B,GAAwC,QAAlD;MACH;;MACD,OAAO8S,MAAP;;IACJ,KAAK,GAAL;MACI,OAAO/S,aAAa,IAAIC,QAAjB,GAA4B,UAA5B,GAAyC,YAAhD;;IACJ,KAAK,IAAL;MACI,IAAImO,MAAM,KAAK,CAAf,EAAkB;QACd2E,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,MAA5B,GAAqC,OAA/C;MACH,CAFD,MAGK,IAAImO,MAAM,KAAK,CAAf,EAAkB;QACnB2E,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,MAA5B,GAAqC,QAA/C;MACH,CAFI,MAGA,IAAImO,MAAM,GAAG,CAAb,EAAgB;QACjB2E,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,MAA5B,GAAqC,MAA/C;MACH,CAFI,MAGA;QACD8S,MAAM,IAAI/S,aAAa,IAAIC,QAAjB,GAA4B,KAA5B,GAAoC,MAA9C;MACH;;MACD,OAAO8S,MAAP;EA7FR;AA+FH;;AACD,MAAM6N,QAAQ,GAAG;EACb5T,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,wFAAwFoE,KAAxF,CAA8F,GAA9F,CAFK;EAGbrE,WAAW,EAAE,8DAA8DqE,KAA9D,CAAoE,GAApE,CAHA;EAIb0d,gBAAgB,EAAE,IAJL;EAKb5Z,QAAQ,EAAE,sDAAsD9D,KAAtD,CAA4D,GAA5D,CALG;EAMbmE,aAAa,EAAE,qCAAqCnE,KAArC,CAA2C,GAA3C,CANF;EAObiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CAPA;EAQbqc,kBAAkB,EAAE,IARP;EASb5a,cAAc,EAAE;IACZlB,EAAE,EAAE,MADQ;IAEZD,GAAG,EAAE,SAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,cAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE;EANM,CATH;EAiBbW,QAAQ,EAAE;IACNyF,OAAO,EAAE,eADH;IAENC,OAAO,EAAE,eAFH;;IAGNC,QAAQ,CAACvY,IAAD,EAAO;MACX,QAAQitB,YAAY,CAACjtB,IAAD,CAApB;QACI,KAAK,CAAL;UACI,OAAO,uBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,qBAAP;;QACJ,KAAK,CAAL;UACI,OAAO,sBAAP;;QACJ,KAAK,CAAL;QACA,KAAK,CAAL;QACA,KAAK,CAAL;QACA,KAAK,CAAL;UACI,OAAO,kBAAP;MAXR;IAaH,CAjBK;;IAkBNwY,OAAO,EAAE,gBAlBH;;IAmBNC,QAAQ,CAACzY,IAAD,EAAO;MACX,QAAQitB,YAAY,CAACjtB,IAAD,CAApB;QACI,KAAK,CAAL;UACI,OAAO,8BAAP;;QACJ,KAAK,CAAL;UACI,OAAO,4BAAP;;QACJ,KAAK,CAAL;UACI,OAAO,6BAAP;;QACJ,KAAK,CAAL;QACA,KAAK,CAAL;QACA,KAAK,CAAL;QACA,KAAK,CAAL;UACI,OAAO,yBAAP;MAXR;IAaH,CAjCK;;IAkCN0Y,QAAQ,EAAE;EAlCJ,CAjBG;EAqDbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,QADE;IAEVC,IAAI,EAAE,SAFI;IAGV5S,CAAC,EAAEkuB,mBAHO;IAIVrb,EAAE,EAAEqb,mBAJM;IAKV1uB,CAAC,EAAE0uB,mBALO;IAMVpb,EAAE,EAAEob,mBANM;IAOVpuB,CAAC,EAAEouB,mBAPO;IAQVnb,EAAE,EAAEmb,mBARM;IASVzuB,CAAC,EAAEyuB,mBATO;IAUVlb,EAAE,EAAEkb,mBAVM;IAWVnuB,CAAC,EAAEmuB,mBAXO;IAYVjb,EAAE,EAAEib,mBAZM;IAaV3uB,CAAC,EAAE2uB,mBAbO;IAcVhb,EAAE,EAAEgb;EAdM,CArDD;EAqEb9a,sBAAsB,EAAE,WArEX;EAsEbhV,OAAO,EAAE,KAtEI;EAuEbkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAvEO,CAAjB,C,CA6EA;AACA;AACA;;AACA,MAAMkkB,QAAQ,GAAG;EACb7T,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,gFAAgFoE,KAAhF,CAAsF,GAAtF,CAFK;EAGbrE,WAAW,EAAE,kDAAkDqE,KAAlD,CAAwD,GAAxD,CAHA;EAIb8D,QAAQ,EAAE,6DAA6D9D,KAA7D,CAAmE,GAAnE,CAJG;EAKbmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CALF;EAMbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE;EANM,CAPH;EAebW,QAAQ,EAAE;IACNyF,OAAO,EAAE,aADH;IAENC,OAAO,EAAE,eAFH;IAGNC,QAAQ,EAAE,cAHJ;IAINC,OAAO,EAAE,aAJH;IAKNC,QAAQ,EAAE,uBALJ;IAMNC,QAAQ,EAAE;EANJ,CAfG;EAuBbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,WAFI;IAGV5S,CAAC,EAAE,cAHO;IAIV6S,EAAE,EAAE,YAJM;IAKVrT,CAAC,EAAE,WALO;IAMVsT,EAAE,EAAE,WANM;IAOVhT,CAAC,EAAE,SAPO;IAQViT,EAAE,EAAE,QARM;IASVtT,CAAC,EAAE,UATO;IAUVuT,EAAE,EAAE,SAVM;IAWVjT,CAAC,EAAE,UAXO;IAYVkT,EAAE,EAAE,SAZM;IAaV1T,CAAC,EAAE,SAbO;IAcV2T,EAAE,EAAE;EAdM,CAvBD;EAuCbE,sBAAsB,EAAE,WAvCX;EAwCbhV,OAAO,EAAE,KAxCI;EAyCbkM,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAzCO,CAAjB,C,CA+CA;AACA;AACA;;AACA,MAAMmkB,QAAQ,GAAG;EACb9T,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,wFAAwFoE,KAAxF,CAA8F,GAA9F,CAFK;EAGbrE,WAAW,EAAE,kDAAkDqE,KAAlD,CAAwD,GAAxD,CAHA;EAIb8D,QAAQ,EAAE,oDAAoD9D,KAApD,CAA0D,GAA1D,CAJG;EAKbmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CALF;EAMbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,yBALO;IAMZC,IAAI,EAAE,8BANM;IAOZye,GAAG,EAAE,kBAPO;IAQZC,IAAI,EAAE;EARM,CAPH;EAiBb/d,QAAQ,EAAE;IACNyF,OAAO,EAAE,WADH;IAENC,OAAO,EAAE,cAFH;IAGNE,OAAO,EAAE,WAHH;IAIND,QAAQ,EAAE,cAJJ;IAKNE,QAAQ,EAAE,gBALJ;IAMNC,QAAQ,EAAE;EANJ,CAjBG;EAyBbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,cAFI;IAGV5S,CAAC,EAAE,gBAHO;IAIV6S,EAAE,EAAE,aAJM;IAKVrT,CAAC,EAAE,UALO;IAMVsT,EAAE,EAAE,YANM;IAOVhT,CAAC,EAAE,UAPO;IAQViT,EAAE,EAAE,WARM;IASVtT,CAAC,EAAE,QATO;IAUVuT,EAAE,EAAE,UAVM;IAWVjT,CAAC,EAAE,UAXO;IAYVkT,EAAE,EAAE,YAZM;IAaV1T,CAAC,EAAE,QAbO;IAcV2T,EAAE,EAAE;EAdM,CAzBD;EAyCbE,sBAAsB,EAAE,cAzCX;;EA0CbhV,OAAO,CAACqoB,IAAD,EAAO;IACV,MAAM5tB,GAAG,GAAG+I,MAAM,CAAC6kB,IAAD,CAAlB;IACA,IAAIjsB,CAAC,GAAG3B,GAAG,GAAG,EAAd;IAAA,IAAkBsG,MAAM,GAAI,CAAC,EAAEtG,GAAG,GAAG,GAAN,GAAY,EAAd,CAAD,KAAuB,CAAxB,GAA6B,GAA7B,GACtB2B,CAAC,KAAK,CAAP,GAAY,GAAZ,GACKA,CAAC,KAAK,CAAP,GAAY,GAAZ,GACKA,CAAC,KAAK,CAAP,GAAY,GAAZ,GAAkB,GAH9B;IAIA,OAAO3B,GAAG,GAAGsG,MAAb;EACH,CAjDY;;EAkDbmL,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAlDO,CAAjB,C,CAwDA;AACA;AACA;;AACA,MAAMokB,QAAQ,GAAG;EACb/T,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,oGAAoGoE,KAApG,CAA0G,GAA1G,CAFK;EAGbrE,WAAW,EAAE,iEAAiEqE,KAAjE,CAAuE,GAAvE,CAHA;EAIb0d,gBAAgB,EAAE,IAJL;EAKb5Z,QAAQ,EAAE,iDAAiD9D,KAAjD,CAAuD,GAAvD,CALG;EAMbmE,aAAa,EAAE,yBAAyBnE,KAAzB,CAA+B,GAA/B,CANF;EAObiE,WAAW,EAAE,yBAAyBjE,KAAzB,CAA+B,GAA/B,CAPA;EAQbqc,kBAAkB,EAAE,IARP;EASb5a,cAAc,EAAE;IACZlB,EAAE,EAAE,MADQ;IAEZD,GAAG,EAAE,SAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,uBALO;IAMZC,IAAI,EAAE;EANM,CATH;EAiBbwH,aAAa,EAAE,uBAjBF;;EAkBb3C,IAAI,CAACtW,KAAD,EAAQ;IACR,OAAOA,KAAK,KAAK,YAAjB;EACH,CApBY;;EAqBbyL,QAAQ,CAACtK,IAAD,EAAOC,MAAP,EAAesV,OAAf,EAAwB;IAC5B,IAAIvV,IAAI,GAAG,EAAX,EAAe;MACX,OAAO,YAAP;IACH,CAFD,MAGK;MACD,OAAO,YAAP;IACH;EACJ,CA5BY;;EA6BbiR,QAAQ,EAAE;IACNyF,OAAO,EAAE,kBADH;IAENC,OAAO,EAAE,oBAFH;IAGNC,QAAQ,EAAE,oBAHJ;IAINC,OAAO,EAAE,uBAJH;IAKNC,QAAQ,EAAE,4BALJ;IAMNC,QAAQ,EAAE;EANJ,CA7BG;EAqCbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,QADE;IAEVC,IAAI,EAAE,WAFI;IAGV5S,CAAC,EAAE,cAHO;IAIV6S,EAAE,EAAE,WAJM;IAKVrT,CAAC,EAAE,QALO;IAMVsT,EAAE,EAAE,SANM;IAOVhT,CAAC,EAAE,WAPO;IAQViT,EAAE,EAAE,YARM;IASVtT,CAAC,EAAE,OATO;IAUVuT,EAAE,EAAE,QAVM;IAWVjT,CAAC,EAAE,SAXO;IAYVkT,EAAE,EAAE,UAZM;IAaV1T,CAAC,EAAE,MAbO;IAcV2T,EAAE,EAAE;EAdM;AArCD,CAAjB,C,CAuDA;AACA;AACA;;AACA,MAAMqb,UAAU,GAAG;EACfhU,IAAI,EAAE,OADS;EAEfzT,MAAM,EAAE,oGAAoGoE,KAApG,CAA0G,GAA1G,CAFO;EAGfrE,WAAW,EAAE,iEAAiEqE,KAAjE,CAAuE,GAAvE,CAHE;EAIf0d,gBAAgB,EAAE,IAJH;EAKf5Z,QAAQ,EAAE,iDAAiD9D,KAAjD,CAAuD,GAAvD,CALK;EAMfmE,aAAa,EAAE,yBAAyBnE,KAAzB,CAA+B,GAA/B,CANA;EAOfiE,WAAW,EAAE,yBAAyBjE,KAAzB,CAA+B,GAA/B,CAPE;EAQfqc,kBAAkB,EAAE,IARL;EASf5a,cAAc,EAAE;IACZlB,EAAE,EAAE,MADQ;IAEZD,GAAG,EAAE,SAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,uBALO;IAMZC,IAAI,EAAE;EANM,CATD;EAiBfwH,aAAa,EAAE,uBAjBA;;EAkBf3C,IAAI,CAACtW,KAAD,EAAQ;IACR,OAAOA,KAAK,KAAK,YAAjB;EACH,CApBc;;EAqBfyL,QAAQ,CAACtK,IAAD,EAAOC,MAAP,EAAesV,OAAf,EAAwB;IAC5B,IAAIvV,IAAI,GAAG,EAAX,EAAe;MACX,OAAO,YAAP;IACH,CAFD,MAGK;MACD,OAAO,YAAP;IACH;EACJ,CA5Bc;;EA6BfiR,QAAQ,EAAE;IACNyF,OAAO,EAAE,kBADH;IAENC,OAAO,EAAE,oBAFH;IAGNC,QAAQ,EAAE,oBAHJ;IAINC,OAAO,EAAE,uBAJH;IAKNC,QAAQ,EAAE,4BALJ;IAMNC,QAAQ,EAAE;EANJ,CA7BK;EAqCfhF,YAAY,EAAE;IACVqF,MAAM,EAAE,QADE;IAEVC,IAAI,EAAE,WAFI;IAGV5S,CAAC,EAAE,cAHO;IAIV6S,EAAE,EAAE,WAJM;IAKVrT,CAAC,EAAE,QALO;IAMVsT,EAAE,EAAE,SANM;IAOVhT,CAAC,EAAE,WAPO;IAQViT,EAAE,EAAE,YARM;IASVtT,CAAC,EAAE,OATO;IAUVuT,EAAE,EAAE,QAVM;IAWVjT,CAAC,EAAE,SAXO;IAYVkT,EAAE,EAAE,UAZM;IAaV1T,CAAC,EAAE,MAbO;IAcV2T,EAAE,EAAE;EAdM,CArCC;;EAqDf9F,QAAQ,CAAClU,GAAD,EAAMyF,MAAN,EAAc;IAClB,MAAM6iB,OAAO,GAAG+M,UAAU,CAAC5hB,cAAX,CAA0BhO,MAA1B,IACV4vB,UAAU,CAAC5hB,cAAX,CAA0BhO,MAA1B,CADU,GAEVA,MAFN,CADkB,CAIlB;;;IACA,IAAI6iB,OAAO,CAACpQ,OAAR,CAAgB,MAAhB,EAAwBoQ,OAAO,CAAC1mB,MAAR,GAAiB,OAAOA,MAAhD,MAA4D,CAAC,CAAjE,EAAoE;MAChE,MAAM0zB,IAAI,GAAGt1B,GAAG,CAAC2E,MAAJ,CAAW,CAAX,EAAc3E,GAAG,CAAC4B,MAAJ,GAAa,CAA3B,CAAb;MACA,MAAM2zB,IAAI,GAAGpoB,QAAQ,CAACnN,GAAG,CAAC2E,MAAJ,CAAW3E,GAAG,CAAC4B,MAAJ,GAAa,CAAxB,CAAD,EAA6B,EAA7B,CAAR,GAA2C,GAAxD;MACA,OAAO0zB,IAAI,GAAGC,IAAd;IACH;;IACD,OAAOv1B,GAAP;EACH,CAhEc;;EAiEfgH,WAAW,CAACtG,IAAD,EAAOqF,KAAK,GAAG,KAAf,EAAsB;IAC7B,OAAO,OAAOA,KAAK,GAAGrF,IAAI,CAAC+F,cAAL,EAAH,GAA2B/F,IAAI,CAACsG,WAAL,EAAvC,CAAP;EACH;;AAnEc,CAAnB,C,CAsEA;AACA;AACA;AACA;;AACA,IAAIwuB,QAAQ,GAAG;EACX,GAAG,QADQ;EAEX,GAAG,QAFQ;EAGX,GAAG,QAHQ;EAIX,IAAI,QAJO;EAKX,IAAI,QALO;EAMX,GAAG,OANQ;EAOX,GAAG,OAPQ;EAQX,IAAI,OARO;EASX,IAAI,OATO;EAUX,GAAG,QAVQ;EAWX,GAAG,QAXQ;EAYX,KAAK,QAZM;EAaX,GAAG,OAbQ;EAcX,GAAG,QAdQ;EAeX,IAAI,QAfO;EAgBX,IAAI,QAhBO;EAiBX,IAAI,QAjBO;EAkBX,IAAI;AAlBO,CAAf;AAoBA,MAAMC,QAAQ,GAAG;EACbpU,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,6EAA6EoE,KAA7E,CAAmF,GAAnF,CAFK;EAGbrE,WAAW,EAAE,kDAAkDqE,KAAlD,CAAwD,GAAxD,CAHA;EAIb8D,QAAQ,EAAE,wDAAwD9D,KAAxD,CAA8D,GAA9D,CAJG;EAKbmE,aAAa,EAAE,8BAA8BnE,KAA9B,CAAoC,GAApC,CALF;EAMbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CANA;EAObyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,aAJQ;IAKZC,GAAG,EAAE,mBALO;IAMZC,IAAI,EAAE;EANM,CAPH;EAebW,QAAQ,EAAE;IACNyF,OAAO,EAAE,iBADH;IAENC,OAAO,EAAE,iBAFH;IAGNC,QAAQ,EAAE,0BAHJ;IAINC,OAAO,EAAE,UAJH;IAKNC,QAAQ,EAAE,wBALJ;IAMNC,QAAQ,EAAE;EANJ,CAfG;EAuBbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,UADE;IAEVC,IAAI,EAAE,SAFI;IAGV5S,CAAC,EAAE,eAHO;IAIV6S,EAAE,EAAE,WAJM;IAKVrT,CAAC,EAAE,YALO;IAMVsT,EAAE,EAAE,WANM;IAOVhT,CAAC,EAAE,UAPO;IAQViT,EAAE,EAAE,SARM;IASVtT,CAAC,EAAE,SATO;IAUVuT,EAAE,EAAE,QAVM;IAWVjT,CAAC,EAAE,QAXO;IAYVkT,EAAE,EAAE,OAZM;IAaV1T,CAAC,EAAE,SAbO;IAcV2T,EAAE,EAAE;EAdM,CAvBD;EAuCbE,sBAAsB,EAAE,uCAvCX;;EAwCbhV,OAAO,CAACqoB,IAAD,EAAO;IACV,MAAM5tB,GAAG,GAAG+I,MAAM,CAAC6kB,IAAD,CAAlB;;IACA,IAAI5tB,GAAG,KAAK,CAAZ,EAAe;MAAE;MACb,OAAOA,GAAG,GAAG,QAAb;IACH;;IACD,IAAI0B,CAAC,GAAG1B,GAAG,GAAG,EAAd;IAAA,IAAkB2B,CAAC,GAAG3B,GAAG,GAAG,GAAN,GAAY0B,CAAlC;IAAA,IAAqCwnB,CAAC,GAAGlpB,GAAG,IAAI,GAAP,GAAa,GAAb,GAAmB,IAA5D;IACA,OAAOA,GAAG,IAAI61B,QAAQ,CAACn0B,CAAD,CAAR,IAAem0B,QAAQ,CAACl0B,CAAD,CAAvB,IAA8Bk0B,QAAQ,CAAC3M,CAAD,CAA1C,CAAV;EACH,CA/CY;;EAgDbzX,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAhDO,CAAjB,C,CAsDA;AACA;AACA;AACA;;AACA,SAAS0kB,MAAT,CAAgBhB,IAAhB,EAAsB/0B,GAAtB,EAA2B;EACvB,IAAIqzB,KAAK,GAAG0B,IAAI,CAAC1iB,KAAL,CAAW,GAAX,CAAZ;EACA,OAAOrS,GAAG,GAAG,EAAN,KAAa,CAAb,IAAkBA,GAAG,GAAG,GAAN,KAAc,EAAhC,GAAqCqzB,KAAK,CAAC,CAAD,CAA1C,GAAiDrzB,GAAG,GAAG,EAAN,IAAY,CAAZ,IAAiBA,GAAG,GAAG,EAAN,IAAY,CAA7B,KAAmCA,GAAG,GAAG,GAAN,GAAY,EAAZ,IAAkBA,GAAG,GAAG,GAAN,IAAa,EAAlE,IAAwEqzB,KAAK,CAAC,CAAD,CAA7E,GAAmFA,KAAK,CAAC,CAAD,CAAhJ;AACH;;AACD,SAAS2C,sBAAT,CAAgCh2B,GAAhC,EAAqC0U,aAArC,EAAoDjB,GAApD,EAAyD;EACrD,IAAI3N,MAAM,GAAG;IACTkU,EAAE,EAAEtF,aAAa,GAAG,wBAAH,GAA8B,wBADtC;IAETuF,EAAE,EAAEvF,aAAa,GAAG,wBAAH,GAA8B,wBAFtC;IAGTwF,EAAE,EAAExF,aAAa,GAAG,qBAAH,GAA2B,qBAHnC;IAITyF,EAAE,EAAE,eAJK;IAKTC,EAAE,EAAE,uBALK;IAMTC,EAAE,EAAE;EANK,CAAb;;EAQA,IAAI5G,GAAG,KAAK,GAAZ,EAAiB;IACb,OAAOiB,aAAa,GAAG,SAAH,GAAe,SAAnC;EACH;;EACD,IAAIjB,GAAG,KAAK,GAAZ,EAAiB;IACb,OAAOiB,aAAa,GAAG,QAAH,GAAc,QAAlC;EACH;;EACD,OAAO1U,GAAG,GAAG,GAAN,GAAY+1B,MAAM,CAACjwB,MAAM,CAAC2N,GAAD,CAAP,EAAc,CAACzT,GAAf,CAAzB;AACH;;AACD,SAASi2B,mBAAT,CAA6Bl1B,IAA7B,EAAmC+E,MAAnC,EAA2CM,KAA3C,EAAkD;EAC9C,IAAI+P,QAAQ,GAAG;IACX+f,UAAU,EAAE,0DAA0D7jB,KAA1D,CAAgE,GAAhE,CADD;IAEX8jB,UAAU,EAAE,0DAA0D9jB,KAA1D,CAAgE,GAAhE,CAFD;IAGX+jB,QAAQ,EAAE,4DAA4D/jB,KAA5D,CAAkE,GAAlE;EAHC,CAAf;;EAKA,IAAI,CAACtR,IAAL,EAAW;IACP,OAAOoV,QAAQ,CAAC+f,UAAhB;EACH;;EACD,IAAIG,QAAQ,GAAI,oBAAD,CAAuBnhB,IAAvB,CAA4BpP,MAA5B,IACX,YADW,GAET,qCAAD,CAAwCoP,IAAxC,CAA6CpP,MAA7C,IACG,UADH,GAEG,YAJR;EAKA,OAAOqQ,QAAQ,CAACkgB,QAAD,CAAR,CAAmBrI,YAAY,CAACjtB,IAAD,EAAOqF,KAAP,CAA/B,CAAP;AACH;;AACD,SAASkwB,oBAAT,CAA8Bj2B,GAA9B,EAAmC;EAC/B,OAAO,UAAUU,IAAV,EAAgB;IACnB,OAAOV,GAAG,GAAG,GAAN,IAAakH,QAAQ,CAACxG,IAAD,CAAR,KAAmB,EAAnB,GAAwB,GAAxB,GAA8B,EAA3C,IAAiD,MAAxD;EACH,CAFD;AAGH;;AACD,MAAMw1B,QAAQ,GAAG;EACb7U,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE;IACJnI,MAAM,EAAE,yFAAyFuM,KAAzF,CAA+F,GAA/F,CADJ;IAEJ2C,UAAU,EAAE,iGAAiG3C,KAAjG,CAAuG,GAAvG;EAFR,CAFK;EAMbrE,WAAW,EAAE,yDAAyDqE,KAAzD,CAA+D,GAA/D,CANA;EAOb8D,QAAQ,EAAE8f,mBAPG;EAQbzf,aAAa,EAAE,uBAAuBnE,KAAvB,CAA6B,GAA7B,CARF;EASbiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CATA;EAUbyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,gBAJQ;IAKZC,GAAG,EAAE,uBALO;IAMZC,IAAI,EAAE;EANM,CAVH;EAkBbW,QAAQ,EAAE;IACNyF,OAAO,EAAEkd,oBAAoB,CAAC,YAAD,CADvB;IAENjd,OAAO,EAAEid,oBAAoB,CAAC,UAAD,CAFvB;IAGN/c,OAAO,EAAE+c,oBAAoB,CAAC,SAAD,CAHvB;IAINhd,QAAQ,EAAEgd,oBAAoB,CAAC,YAAD,CAJxB;;IAKN9c,QAAQ,CAACzY,IAAD,EAAO;MACX,QAAQitB,YAAY,CAACjtB,IAAD,CAApB;QACI,KAAK,CAAL;QACA,KAAK,CAAL;QACA,KAAK,CAAL;QACA,KAAK,CAAL;UACI,OAAOu1B,oBAAoB,CAAC,kBAAD,CAApB,CAAyCv1B,IAAzC,CAAP;;QACJ,KAAK,CAAL;QACA,KAAK,CAAL;QACA,KAAK,CAAL;UACI,OAAOu1B,oBAAoB,CAAC,mBAAD,CAApB,CAA0Cv1B,IAA1C,CAAP;MATR;IAWH,CAjBK;;IAkBN0Y,QAAQ,EAAE;EAlBJ,CAlBG;EAsCbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,OADE;IAEVC,IAAI,EAAE,SAFI;IAGV5S,CAAC,EAAE,iBAHO;IAIV6S,EAAE,EAAEgc,sBAJM;IAKVrvB,CAAC,EAAEqvB,sBALO;IAMV/b,EAAE,EAAE+b,sBANM;IAOV/uB,CAAC,EAAE,QAPO;IAQViT,EAAE,EAAE8b,sBARM;IASVpvB,CAAC,EAAE,MATO;IAUVuT,EAAE,EAAE6b,sBAVM;IAWV9uB,CAAC,EAAE,QAXO;IAYVkT,EAAE,EAAE4b,sBAZM;IAaVtvB,CAAC,EAAE,KAbO;IAcV2T,EAAE,EAAE2b;EAdM,CAtCD;EAsDb;EACAxb,aAAa,EAAE,uBAvDF;;EAwDb3C,IAAI,CAACtW,KAAD,EAAQ;IACR,OAAO,iBAAiB2T,IAAjB,CAAsB3T,KAAtB,CAAP;EACH,CA1DY;;EA2DbyL,QAAQ,CAACtK,IAAD,EAAOC,MAAP,EAAesV,OAAf,EAAwB;IAC5B,IAAIvV,IAAI,GAAG,CAAX,EAAc;MACV,OAAO,MAAP;IACH,CAFD,MAGK,IAAIA,IAAI,GAAG,EAAX,EAAe;MAChB,OAAO,OAAP;IACH,CAFI,MAGA,IAAIA,IAAI,GAAG,EAAX,EAAe;MAChB,OAAO,KAAP;IACH,CAFI,MAGA;MACD,OAAO,QAAP;IACH;EACJ,CAxEY;;EAyEb6X,sBAAsB,EAAE,gBAzEX;;EA0EbhV,OAAO,CAACqoB,IAAD,EAAOJ,MAAP,EAAe;IAClB,MAAMxtB,GAAG,GAAG+I,MAAM,CAAC6kB,IAAD,CAAlB;;IACA,QAAQJ,MAAR;MACI,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,KAAL;MACA,KAAK,GAAL;MACA,KAAK,GAAL;QACI,OAAOxtB,GAAG,GAAG,IAAb;;MACJ,KAAK,GAAL;QACI,OAAOA,GAAG,GAAG,KAAb;;MACJ;QACI,OAAOA,GAAG,CAACW,QAAJ,EAAP;IAVR;EAYH,CAxFY;;EAyFb8Q,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AAzFO,CAAjB,C,CA+FA;AACA;AACA;;AACA,MAAMmlB,QAAQ,GAAG;EACb9U,IAAI,EAAE,IADO;EAEbzT,MAAM,EAAE,qGAAqGoE,KAArG,CAA2G,GAA3G,CAFK;EAGbrE,WAAW,EAAE,8DAA8DqE,KAA9D,CAAoE,GAApE,CAHA;EAIb0d,gBAAgB,EAAE,IAJL;EAKb5Z,QAAQ,EAAE,yDAAyD9D,KAAzD,CAA+D,GAA/D,CALG;EAMbmE,aAAa,EAAE,uBAAuBnE,KAAvB,CAA6B,GAA7B,CANF;EAObiE,WAAW,EAAE,uBAAuBjE,KAAvB,CAA6B,GAA7B,CAPA;EAQbqc,kBAAkB,EAAE,IARP;EASblU,aAAa,EAAE,QATF;;EAUb3C,IAAI,CAACtW,KAAD,EAAQ;IACR,OAAO,QAAQ2T,IAAR,CAAa3T,KAAb,CAAP;EACH,CAZY;;EAabyL,QAAQ,CAAC+K,KAAD,EAAQC,OAAR,EAAiBC,OAAjB,EAA0B;IAC9B,IAAIF,KAAK,GAAG,EAAZ,EAAgB;MACZ,OAAOE,OAAO,GAAG,IAAH,GAAU,IAAxB;IACH,CAFD,MAGK;MACD,OAAOA,OAAO,GAAG,IAAH,GAAU,IAAxB;IACH;EACJ,CApBY;;EAqBbnE,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,mBAJQ;IAKZC,GAAG,EAAE,yBALO;IAMZC,IAAI,EAAE,+BANM;IAOZ+T,CAAC,EAAE,WAPS;IAQZyK,EAAE,EAAE,YARQ;IASZC,GAAG,EAAE,kBATO;IAUZC,IAAI,EAAE;EAVM,CArBH;EAiCb/d,QAAQ,EAAE;IACNyF,OAAO,EAAE,kBADH;IAENC,OAAO,EAAE,mBAFH;IAGNC,QAAQ,EAAE,wBAHJ;IAINC,OAAO,EAAE,kBAJH;IAKNC,QAAQ,EAAE,0BALJ;IAMNC,QAAQ,EAAE;EANJ,CAjCG;EAyCbhF,YAAY,EAAE;IACVqF,MAAM,EAAE,QADE;IAEVC,IAAI,EAAE,UAFI;IAGV5S,CAAC,EAAE,UAHO;IAIV6S,EAAE,EAAE,SAJM;IAKVrT,CAAC,EAAE,UALO;IAMVsT,EAAE,EAAE,SANM;IAOVhT,CAAC,EAAE,SAPO;IAQViT,EAAE,EAAE,QARM;IASVtT,CAAC,EAAE,UATO;IAUVuT,EAAE,EAAE,SAVM;IAWVjT,CAAC,EAAE,WAXO;IAYVkT,EAAE,EAAE,UAZM;IAaV1T,CAAC,EAAE,SAbO;IAcV2T,EAAE,EAAE;EAdM,CAzCD;EAyDbE,sBAAsB,EAAE,SAzDX;;EA0DbhV,OAAO,CAACqoB,IAAD,EAAO;IACV,OAAO,KAAKA,IAAZ;EACH,CA5DY;;EA6Dbnc,IAAI,EAAE;IACFL,GAAG,EAAE,CADH;IAEFC,GAAG,EAAE,CAFH,CAEK;;EAFL;AA7DO,CAAjB,C,CAmEA;AACA;AACA;AACA;;AACA,MAAMolB,UAAU,GAAG;EACf/U,IAAI,EAAE,OADS;EAEfzT,MAAM,EAAE,wCAAwCoE,KAAxC,CAA8C,GAA9C,CAFO;EAGfrE,WAAW,EAAE,yCAAyCqE,KAAzC,CAA+C,GAA/C,CAHE;EAIf8D,QAAQ,EAAE,8BAA8B9D,KAA9B,CAAoC,GAApC,CAJK;EAKfmE,aAAa,EAAE,uBAAuBnE,KAAvB,CAA6B,GAA7B,CALA;EAMfiE,WAAW,EAAE,gBAAgBjE,KAAhB,CAAsB,GAAtB,CANE;EAOfyB,cAAc,EAAE;IACZlB,EAAE,EAAE,OADQ;IAEZD,GAAG,EAAE,UAFO;IAGZE,CAAC,EAAE,YAHS;IAIZC,EAAE,EAAE,WAJQ;IAKZC,GAAG,EAAE,iBALO;IAMZC,IAAI,EAAE,qBANM;IAOZ+T,CAAC,EAAE,UAPS;IAQZyK,EAAE,EAAE,WARQ;IASZC,GAAG,EAAE,iBATO;IAUZC,IAAI,EAAE;EAVM,CAPD;EAmBflX,aAAa,EAAE,mBAnBA;;EAoBfkQ,YAAY,CAAChoB,IAAD,EAAOsK,QAAP,EAAiB;IACzB,IAAItK,IAAI,KAAK,EAAb,EAAiB;MACbA,IAAI,GAAG,CAAP;IACH;;IACD,IAAIsK,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,IAAlC,IACAA,QAAQ,KAAK,IADjB,EACuB;MACnB,OAAOtK,IAAP;IACH,CAHD,MAIK,IAAIsK,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,IAAtC,EAA4C;MAC7C,OAAOtK,IAAI,GAAG,EAAd;IACH,CAFI,MAGA;MACD;MACA,OAAOA,IAAI,IAAI,EAAR,GAAaA,IAAb,GAAoBA,IAAI,GAAG,EAAlC;IACH;EACJ,CAnCc;;EAoCfsK,QAAQ,CAACtK,IAAD,EAAOC,MAAP,EAAesV,OAAf,EAAwB;IAC5B,IAAIqQ,EAAE,GAAG5lB,IAAI,GAAG,GAAP,GAAaC,MAAtB;;IACA,IAAI2lB,EAAE,GAAG,GAAT,EAAc;MACV,OAAO,IAAP;IACH,CAFD,MAGK,IAAIA,EAAE,GAAG,GAAT,EAAc;MACf,OAAO,IAAP;IACH,CAFI,MAGA,IAAIA,EAAE,GAAG,IAAT,EAAe;MAChB,OAAO,IAAP;IACH,CAFI,MAGA,IAAIA,EAAE,GAAG,IAAT,EAAe;MAChB,OAAO,IAAP;IACH,CAFI,MAGA,IAAIA,EAAE,GAAG,IAAT,EAAe;MAChB,OAAO,IAAP;IACH,CAFI,MAGA;MACD,OAAO,IAAP;IACH;EACJ,CAxDc;;EAyDf3U,QAAQ,EAAE;IACNyF,OAAO,EAAE,QADH;IAENC,OAAO,EAAE,QAFH;IAGNC,QAAQ,EAAE,WAHJ;IAINC,OAAO,EAAE,QAJH;IAKNC,QAAQ,EAAE,WALJ;IAMNC,QAAQ,EAAE;EANJ,CAzDK;EAiEfc,sBAAsB,EAAE,gBAjET;;EAkEfhV,OAAO,CAACqoB,IAAD,EAAOJ,MAAP,EAAe;IAClB,MAAMxtB,GAAG,GAAG+I,MAAM,CAAC6kB,IAAD,CAAlB;;IACA,QAAQJ,MAAR;MACI,KAAK,GAAL;MACA,KAAK,GAAL;MACA,KAAK,KAAL;QACI,OAAOxtB,GAAG,GAAG,GAAb;;MACJ,KAAK,GAAL;QACI,OAAOA,GAAG,GAAG,GAAb;;MACJ,KAAK,GAAL;MACA,KAAK,GAAL;QACI,OAAOA,GAAG,GAAG,GAAb;;MACJ;QACI,OAAOA,GAAG,CAACW,QAAJ,EAAP;IAXR;EAaH,CAjFc;;EAkFf8T,YAAY,EAAE;IACVqF,MAAM,EAAE,KADE;IAEVC,IAAI,EAAE,KAFI;IAGV5S,CAAC,EAAE,IAHO;IAIV6S,EAAE,EAAE,MAJM;IAKVrT,CAAC,EAAE,MALO;IAMVsT,EAAE,EAAE,OANM;IAOVhT,CAAC,EAAE,MAPO;IAQViT,EAAE,EAAE,OARM;IASVtT,CAAC,EAAE,KATO;IAUVuT,EAAE,EAAE,MAVM;IAWVjT,CAAC,EAAE,MAXO;IAYVkT,EAAE,EAAE,OAZM;IAaV1T,CAAC,EAAE,KAbO;IAcV2T,EAAE,EAAE;EAdM,CAlFC;EAkGf5I,IAAI,EAAE;IACF;IACAL,GAAG,EAAE,CAFH;IAGFC,GAAG,EAAE,CAHH,CAGK;;EAHL;AAlGS,CAAnB;AAyGA;AACA;AACA;;AAEA,SAASb,GAAT,EAAcie,QAAd,EAAwBE,QAAxB,EAAkCO,QAAlC,EAA4CS,QAA5C,EAAsDC,QAAtD,EAAgEE,QAAhE,EAA0EtO,YAA1E,EAAwFwO,UAAxF,EAAoG3f,KAApG,EAA2GggB,UAA3G,EAAuHK,QAAvH,EAAiIG,UAAjI,EAA6IG,UAA7I,EAAyJE,QAAzJ,EAAmKK,QAAnK,EAA6K7I,UAA7K,EAAyLiJ,QAAzL,EAAmM5pB,MAAnM,EAA2MS,kBAA3M,EAA+NnB,WAA/N,EAA4O+T,SAA5O,EAAuPjT,QAAvP,EAAiQkZ,kBAAjQ,EAAqR2Q,QAArR,EAA+RC,QAA/R,EAAySG,QAAzS,EAAmTI,QAAnT,EAA6TD,QAA7T,EAAuUE,QAAvU,EAAiV5G,OAAjV,EAA0VvqB,OAA1V,EAAmWwqB,QAAnW,EAA6WxrB,MAA7W,EAAqXQ,WAArX,EAAkYirB,aAAlY,EAAiZljB,gBAAjZ,EAAma0jB,MAAna,EAA2anjB,WAAW,IAAIqjB,SAA1b,EAAqczjB,WAArc,EAAkdG,UAAld,EAA8dupB,QAA9d,EAAweC,QAAxe,EAAkfC,QAAlf,EAA4fI,QAA5f,EAAsgBC,QAAtgB,EAAghBjR,WAAhhB,EAA6hBwR,QAA7hB,EAAuiBC,QAAviB,EAAijBE,QAAjjB,EAA2jBC,QAA3jB,EAAqkBK,UAArkB,EAAilBI,QAAjlB,EAA2lB3I,SAA3lB,EAAsmBgJ,QAAtmB,EAAgnBC,UAAhnB,EAA4nBE,QAA5nB,EAAsoBI,QAAtoB,EAAgpBrmB,WAAhpB,EAA6pBH,SAA7pB,EAAwqB2mB,QAAxqB,EAAkrBE,QAAlrB,EAA4rBC,QAA5rB,EAAssBrlB,OAAtsB,EAA+sBQ,QAA/sB,EAAytB8kB,QAAztB,EAAmuBE,UAAnuB,EAA+uBD,QAA/uB,EAAyvBK,QAAzvB,EAAmwBS,QAAnwB,EAA6wB1U,YAA7wB,EAA2xB8J,UAA3xB,EAAuyB6K,QAAvyB,EAAizBC,UAAjzB"},"metadata":{},"sourceType":"module"}